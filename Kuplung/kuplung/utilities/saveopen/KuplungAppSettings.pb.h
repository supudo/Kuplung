// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: KuplungAppSettings.proto
// Protobuf C++ Version: 5.29.5

#ifndef KuplungAppSettings_2eproto_2epb_2eh
#define KuplungAppSettings_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029005
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "KuplungDefinitions.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_KuplungAppSettings_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_KuplungAppSettings_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_KuplungAppSettings_2eproto;
namespace KuplungApp {
class CameraSettings;
struct CameraSettingsDefaultTypeInternal;
extern CameraSettingsDefaultTypeInternal _CameraSettings_default_instance_;
class GUISettings;
struct GUISettingsDefaultTypeInternal;
extern GUISettingsDefaultTypeInternal _GUISettings_default_instance_;
class GridSettings;
struct GridSettingsDefaultTypeInternal;
extern GridSettingsDefaultTypeInternal _GridSettings_default_instance_;
class LightObject;
struct LightObjectDefaultTypeInternal;
extern LightObjectDefaultTypeInternal _LightObject_default_instance_;
}  // namespace KuplungApp
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace KuplungApp {

// ===================================================================


// -------------------------------------------------------------------

class GridSettings final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:KuplungApp.GridSettings) */ {
 public:
  inline GridSettings() : GridSettings(nullptr) {}
  ~GridSettings() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GridSettings* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GridSettings));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GridSettings(
      ::google::protobuf::internal::ConstantInitialized);

  inline GridSettings(const GridSettings& from) : GridSettings(nullptr, from) {}
  inline GridSettings(GridSettings&& from) noexcept
      : GridSettings(nullptr, std::move(from)) {}
  inline GridSettings& operator=(const GridSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline GridSettings& operator=(GridSettings&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GridSettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const GridSettings* internal_default_instance() {
    return reinterpret_cast<const GridSettings*>(
        &_GridSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GridSettings& a, GridSettings& b) { a.Swap(&b); }
  inline void Swap(GridSettings* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GridSettings* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GridSettings* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GridSettings>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GridSettings& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GridSettings& from) { GridSettings::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GridSettings* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "KuplungApp.GridSettings"; }

 protected:
  explicit GridSettings(::google::protobuf::Arena* arena);
  GridSettings(::google::protobuf::Arena* arena, const GridSettings& from);
  GridSettings(::google::protobuf::Arena* arena, GridSettings&& from) noexcept
      : GridSettings(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPositionXFieldNumber = 3,
    kPositionYFieldNumber = 4,
    kPositionZFieldNumber = 5,
    kRotateXFieldNumber = 6,
    kRotateYFieldNumber = 7,
    kRotateZFieldNumber = 8,
    kScaleXFieldNumber = 9,
    kScaleYFieldNumber = 10,
    kScaleZFieldNumber = 11,
    kActAsMirrorFieldNumber = 1,
    kGridSizeFieldNumber = 2,
    kTransparencyFieldNumber = 12,
    kShowGridFieldNumber = 13,
  };
  // required .KuplungApp.ObjectCoordinate positionX = 3;
  bool has_positionx() const;
  void clear_positionx() ;
  const ::KuplungApp::ObjectCoordinate& positionx() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_positionx();
  ::KuplungApp::ObjectCoordinate* mutable_positionx();
  void set_allocated_positionx(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_positionx(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_positionx();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_positionx() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_positionx();

  public:
  // required .KuplungApp.ObjectCoordinate positionY = 4;
  bool has_positiony() const;
  void clear_positiony() ;
  const ::KuplungApp::ObjectCoordinate& positiony() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_positiony();
  ::KuplungApp::ObjectCoordinate* mutable_positiony();
  void set_allocated_positiony(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_positiony(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_positiony();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_positiony() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_positiony();

  public:
  // required .KuplungApp.ObjectCoordinate positionZ = 5;
  bool has_positionz() const;
  void clear_positionz() ;
  const ::KuplungApp::ObjectCoordinate& positionz() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_positionz();
  ::KuplungApp::ObjectCoordinate* mutable_positionz();
  void set_allocated_positionz(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_positionz(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_positionz();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_positionz() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_positionz();

  public:
  // required .KuplungApp.ObjectCoordinate rotateX = 6;
  bool has_rotatex() const;
  void clear_rotatex() ;
  const ::KuplungApp::ObjectCoordinate& rotatex() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_rotatex();
  ::KuplungApp::ObjectCoordinate* mutable_rotatex();
  void set_allocated_rotatex(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_rotatex(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_rotatex();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_rotatex() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_rotatex();

  public:
  // required .KuplungApp.ObjectCoordinate rotateY = 7;
  bool has_rotatey() const;
  void clear_rotatey() ;
  const ::KuplungApp::ObjectCoordinate& rotatey() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_rotatey();
  ::KuplungApp::ObjectCoordinate* mutable_rotatey();
  void set_allocated_rotatey(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_rotatey(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_rotatey();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_rotatey() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_rotatey();

  public:
  // required .KuplungApp.ObjectCoordinate rotateZ = 8;
  bool has_rotatez() const;
  void clear_rotatez() ;
  const ::KuplungApp::ObjectCoordinate& rotatez() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_rotatez();
  ::KuplungApp::ObjectCoordinate* mutable_rotatez();
  void set_allocated_rotatez(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_rotatez(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_rotatez();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_rotatez() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_rotatez();

  public:
  // required .KuplungApp.ObjectCoordinate scaleX = 9;
  bool has_scalex() const;
  void clear_scalex() ;
  const ::KuplungApp::ObjectCoordinate& scalex() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_scalex();
  ::KuplungApp::ObjectCoordinate* mutable_scalex();
  void set_allocated_scalex(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_scalex(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_scalex();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_scalex() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_scalex();

  public:
  // required .KuplungApp.ObjectCoordinate scaleY = 10;
  bool has_scaley() const;
  void clear_scaley() ;
  const ::KuplungApp::ObjectCoordinate& scaley() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_scaley();
  ::KuplungApp::ObjectCoordinate* mutable_scaley();
  void set_allocated_scaley(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_scaley(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_scaley();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_scaley() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_scaley();

  public:
  // required .KuplungApp.ObjectCoordinate scaleZ = 11;
  bool has_scalez() const;
  void clear_scalez() ;
  const ::KuplungApp::ObjectCoordinate& scalez() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_scalez();
  ::KuplungApp::ObjectCoordinate* mutable_scalez();
  void set_allocated_scalez(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_scalez(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_scalez();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_scalez() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_scalez();

  public:
  // required bool actAsMirror = 1;
  bool has_actasmirror() const;
  void clear_actasmirror() ;
  bool actasmirror() const;
  void set_actasmirror(bool value);

  private:
  bool _internal_actasmirror() const;
  void _internal_set_actasmirror(bool value);

  public:
  // required int32 gridSize = 2;
  bool has_gridsize() const;
  void clear_gridsize() ;
  ::int32_t gridsize() const;
  void set_gridsize(::int32_t value);

  private:
  ::int32_t _internal_gridsize() const;
  void _internal_set_gridsize(::int32_t value);

  public:
  // required float transparency = 12;
  bool has_transparency() const;
  void clear_transparency() ;
  float transparency() const;
  void set_transparency(float value);

  private:
  float _internal_transparency() const;
  void _internal_set_transparency(float value);

  public:
  // required int32 showGrid = 13;
  bool has_showgrid() const;
  void clear_showgrid() ;
  ::int32_t showgrid() const;
  void set_showgrid(::int32_t value);

  private:
  ::int32_t _internal_showgrid() const;
  void _internal_set_showgrid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:KuplungApp.GridSettings)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 13, 9,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GridSettings& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::KuplungApp::ObjectCoordinate* positionx_;
    ::KuplungApp::ObjectCoordinate* positiony_;
    ::KuplungApp::ObjectCoordinate* positionz_;
    ::KuplungApp::ObjectCoordinate* rotatex_;
    ::KuplungApp::ObjectCoordinate* rotatey_;
    ::KuplungApp::ObjectCoordinate* rotatez_;
    ::KuplungApp::ObjectCoordinate* scalex_;
    ::KuplungApp::ObjectCoordinate* scaley_;
    ::KuplungApp::ObjectCoordinate* scalez_;
    bool actasmirror_;
    ::int32_t gridsize_;
    float transparency_;
    ::int32_t showgrid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_KuplungAppSettings_2eproto;
};
// -------------------------------------------------------------------

class CameraSettings final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:KuplungApp.CameraSettings) */ {
 public:
  inline CameraSettings() : CameraSettings(nullptr) {}
  ~CameraSettings() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CameraSettings* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CameraSettings));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CameraSettings(
      ::google::protobuf::internal::ConstantInitialized);

  inline CameraSettings(const CameraSettings& from) : CameraSettings(nullptr, from) {}
  inline CameraSettings(CameraSettings&& from) noexcept
      : CameraSettings(nullptr, std::move(from)) {}
  inline CameraSettings& operator=(const CameraSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline CameraSettings& operator=(CameraSettings&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CameraSettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const CameraSettings* internal_default_instance() {
    return reinterpret_cast<const CameraSettings*>(
        &_CameraSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CameraSettings& a, CameraSettings& b) { a.Swap(&b); }
  inline void Swap(CameraSettings* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CameraSettings* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CameraSettings* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CameraSettings>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CameraSettings& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CameraSettings& from) { CameraSettings::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CameraSettings* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "KuplungApp.CameraSettings"; }

 protected:
  explicit CameraSettings(::google::protobuf::Arena* arena);
  CameraSettings(::google::protobuf::Arena* arena, const CameraSettings& from);
  CameraSettings(::google::protobuf::Arena* arena, CameraSettings&& from) noexcept
      : CameraSettings(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraPositionFieldNumber = 1,
    kViewEyeFieldNumber = 2,
    kViewCenterFieldNumber = 3,
    kViewUpFieldNumber = 4,
    kPositionXFieldNumber = 5,
    kPositionYFieldNumber = 6,
    kPositionZFieldNumber = 7,
    kRotateXFieldNumber = 8,
    kRotateYFieldNumber = 9,
    kRotateZFieldNumber = 10,
    kRotateCenterXFieldNumber = 11,
    kRotateCenterYFieldNumber = 12,
    kRotateCenterZFieldNumber = 13,
  };
  // required .KuplungApp.Vec3 cameraPosition = 1;
  bool has_cameraposition() const;
  void clear_cameraposition() ;
  const ::KuplungApp::Vec3& cameraposition() const;
  PROTOBUF_NODISCARD ::KuplungApp::Vec3* release_cameraposition();
  ::KuplungApp::Vec3* mutable_cameraposition();
  void set_allocated_cameraposition(::KuplungApp::Vec3* value);
  void unsafe_arena_set_allocated_cameraposition(::KuplungApp::Vec3* value);
  ::KuplungApp::Vec3* unsafe_arena_release_cameraposition();

  private:
  const ::KuplungApp::Vec3& _internal_cameraposition() const;
  ::KuplungApp::Vec3* _internal_mutable_cameraposition();

  public:
  // required .KuplungApp.Vec3 View_Eye = 2;
  bool has_view_eye() const;
  void clear_view_eye() ;
  const ::KuplungApp::Vec3& view_eye() const;
  PROTOBUF_NODISCARD ::KuplungApp::Vec3* release_view_eye();
  ::KuplungApp::Vec3* mutable_view_eye();
  void set_allocated_view_eye(::KuplungApp::Vec3* value);
  void unsafe_arena_set_allocated_view_eye(::KuplungApp::Vec3* value);
  ::KuplungApp::Vec3* unsafe_arena_release_view_eye();

  private:
  const ::KuplungApp::Vec3& _internal_view_eye() const;
  ::KuplungApp::Vec3* _internal_mutable_view_eye();

  public:
  // required .KuplungApp.Vec3 View_Center = 3;
  bool has_view_center() const;
  void clear_view_center() ;
  const ::KuplungApp::Vec3& view_center() const;
  PROTOBUF_NODISCARD ::KuplungApp::Vec3* release_view_center();
  ::KuplungApp::Vec3* mutable_view_center();
  void set_allocated_view_center(::KuplungApp::Vec3* value);
  void unsafe_arena_set_allocated_view_center(::KuplungApp::Vec3* value);
  ::KuplungApp::Vec3* unsafe_arena_release_view_center();

  private:
  const ::KuplungApp::Vec3& _internal_view_center() const;
  ::KuplungApp::Vec3* _internal_mutable_view_center();

  public:
  // required .KuplungApp.Vec3 View_Up = 4;
  bool has_view_up() const;
  void clear_view_up() ;
  const ::KuplungApp::Vec3& view_up() const;
  PROTOBUF_NODISCARD ::KuplungApp::Vec3* release_view_up();
  ::KuplungApp::Vec3* mutable_view_up();
  void set_allocated_view_up(::KuplungApp::Vec3* value);
  void unsafe_arena_set_allocated_view_up(::KuplungApp::Vec3* value);
  ::KuplungApp::Vec3* unsafe_arena_release_view_up();

  private:
  const ::KuplungApp::Vec3& _internal_view_up() const;
  ::KuplungApp::Vec3* _internal_mutable_view_up();

  public:
  // required .KuplungApp.ObjectCoordinate positionX = 5;
  bool has_positionx() const;
  void clear_positionx() ;
  const ::KuplungApp::ObjectCoordinate& positionx() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_positionx();
  ::KuplungApp::ObjectCoordinate* mutable_positionx();
  void set_allocated_positionx(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_positionx(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_positionx();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_positionx() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_positionx();

  public:
  // required .KuplungApp.ObjectCoordinate positionY = 6;
  bool has_positiony() const;
  void clear_positiony() ;
  const ::KuplungApp::ObjectCoordinate& positiony() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_positiony();
  ::KuplungApp::ObjectCoordinate* mutable_positiony();
  void set_allocated_positiony(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_positiony(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_positiony();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_positiony() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_positiony();

  public:
  // required .KuplungApp.ObjectCoordinate positionZ = 7;
  bool has_positionz() const;
  void clear_positionz() ;
  const ::KuplungApp::ObjectCoordinate& positionz() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_positionz();
  ::KuplungApp::ObjectCoordinate* mutable_positionz();
  void set_allocated_positionz(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_positionz(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_positionz();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_positionz() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_positionz();

  public:
  // required .KuplungApp.ObjectCoordinate rotateX = 8;
  bool has_rotatex() const;
  void clear_rotatex() ;
  const ::KuplungApp::ObjectCoordinate& rotatex() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_rotatex();
  ::KuplungApp::ObjectCoordinate* mutable_rotatex();
  void set_allocated_rotatex(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_rotatex(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_rotatex();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_rotatex() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_rotatex();

  public:
  // required .KuplungApp.ObjectCoordinate rotateY = 9;
  bool has_rotatey() const;
  void clear_rotatey() ;
  const ::KuplungApp::ObjectCoordinate& rotatey() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_rotatey();
  ::KuplungApp::ObjectCoordinate* mutable_rotatey();
  void set_allocated_rotatey(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_rotatey(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_rotatey();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_rotatey() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_rotatey();

  public:
  // required .KuplungApp.ObjectCoordinate rotateZ = 10;
  bool has_rotatez() const;
  void clear_rotatez() ;
  const ::KuplungApp::ObjectCoordinate& rotatez() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_rotatez();
  ::KuplungApp::ObjectCoordinate* mutable_rotatez();
  void set_allocated_rotatez(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_rotatez(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_rotatez();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_rotatez() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_rotatez();

  public:
  // required .KuplungApp.ObjectCoordinate rotateCenterX = 11;
  bool has_rotatecenterx() const;
  void clear_rotatecenterx() ;
  const ::KuplungApp::ObjectCoordinate& rotatecenterx() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_rotatecenterx();
  ::KuplungApp::ObjectCoordinate* mutable_rotatecenterx();
  void set_allocated_rotatecenterx(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_rotatecenterx(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_rotatecenterx();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_rotatecenterx() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_rotatecenterx();

  public:
  // required .KuplungApp.ObjectCoordinate rotateCenterY = 12;
  bool has_rotatecentery() const;
  void clear_rotatecentery() ;
  const ::KuplungApp::ObjectCoordinate& rotatecentery() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_rotatecentery();
  ::KuplungApp::ObjectCoordinate* mutable_rotatecentery();
  void set_allocated_rotatecentery(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_rotatecentery(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_rotatecentery();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_rotatecentery() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_rotatecentery();

  public:
  // required .KuplungApp.ObjectCoordinate rotateCenterZ = 13;
  bool has_rotatecenterz() const;
  void clear_rotatecenterz() ;
  const ::KuplungApp::ObjectCoordinate& rotatecenterz() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_rotatecenterz();
  ::KuplungApp::ObjectCoordinate* mutable_rotatecenterz();
  void set_allocated_rotatecenterz(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_rotatecenterz(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_rotatecenterz();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_rotatecenterz() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_rotatecenterz();

  public:
  // @@protoc_insertion_point(class_scope:KuplungApp.CameraSettings)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 13, 13,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CameraSettings& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::KuplungApp::Vec3* cameraposition_;
    ::KuplungApp::Vec3* view_eye_;
    ::KuplungApp::Vec3* view_center_;
    ::KuplungApp::Vec3* view_up_;
    ::KuplungApp::ObjectCoordinate* positionx_;
    ::KuplungApp::ObjectCoordinate* positiony_;
    ::KuplungApp::ObjectCoordinate* positionz_;
    ::KuplungApp::ObjectCoordinate* rotatex_;
    ::KuplungApp::ObjectCoordinate* rotatey_;
    ::KuplungApp::ObjectCoordinate* rotatez_;
    ::KuplungApp::ObjectCoordinate* rotatecenterx_;
    ::KuplungApp::ObjectCoordinate* rotatecentery_;
    ::KuplungApp::ObjectCoordinate* rotatecenterz_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_KuplungAppSettings_2eproto;
};
// -------------------------------------------------------------------

class LightObject final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:KuplungApp.LightObject) */ {
 public:
  inline LightObject() : LightObject(nullptr) {}
  ~LightObject() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LightObject* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LightObject));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LightObject(
      ::google::protobuf::internal::ConstantInitialized);

  inline LightObject(const LightObject& from) : LightObject(nullptr, from) {}
  inline LightObject(LightObject&& from) noexcept
      : LightObject(nullptr, std::move(from)) {}
  inline LightObject& operator=(const LightObject& from) {
    CopyFrom(from);
    return *this;
  }
  inline LightObject& operator=(LightObject&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LightObject& default_instance() {
    return *internal_default_instance();
  }
  static inline const LightObject* internal_default_instance() {
    return reinterpret_cast<const LightObject*>(
        &_LightObject_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(LightObject& a, LightObject& b) { a.Swap(&b); }
  inline void Swap(LightObject* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LightObject* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LightObject* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LightObject>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LightObject& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LightObject& from) { LightObject::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LightObject* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "KuplungApp.LightObject"; }

 protected:
  explicit LightObject(::google::protobuf::Arena* arena);
  LightObject(::google::protobuf::Arena* arena, const LightObject& from);
  LightObject(::google::protobuf::Arena* arena, LightObject&& from) noexcept
      : LightObject(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTitleFieldNumber = 1,
    kDescriptionFieldNumber = 2,
    kPositionXFieldNumber = 7,
    kPositionYFieldNumber = 8,
    kPositionZFieldNumber = 9,
    kDirectionXFieldNumber = 10,
    kDirectionYFieldNumber = 11,
    kDirectionZFieldNumber = 12,
    kScaleXFieldNumber = 13,
    kScaleYFieldNumber = 14,
    kScaleZFieldNumber = 15,
    kRotateXFieldNumber = 16,
    kRotateYFieldNumber = 17,
    kRotateZFieldNumber = 18,
    kRotateCenterXFieldNumber = 19,
    kRotateCenterYFieldNumber = 20,
    kRotateCenterZFieldNumber = 21,
    kAmbientFieldNumber = 22,
    kDiffuseFieldNumber = 23,
    kSpecularFieldNumber = 24,
    kLCutOffFieldNumber = 25,
    kLOuterCutOffFieldNumber = 26,
    kLConstantFieldNumber = 27,
    kLLinearFieldNumber = 28,
    kLQuadraticFieldNumber = 29,
    kTypeFieldNumber = 3,
    kShowLampObjectFieldNumber = 4,
    kShowLampDirectionFieldNumber = 5,
    kShowInWireFieldNumber = 6,
  };
  // required string title = 1;
  bool has_title() const;
  void clear_title() ;
  const std::string& title() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* value);

  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(
      const std::string& value);
  std::string* _internal_mutable_title();

  public:
  // required string description = 2;
  bool has_description() const;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // required .KuplungApp.ObjectCoordinate positionX = 7;
  bool has_positionx() const;
  void clear_positionx() ;
  const ::KuplungApp::ObjectCoordinate& positionx() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_positionx();
  ::KuplungApp::ObjectCoordinate* mutable_positionx();
  void set_allocated_positionx(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_positionx(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_positionx();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_positionx() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_positionx();

  public:
  // required .KuplungApp.ObjectCoordinate positionY = 8;
  bool has_positiony() const;
  void clear_positiony() ;
  const ::KuplungApp::ObjectCoordinate& positiony() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_positiony();
  ::KuplungApp::ObjectCoordinate* mutable_positiony();
  void set_allocated_positiony(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_positiony(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_positiony();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_positiony() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_positiony();

  public:
  // required .KuplungApp.ObjectCoordinate positionZ = 9;
  bool has_positionz() const;
  void clear_positionz() ;
  const ::KuplungApp::ObjectCoordinate& positionz() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_positionz();
  ::KuplungApp::ObjectCoordinate* mutable_positionz();
  void set_allocated_positionz(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_positionz(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_positionz();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_positionz() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_positionz();

  public:
  // required .KuplungApp.ObjectCoordinate directionX = 10;
  bool has_directionx() const;
  void clear_directionx() ;
  const ::KuplungApp::ObjectCoordinate& directionx() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_directionx();
  ::KuplungApp::ObjectCoordinate* mutable_directionx();
  void set_allocated_directionx(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_directionx(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_directionx();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_directionx() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_directionx();

  public:
  // required .KuplungApp.ObjectCoordinate directionY = 11;
  bool has_directiony() const;
  void clear_directiony() ;
  const ::KuplungApp::ObjectCoordinate& directiony() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_directiony();
  ::KuplungApp::ObjectCoordinate* mutable_directiony();
  void set_allocated_directiony(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_directiony(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_directiony();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_directiony() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_directiony();

  public:
  // required .KuplungApp.ObjectCoordinate directionZ = 12;
  bool has_directionz() const;
  void clear_directionz() ;
  const ::KuplungApp::ObjectCoordinate& directionz() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_directionz();
  ::KuplungApp::ObjectCoordinate* mutable_directionz();
  void set_allocated_directionz(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_directionz(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_directionz();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_directionz() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_directionz();

  public:
  // required .KuplungApp.ObjectCoordinate scaleX = 13;
  bool has_scalex() const;
  void clear_scalex() ;
  const ::KuplungApp::ObjectCoordinate& scalex() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_scalex();
  ::KuplungApp::ObjectCoordinate* mutable_scalex();
  void set_allocated_scalex(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_scalex(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_scalex();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_scalex() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_scalex();

  public:
  // required .KuplungApp.ObjectCoordinate scaleY = 14;
  bool has_scaley() const;
  void clear_scaley() ;
  const ::KuplungApp::ObjectCoordinate& scaley() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_scaley();
  ::KuplungApp::ObjectCoordinate* mutable_scaley();
  void set_allocated_scaley(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_scaley(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_scaley();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_scaley() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_scaley();

  public:
  // required .KuplungApp.ObjectCoordinate scaleZ = 15;
  bool has_scalez() const;
  void clear_scalez() ;
  const ::KuplungApp::ObjectCoordinate& scalez() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_scalez();
  ::KuplungApp::ObjectCoordinate* mutable_scalez();
  void set_allocated_scalez(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_scalez(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_scalez();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_scalez() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_scalez();

  public:
  // required .KuplungApp.ObjectCoordinate rotateX = 16;
  bool has_rotatex() const;
  void clear_rotatex() ;
  const ::KuplungApp::ObjectCoordinate& rotatex() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_rotatex();
  ::KuplungApp::ObjectCoordinate* mutable_rotatex();
  void set_allocated_rotatex(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_rotatex(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_rotatex();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_rotatex() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_rotatex();

  public:
  // required .KuplungApp.ObjectCoordinate rotateY = 17;
  bool has_rotatey() const;
  void clear_rotatey() ;
  const ::KuplungApp::ObjectCoordinate& rotatey() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_rotatey();
  ::KuplungApp::ObjectCoordinate* mutable_rotatey();
  void set_allocated_rotatey(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_rotatey(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_rotatey();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_rotatey() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_rotatey();

  public:
  // required .KuplungApp.ObjectCoordinate rotateZ = 18;
  bool has_rotatez() const;
  void clear_rotatez() ;
  const ::KuplungApp::ObjectCoordinate& rotatez() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_rotatez();
  ::KuplungApp::ObjectCoordinate* mutable_rotatez();
  void set_allocated_rotatez(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_rotatez(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_rotatez();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_rotatez() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_rotatez();

  public:
  // required .KuplungApp.ObjectCoordinate rotateCenterX = 19;
  bool has_rotatecenterx() const;
  void clear_rotatecenterx() ;
  const ::KuplungApp::ObjectCoordinate& rotatecenterx() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_rotatecenterx();
  ::KuplungApp::ObjectCoordinate* mutable_rotatecenterx();
  void set_allocated_rotatecenterx(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_rotatecenterx(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_rotatecenterx();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_rotatecenterx() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_rotatecenterx();

  public:
  // required .KuplungApp.ObjectCoordinate rotateCenterY = 20;
  bool has_rotatecentery() const;
  void clear_rotatecentery() ;
  const ::KuplungApp::ObjectCoordinate& rotatecentery() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_rotatecentery();
  ::KuplungApp::ObjectCoordinate* mutable_rotatecentery();
  void set_allocated_rotatecentery(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_rotatecentery(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_rotatecentery();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_rotatecentery() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_rotatecentery();

  public:
  // required .KuplungApp.ObjectCoordinate rotateCenterZ = 21;
  bool has_rotatecenterz() const;
  void clear_rotatecenterz() ;
  const ::KuplungApp::ObjectCoordinate& rotatecenterz() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_rotatecenterz();
  ::KuplungApp::ObjectCoordinate* mutable_rotatecenterz();
  void set_allocated_rotatecenterz(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_rotatecenterz(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_rotatecenterz();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_rotatecenterz() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_rotatecenterz();

  public:
  // required .KuplungApp.MaterialColor ambient = 22;
  bool has_ambient() const;
  void clear_ambient() ;
  const ::KuplungApp::MaterialColor& ambient() const;
  PROTOBUF_NODISCARD ::KuplungApp::MaterialColor* release_ambient();
  ::KuplungApp::MaterialColor* mutable_ambient();
  void set_allocated_ambient(::KuplungApp::MaterialColor* value);
  void unsafe_arena_set_allocated_ambient(::KuplungApp::MaterialColor* value);
  ::KuplungApp::MaterialColor* unsafe_arena_release_ambient();

  private:
  const ::KuplungApp::MaterialColor& _internal_ambient() const;
  ::KuplungApp::MaterialColor* _internal_mutable_ambient();

  public:
  // required .KuplungApp.MaterialColor diffuse = 23;
  bool has_diffuse() const;
  void clear_diffuse() ;
  const ::KuplungApp::MaterialColor& diffuse() const;
  PROTOBUF_NODISCARD ::KuplungApp::MaterialColor* release_diffuse();
  ::KuplungApp::MaterialColor* mutable_diffuse();
  void set_allocated_diffuse(::KuplungApp::MaterialColor* value);
  void unsafe_arena_set_allocated_diffuse(::KuplungApp::MaterialColor* value);
  ::KuplungApp::MaterialColor* unsafe_arena_release_diffuse();

  private:
  const ::KuplungApp::MaterialColor& _internal_diffuse() const;
  ::KuplungApp::MaterialColor* _internal_mutable_diffuse();

  public:
  // required .KuplungApp.MaterialColor specular = 24;
  bool has_specular() const;
  void clear_specular() ;
  const ::KuplungApp::MaterialColor& specular() const;
  PROTOBUF_NODISCARD ::KuplungApp::MaterialColor* release_specular();
  ::KuplungApp::MaterialColor* mutable_specular();
  void set_allocated_specular(::KuplungApp::MaterialColor* value);
  void unsafe_arena_set_allocated_specular(::KuplungApp::MaterialColor* value);
  ::KuplungApp::MaterialColor* unsafe_arena_release_specular();

  private:
  const ::KuplungApp::MaterialColor& _internal_specular() const;
  ::KuplungApp::MaterialColor* _internal_mutable_specular();

  public:
  // required .KuplungApp.ObjectCoordinate lCutOff = 25;
  bool has_lcutoff() const;
  void clear_lcutoff() ;
  const ::KuplungApp::ObjectCoordinate& lcutoff() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_lcutoff();
  ::KuplungApp::ObjectCoordinate* mutable_lcutoff();
  void set_allocated_lcutoff(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_lcutoff(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_lcutoff();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_lcutoff() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_lcutoff();

  public:
  // required .KuplungApp.ObjectCoordinate lOuterCutOff = 26;
  bool has_loutercutoff() const;
  void clear_loutercutoff() ;
  const ::KuplungApp::ObjectCoordinate& loutercutoff() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_loutercutoff();
  ::KuplungApp::ObjectCoordinate* mutable_loutercutoff();
  void set_allocated_loutercutoff(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_loutercutoff(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_loutercutoff();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_loutercutoff() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_loutercutoff();

  public:
  // required .KuplungApp.ObjectCoordinate lConstant = 27;
  bool has_lconstant() const;
  void clear_lconstant() ;
  const ::KuplungApp::ObjectCoordinate& lconstant() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_lconstant();
  ::KuplungApp::ObjectCoordinate* mutable_lconstant();
  void set_allocated_lconstant(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_lconstant(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_lconstant();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_lconstant() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_lconstant();

  public:
  // required .KuplungApp.ObjectCoordinate lLinear = 28;
  bool has_llinear() const;
  void clear_llinear() ;
  const ::KuplungApp::ObjectCoordinate& llinear() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_llinear();
  ::KuplungApp::ObjectCoordinate* mutable_llinear();
  void set_allocated_llinear(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_llinear(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_llinear();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_llinear() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_llinear();

  public:
  // required .KuplungApp.ObjectCoordinate lQuadratic = 29;
  bool has_lquadratic() const;
  void clear_lquadratic() ;
  const ::KuplungApp::ObjectCoordinate& lquadratic() const;
  PROTOBUF_NODISCARD ::KuplungApp::ObjectCoordinate* release_lquadratic();
  ::KuplungApp::ObjectCoordinate* mutable_lquadratic();
  void set_allocated_lquadratic(::KuplungApp::ObjectCoordinate* value);
  void unsafe_arena_set_allocated_lquadratic(::KuplungApp::ObjectCoordinate* value);
  ::KuplungApp::ObjectCoordinate* unsafe_arena_release_lquadratic();

  private:
  const ::KuplungApp::ObjectCoordinate& _internal_lquadratic() const;
  ::KuplungApp::ObjectCoordinate* _internal_mutable_lquadratic();

  public:
  // required int32 type = 3;
  bool has_type() const;
  void clear_type() ;
  ::int32_t type() const;
  void set_type(::int32_t value);

  private:
  ::int32_t _internal_type() const;
  void _internal_set_type(::int32_t value);

  public:
  // required bool showLampObject = 4;
  bool has_showlampobject() const;
  void clear_showlampobject() ;
  bool showlampobject() const;
  void set_showlampobject(bool value);

  private:
  bool _internal_showlampobject() const;
  void _internal_set_showlampobject(bool value);

  public:
  // required bool showLampDirection = 5;
  bool has_showlampdirection() const;
  void clear_showlampdirection() ;
  bool showlampdirection() const;
  void set_showlampdirection(bool value);

  private:
  bool _internal_showlampdirection() const;
  void _internal_set_showlampdirection(bool value);

  public:
  // required bool showInWire = 6;
  bool has_showinwire() const;
  void clear_showinwire() ;
  bool showinwire() const;
  void set_showinwire(bool value);

  private:
  bool _internal_showinwire() const;
  void _internal_set_showinwire(bool value);

  public:
  // @@protoc_insertion_point(class_scope:KuplungApp.LightObject)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 29, 23,
      71, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LightObject& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::KuplungApp::ObjectCoordinate* positionx_;
    ::KuplungApp::ObjectCoordinate* positiony_;
    ::KuplungApp::ObjectCoordinate* positionz_;
    ::KuplungApp::ObjectCoordinate* directionx_;
    ::KuplungApp::ObjectCoordinate* directiony_;
    ::KuplungApp::ObjectCoordinate* directionz_;
    ::KuplungApp::ObjectCoordinate* scalex_;
    ::KuplungApp::ObjectCoordinate* scaley_;
    ::KuplungApp::ObjectCoordinate* scalez_;
    ::KuplungApp::ObjectCoordinate* rotatex_;
    ::KuplungApp::ObjectCoordinate* rotatey_;
    ::KuplungApp::ObjectCoordinate* rotatez_;
    ::KuplungApp::ObjectCoordinate* rotatecenterx_;
    ::KuplungApp::ObjectCoordinate* rotatecentery_;
    ::KuplungApp::ObjectCoordinate* rotatecenterz_;
    ::KuplungApp::MaterialColor* ambient_;
    ::KuplungApp::MaterialColor* diffuse_;
    ::KuplungApp::MaterialColor* specular_;
    ::KuplungApp::ObjectCoordinate* lcutoff_;
    ::KuplungApp::ObjectCoordinate* loutercutoff_;
    ::KuplungApp::ObjectCoordinate* lconstant_;
    ::KuplungApp::ObjectCoordinate* llinear_;
    ::KuplungApp::ObjectCoordinate* lquadratic_;
    ::int32_t type_;
    bool showlampobject_;
    bool showlampdirection_;
    bool showinwire_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_KuplungAppSettings_2eproto;
};
// -------------------------------------------------------------------

class GUISettings final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:KuplungApp.GUISettings) */ {
 public:
  inline GUISettings() : GUISettings(nullptr) {}
  ~GUISettings() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GUISettings* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GUISettings));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GUISettings(
      ::google::protobuf::internal::ConstantInitialized);

  inline GUISettings(const GUISettings& from) : GUISettings(nullptr, from) {}
  inline GUISettings(GUISettings&& from) noexcept
      : GUISettings(nullptr, std::move(from)) {}
  inline GUISettings& operator=(const GUISettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline GUISettings& operator=(GUISettings&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GUISettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const GUISettings* internal_default_instance() {
    return reinterpret_cast<const GUISettings*>(
        &_GUISettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(GUISettings& a, GUISettings& b) { a.Swap(&b); }
  inline void Swap(GUISettings* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GUISettings* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GUISettings* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GUISettings>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GUISettings& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GUISettings& from) { GUISettings::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GUISettings* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "KuplungApp.GUISettings"; }

 protected:
  explicit GUISettings(::google::protobuf::Arena* arena);
  GUISettings(::google::protobuf::Arena* arena, const GUISettings& from);
  GUISettings(::google::protobuf::Arena* arena, GUISettings&& from) noexcept
      : GUISettings(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLightsFieldNumber = 44,
    kHeightmapImageFieldNumber = 37,
    kSettingOutlineColorFieldNumber = 9,
    kSettingUIAmbientLightFieldNumber = 10,
    kSolidLightDirectionFieldNumber = 21,
    kSolidLightMaterialColorFieldNumber = 22,
    kSolidLightAmbientFieldNumber = 23,
    kSolidLightDiffuseFieldNumber = 24,
    kSolidLightSpecularFieldNumber = 25,
    kCameraFieldNumber = 42,
    kGridFieldNumber = 43,
    kSettingFOVFieldNumber = 1,
    kSettingOutlineThicknessFieldNumber = 2,
    kSettingRatioWidthFieldNumber = 3,
    kSettingRatioHeightFieldNumber = 4,
    kSettingPlaneCloseFieldNumber = 5,
    kSettingPlaneFarFieldNumber = 6,
    kSettingGridSizeFieldNumber = 7,
    kSettingSkyboxFieldNumber = 8,
    kSettingFixedGridWorldFieldNumber = 11,
    kSettingOutlineColorPickerOpenFieldNumber = 12,
    kSettingShowAxisHelpersFieldNumber = 13,
    kSettingsShowZAxisFieldNumber = 14,
    kSettingLightingPassDrawModeFieldNumber = 17,
    kSettingDeferredTestLightsNumberFieldNumber = 18,
    kSettingDeferredAmbientStrengthFieldNumber = 19,
    kViewModelSkinFieldNumber = 20,
    kSettingDeferredTestModeFieldNumber = 15,
    kSettingDeferredTestLightsFieldNumber = 16,
    kSolidLightMaterialColorColorPickerFieldNumber = 29,
    kSolidLightAmbientColorPickerFieldNumber = 30,
    kSolidLightAmbientStrengthFieldNumber = 26,
    kSolidLightDiffuseStrengthFieldNumber = 27,
    kSolidLightSpecularStrengthFieldNumber = 28,
    kSolidLightDiffuseColorPickerFieldNumber = 31,
    kSolidLightSpecularColorPickerFieldNumber = 32,
    kSettingShowTerrainFieldNumber = 33,
    kSettingTerrainModelFieldNumber = 34,
    kSettingTerrainWidthFieldNumber = 38,
    kSettingTerrainAnimateXFieldNumber = 35,
    kSettingTerrainAnimateYFieldNumber = 36,
    kSettingShowSpaceshipFieldNumber = 40,
    kSettingGenerateSpaceshipFieldNumber = 41,
    kSettingTerrainHeightFieldNumber = 39,
  };
  // repeated .KuplungApp.LightObject lights = 44;
  int lights_size() const;
  private:
  int _internal_lights_size() const;

  public:
  void clear_lights() ;
  ::KuplungApp::LightObject* mutable_lights(int index);
  ::google::protobuf::RepeatedPtrField<::KuplungApp::LightObject>* mutable_lights();

  private:
  const ::google::protobuf::RepeatedPtrField<::KuplungApp::LightObject>& _internal_lights() const;
  ::google::protobuf::RepeatedPtrField<::KuplungApp::LightObject>* _internal_mutable_lights();
  public:
  const ::KuplungApp::LightObject& lights(int index) const;
  ::KuplungApp::LightObject* add_lights();
  const ::google::protobuf::RepeatedPtrField<::KuplungApp::LightObject>& lights() const;
  // required string heightmapImage = 37;
  bool has_heightmapimage() const;
  void clear_heightmapimage() ;
  const std::string& heightmapimage() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_heightmapimage(Arg_&& arg, Args_... args);
  std::string* mutable_heightmapimage();
  PROTOBUF_NODISCARD std::string* release_heightmapimage();
  void set_allocated_heightmapimage(std::string* value);

  private:
  const std::string& _internal_heightmapimage() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_heightmapimage(
      const std::string& value);
  std::string* _internal_mutable_heightmapimage();

  public:
  // required .KuplungApp.Vec4 Setting_OutlineColor = 9;
  bool has_setting_outlinecolor() const;
  void clear_setting_outlinecolor() ;
  const ::KuplungApp::Vec4& setting_outlinecolor() const;
  PROTOBUF_NODISCARD ::KuplungApp::Vec4* release_setting_outlinecolor();
  ::KuplungApp::Vec4* mutable_setting_outlinecolor();
  void set_allocated_setting_outlinecolor(::KuplungApp::Vec4* value);
  void unsafe_arena_set_allocated_setting_outlinecolor(::KuplungApp::Vec4* value);
  ::KuplungApp::Vec4* unsafe_arena_release_setting_outlinecolor();

  private:
  const ::KuplungApp::Vec4& _internal_setting_outlinecolor() const;
  ::KuplungApp::Vec4* _internal_mutable_setting_outlinecolor();

  public:
  // required .KuplungApp.Vec3 Setting_UIAmbientLight = 10;
  bool has_setting_uiambientlight() const;
  void clear_setting_uiambientlight() ;
  const ::KuplungApp::Vec3& setting_uiambientlight() const;
  PROTOBUF_NODISCARD ::KuplungApp::Vec3* release_setting_uiambientlight();
  ::KuplungApp::Vec3* mutable_setting_uiambientlight();
  void set_allocated_setting_uiambientlight(::KuplungApp::Vec3* value);
  void unsafe_arena_set_allocated_setting_uiambientlight(::KuplungApp::Vec3* value);
  ::KuplungApp::Vec3* unsafe_arena_release_setting_uiambientlight();

  private:
  const ::KuplungApp::Vec3& _internal_setting_uiambientlight() const;
  ::KuplungApp::Vec3* _internal_mutable_setting_uiambientlight();

  public:
  // required .KuplungApp.Vec3 SolidLight_Direction = 21;
  bool has_solidlight_direction() const;
  void clear_solidlight_direction() ;
  const ::KuplungApp::Vec3& solidlight_direction() const;
  PROTOBUF_NODISCARD ::KuplungApp::Vec3* release_solidlight_direction();
  ::KuplungApp::Vec3* mutable_solidlight_direction();
  void set_allocated_solidlight_direction(::KuplungApp::Vec3* value);
  void unsafe_arena_set_allocated_solidlight_direction(::KuplungApp::Vec3* value);
  ::KuplungApp::Vec3* unsafe_arena_release_solidlight_direction();

  private:
  const ::KuplungApp::Vec3& _internal_solidlight_direction() const;
  ::KuplungApp::Vec3* _internal_mutable_solidlight_direction();

  public:
  // required .KuplungApp.Vec3 SolidLight_MaterialColor = 22;
  bool has_solidlight_materialcolor() const;
  void clear_solidlight_materialcolor() ;
  const ::KuplungApp::Vec3& solidlight_materialcolor() const;
  PROTOBUF_NODISCARD ::KuplungApp::Vec3* release_solidlight_materialcolor();
  ::KuplungApp::Vec3* mutable_solidlight_materialcolor();
  void set_allocated_solidlight_materialcolor(::KuplungApp::Vec3* value);
  void unsafe_arena_set_allocated_solidlight_materialcolor(::KuplungApp::Vec3* value);
  ::KuplungApp::Vec3* unsafe_arena_release_solidlight_materialcolor();

  private:
  const ::KuplungApp::Vec3& _internal_solidlight_materialcolor() const;
  ::KuplungApp::Vec3* _internal_mutable_solidlight_materialcolor();

  public:
  // required .KuplungApp.Vec3 SolidLight_Ambient = 23;
  bool has_solidlight_ambient() const;
  void clear_solidlight_ambient() ;
  const ::KuplungApp::Vec3& solidlight_ambient() const;
  PROTOBUF_NODISCARD ::KuplungApp::Vec3* release_solidlight_ambient();
  ::KuplungApp::Vec3* mutable_solidlight_ambient();
  void set_allocated_solidlight_ambient(::KuplungApp::Vec3* value);
  void unsafe_arena_set_allocated_solidlight_ambient(::KuplungApp::Vec3* value);
  ::KuplungApp::Vec3* unsafe_arena_release_solidlight_ambient();

  private:
  const ::KuplungApp::Vec3& _internal_solidlight_ambient() const;
  ::KuplungApp::Vec3* _internal_mutable_solidlight_ambient();

  public:
  // required .KuplungApp.Vec3 SolidLight_Diffuse = 24;
  bool has_solidlight_diffuse() const;
  void clear_solidlight_diffuse() ;
  const ::KuplungApp::Vec3& solidlight_diffuse() const;
  PROTOBUF_NODISCARD ::KuplungApp::Vec3* release_solidlight_diffuse();
  ::KuplungApp::Vec3* mutable_solidlight_diffuse();
  void set_allocated_solidlight_diffuse(::KuplungApp::Vec3* value);
  void unsafe_arena_set_allocated_solidlight_diffuse(::KuplungApp::Vec3* value);
  ::KuplungApp::Vec3* unsafe_arena_release_solidlight_diffuse();

  private:
  const ::KuplungApp::Vec3& _internal_solidlight_diffuse() const;
  ::KuplungApp::Vec3* _internal_mutable_solidlight_diffuse();

  public:
  // required .KuplungApp.Vec3 SolidLight_Specular = 25;
  bool has_solidlight_specular() const;
  void clear_solidlight_specular() ;
  const ::KuplungApp::Vec3& solidlight_specular() const;
  PROTOBUF_NODISCARD ::KuplungApp::Vec3* release_solidlight_specular();
  ::KuplungApp::Vec3* mutable_solidlight_specular();
  void set_allocated_solidlight_specular(::KuplungApp::Vec3* value);
  void unsafe_arena_set_allocated_solidlight_specular(::KuplungApp::Vec3* value);
  ::KuplungApp::Vec3* unsafe_arena_release_solidlight_specular();

  private:
  const ::KuplungApp::Vec3& _internal_solidlight_specular() const;
  ::KuplungApp::Vec3* _internal_mutable_solidlight_specular();

  public:
  // required .KuplungApp.CameraSettings camera = 42;
  bool has_camera() const;
  void clear_camera() ;
  const ::KuplungApp::CameraSettings& camera() const;
  PROTOBUF_NODISCARD ::KuplungApp::CameraSettings* release_camera();
  ::KuplungApp::CameraSettings* mutable_camera();
  void set_allocated_camera(::KuplungApp::CameraSettings* value);
  void unsafe_arena_set_allocated_camera(::KuplungApp::CameraSettings* value);
  ::KuplungApp::CameraSettings* unsafe_arena_release_camera();

  private:
  const ::KuplungApp::CameraSettings& _internal_camera() const;
  ::KuplungApp::CameraSettings* _internal_mutable_camera();

  public:
  // required .KuplungApp.GridSettings grid = 43;
  bool has_grid() const;
  void clear_grid() ;
  const ::KuplungApp::GridSettings& grid() const;
  PROTOBUF_NODISCARD ::KuplungApp::GridSettings* release_grid();
  ::KuplungApp::GridSettings* mutable_grid();
  void set_allocated_grid(::KuplungApp::GridSettings* value);
  void unsafe_arena_set_allocated_grid(::KuplungApp::GridSettings* value);
  ::KuplungApp::GridSettings* unsafe_arena_release_grid();

  private:
  const ::KuplungApp::GridSettings& _internal_grid() const;
  ::KuplungApp::GridSettings* _internal_mutable_grid();

  public:
  // required float Setting_FOV = 1;
  bool has_setting_fov() const;
  void clear_setting_fov() ;
  float setting_fov() const;
  void set_setting_fov(float value);

  private:
  float _internal_setting_fov() const;
  void _internal_set_setting_fov(float value);

  public:
  // required float Setting_OutlineThickness = 2;
  bool has_setting_outlinethickness() const;
  void clear_setting_outlinethickness() ;
  float setting_outlinethickness() const;
  void set_setting_outlinethickness(float value);

  private:
  float _internal_setting_outlinethickness() const;
  void _internal_set_setting_outlinethickness(float value);

  public:
  // required float Setting_RatioWidth = 3;
  bool has_setting_ratiowidth() const;
  void clear_setting_ratiowidth() ;
  float setting_ratiowidth() const;
  void set_setting_ratiowidth(float value);

  private:
  float _internal_setting_ratiowidth() const;
  void _internal_set_setting_ratiowidth(float value);

  public:
  // required float Setting_RatioHeight = 4;
  bool has_setting_ratioheight() const;
  void clear_setting_ratioheight() ;
  float setting_ratioheight() const;
  void set_setting_ratioheight(float value);

  private:
  float _internal_setting_ratioheight() const;
  void _internal_set_setting_ratioheight(float value);

  public:
  // required float Setting_PlaneClose = 5;
  bool has_setting_planeclose() const;
  void clear_setting_planeclose() ;
  float setting_planeclose() const;
  void set_setting_planeclose(float value);

  private:
  float _internal_setting_planeclose() const;
  void _internal_set_setting_planeclose(float value);

  public:
  // required float Setting_PlaneFar = 6;
  bool has_setting_planefar() const;
  void clear_setting_planefar() ;
  float setting_planefar() const;
  void set_setting_planefar(float value);

  private:
  float _internal_setting_planefar() const;
  void _internal_set_setting_planefar(float value);

  public:
  // required int32 Setting_GridSize = 7;
  bool has_setting_gridsize() const;
  void clear_setting_gridsize() ;
  ::int32_t setting_gridsize() const;
  void set_setting_gridsize(::int32_t value);

  private:
  ::int32_t _internal_setting_gridsize() const;
  void _internal_set_setting_gridsize(::int32_t value);

  public:
  // required int32 Setting_Skybox = 8;
  bool has_setting_skybox() const;
  void clear_setting_skybox() ;
  ::int32_t setting_skybox() const;
  void set_setting_skybox(::int32_t value);

  private:
  ::int32_t _internal_setting_skybox() const;
  void _internal_set_setting_skybox(::int32_t value);

  public:
  // required bool Setting_FixedGridWorld = 11;
  bool has_setting_fixedgridworld() const;
  void clear_setting_fixedgridworld() ;
  bool setting_fixedgridworld() const;
  void set_setting_fixedgridworld(bool value);

  private:
  bool _internal_setting_fixedgridworld() const;
  void _internal_set_setting_fixedgridworld(bool value);

  public:
  // required bool Setting_OutlineColorPickerOpen = 12;
  bool has_setting_outlinecolorpickeropen() const;
  void clear_setting_outlinecolorpickeropen() ;
  bool setting_outlinecolorpickeropen() const;
  void set_setting_outlinecolorpickeropen(bool value);

  private:
  bool _internal_setting_outlinecolorpickeropen() const;
  void _internal_set_setting_outlinecolorpickeropen(bool value);

  public:
  // required bool Setting_ShowAxisHelpers = 13;
  bool has_setting_showaxishelpers() const;
  void clear_setting_showaxishelpers() ;
  bool setting_showaxishelpers() const;
  void set_setting_showaxishelpers(bool value);

  private:
  bool _internal_setting_showaxishelpers() const;
  void _internal_set_setting_showaxishelpers(bool value);

  public:
  // required bool Settings_ShowZAxis = 14;
  bool has_settings_showzaxis() const;
  void clear_settings_showzaxis() ;
  bool settings_showzaxis() const;
  void set_settings_showzaxis(bool value);

  private:
  bool _internal_settings_showzaxis() const;
  void _internal_set_settings_showzaxis(bool value);

  public:
  // required int32 Setting_LightingPass_DrawMode = 17;
  bool has_setting_lightingpass_drawmode() const;
  void clear_setting_lightingpass_drawmode() ;
  ::int32_t setting_lightingpass_drawmode() const;
  void set_setting_lightingpass_drawmode(::int32_t value);

  private:
  ::int32_t _internal_setting_lightingpass_drawmode() const;
  void _internal_set_setting_lightingpass_drawmode(::int32_t value);

  public:
  // required int32 Setting_DeferredTestLightsNumber = 18;
  bool has_setting_deferredtestlightsnumber() const;
  void clear_setting_deferredtestlightsnumber() ;
  ::int32_t setting_deferredtestlightsnumber() const;
  void set_setting_deferredtestlightsnumber(::int32_t value);

  private:
  ::int32_t _internal_setting_deferredtestlightsnumber() const;
  void _internal_set_setting_deferredtestlightsnumber(::int32_t value);

  public:
  // required float Setting_DeferredAmbientStrength = 19;
  bool has_setting_deferredambientstrength() const;
  void clear_setting_deferredambientstrength() ;
  float setting_deferredambientstrength() const;
  void set_setting_deferredambientstrength(float value);

  private:
  float _internal_setting_deferredambientstrength() const;
  void _internal_set_setting_deferredambientstrength(float value);

  public:
  // required int32 viewModelSkin = 20;
  bool has_viewmodelskin() const;
  void clear_viewmodelskin() ;
  ::int32_t viewmodelskin() const;
  void set_viewmodelskin(::int32_t value);

  private:
  ::int32_t _internal_viewmodelskin() const;
  void _internal_set_viewmodelskin(::int32_t value);

  public:
  // required bool Setting_DeferredTestMode = 15;
  bool has_setting_deferredtestmode() const;
  void clear_setting_deferredtestmode() ;
  bool setting_deferredtestmode() const;
  void set_setting_deferredtestmode(bool value);

  private:
  bool _internal_setting_deferredtestmode() const;
  void _internal_set_setting_deferredtestmode(bool value);

  public:
  // required bool Setting_DeferredTestLights = 16;
  bool has_setting_deferredtestlights() const;
  void clear_setting_deferredtestlights() ;
  bool setting_deferredtestlights() const;
  void set_setting_deferredtestlights(bool value);

  private:
  bool _internal_setting_deferredtestlights() const;
  void _internal_set_setting_deferredtestlights(bool value);

  public:
  // required bool SolidLight_MaterialColor_ColorPicker = 29;
  bool has_solidlight_materialcolor_colorpicker() const;
  void clear_solidlight_materialcolor_colorpicker() ;
  bool solidlight_materialcolor_colorpicker() const;
  void set_solidlight_materialcolor_colorpicker(bool value);

  private:
  bool _internal_solidlight_materialcolor_colorpicker() const;
  void _internal_set_solidlight_materialcolor_colorpicker(bool value);

  public:
  // required bool SolidLight_Ambient_ColorPicker = 30;
  bool has_solidlight_ambient_colorpicker() const;
  void clear_solidlight_ambient_colorpicker() ;
  bool solidlight_ambient_colorpicker() const;
  void set_solidlight_ambient_colorpicker(bool value);

  private:
  bool _internal_solidlight_ambient_colorpicker() const;
  void _internal_set_solidlight_ambient_colorpicker(bool value);

  public:
  // required float SolidLight_Ambient_Strength = 26;
  bool has_solidlight_ambient_strength() const;
  void clear_solidlight_ambient_strength() ;
  float solidlight_ambient_strength() const;
  void set_solidlight_ambient_strength(float value);

  private:
  float _internal_solidlight_ambient_strength() const;
  void _internal_set_solidlight_ambient_strength(float value);

  public:
  // required float SolidLight_Diffuse_Strength = 27;
  bool has_solidlight_diffuse_strength() const;
  void clear_solidlight_diffuse_strength() ;
  float solidlight_diffuse_strength() const;
  void set_solidlight_diffuse_strength(float value);

  private:
  float _internal_solidlight_diffuse_strength() const;
  void _internal_set_solidlight_diffuse_strength(float value);

  public:
  // required float SolidLight_Specular_Strength = 28;
  bool has_solidlight_specular_strength() const;
  void clear_solidlight_specular_strength() ;
  float solidlight_specular_strength() const;
  void set_solidlight_specular_strength(float value);

  private:
  float _internal_solidlight_specular_strength() const;
  void _internal_set_solidlight_specular_strength(float value);

  public:
  // required bool SolidLight_Diffuse_ColorPicker = 31;
  bool has_solidlight_diffuse_colorpicker() const;
  void clear_solidlight_diffuse_colorpicker() ;
  bool solidlight_diffuse_colorpicker() const;
  void set_solidlight_diffuse_colorpicker(bool value);

  private:
  bool _internal_solidlight_diffuse_colorpicker() const;
  void _internal_set_solidlight_diffuse_colorpicker(bool value);

  public:
  // required bool SolidLight_Specular_ColorPicker = 32;
  bool has_solidlight_specular_colorpicker() const;
  void clear_solidlight_specular_colorpicker() ;
  bool solidlight_specular_colorpicker() const;
  void set_solidlight_specular_colorpicker(bool value);

  private:
  bool _internal_solidlight_specular_colorpicker() const;
  void _internal_set_solidlight_specular_colorpicker(bool value);

  public:
  // required bool Setting_ShowTerrain = 33;
  bool has_setting_showterrain() const;
  void clear_setting_showterrain() ;
  bool setting_showterrain() const;
  void set_setting_showterrain(bool value);

  private:
  bool _internal_setting_showterrain() const;
  void _internal_set_setting_showterrain(bool value);

  public:
  // required bool Setting_TerrainModel = 34;
  bool has_setting_terrainmodel() const;
  void clear_setting_terrainmodel() ;
  bool setting_terrainmodel() const;
  void set_setting_terrainmodel(bool value);

  private:
  bool _internal_setting_terrainmodel() const;
  void _internal_set_setting_terrainmodel(bool value);

  public:
  // required int32 Setting_TerrainWidth = 38;
  bool has_setting_terrainwidth() const;
  void clear_setting_terrainwidth() ;
  ::int32_t setting_terrainwidth() const;
  void set_setting_terrainwidth(::int32_t value);

  private:
  ::int32_t _internal_setting_terrainwidth() const;
  void _internal_set_setting_terrainwidth(::int32_t value);

  public:
  // required bool Setting_TerrainAnimateX = 35;
  bool has_setting_terrainanimatex() const;
  void clear_setting_terrainanimatex() ;
  bool setting_terrainanimatex() const;
  void set_setting_terrainanimatex(bool value);

  private:
  bool _internal_setting_terrainanimatex() const;
  void _internal_set_setting_terrainanimatex(bool value);

  public:
  // required bool Setting_TerrainAnimateY = 36;
  bool has_setting_terrainanimatey() const;
  void clear_setting_terrainanimatey() ;
  bool setting_terrainanimatey() const;
  void set_setting_terrainanimatey(bool value);

  private:
  bool _internal_setting_terrainanimatey() const;
  void _internal_set_setting_terrainanimatey(bool value);

  public:
  // required bool Setting_ShowSpaceship = 40;
  bool has_setting_showspaceship() const;
  void clear_setting_showspaceship() ;
  bool setting_showspaceship() const;
  void set_setting_showspaceship(bool value);

  private:
  bool _internal_setting_showspaceship() const;
  void _internal_set_setting_showspaceship(bool value);

  public:
  // required bool Setting_GenerateSpaceship = 41;
  bool has_setting_generatespaceship() const;
  void clear_setting_generatespaceship() ;
  bool setting_generatespaceship() const;
  void set_setting_generatespaceship(bool value);

  private:
  bool _internal_setting_generatespaceship() const;
  void _internal_set_setting_generatespaceship(bool value);

  public:
  // required int32 Setting_TerrainHeight = 39;
  bool has_setting_terrainheight() const;
  void clear_setting_terrainheight() ;
  ::int32_t setting_terrainheight() const;
  void set_setting_terrainheight(::int32_t value);

  private:
  ::int32_t _internal_setting_terrainheight() const;
  void _internal_set_setting_terrainheight(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:KuplungApp.GUISettings)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 44, 10,
      85, 7>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GUISettings& from_msg);
    ::google::protobuf::internal::HasBits<2> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::KuplungApp::LightObject > lights_;
    ::google::protobuf::internal::ArenaStringPtr heightmapimage_;
    ::KuplungApp::Vec4* setting_outlinecolor_;
    ::KuplungApp::Vec3* setting_uiambientlight_;
    ::KuplungApp::Vec3* solidlight_direction_;
    ::KuplungApp::Vec3* solidlight_materialcolor_;
    ::KuplungApp::Vec3* solidlight_ambient_;
    ::KuplungApp::Vec3* solidlight_diffuse_;
    ::KuplungApp::Vec3* solidlight_specular_;
    ::KuplungApp::CameraSettings* camera_;
    ::KuplungApp::GridSettings* grid_;
    float setting_fov_;
    float setting_outlinethickness_;
    float setting_ratiowidth_;
    float setting_ratioheight_;
    float setting_planeclose_;
    float setting_planefar_;
    ::int32_t setting_gridsize_;
    ::int32_t setting_skybox_;
    bool setting_fixedgridworld_;
    bool setting_outlinecolorpickeropen_;
    bool setting_showaxishelpers_;
    bool settings_showzaxis_;
    ::int32_t setting_lightingpass_drawmode_;
    ::int32_t setting_deferredtestlightsnumber_;
    float setting_deferredambientstrength_;
    ::int32_t viewmodelskin_;
    bool setting_deferredtestmode_;
    bool setting_deferredtestlights_;
    bool solidlight_materialcolor_colorpicker_;
    bool solidlight_ambient_colorpicker_;
    float solidlight_ambient_strength_;
    float solidlight_diffuse_strength_;
    float solidlight_specular_strength_;
    bool solidlight_diffuse_colorpicker_;
    bool solidlight_specular_colorpicker_;
    bool setting_showterrain_;
    bool setting_terrainmodel_;
    ::int32_t setting_terrainwidth_;
    bool setting_terrainanimatex_;
    bool setting_terrainanimatey_;
    bool setting_showspaceship_;
    bool setting_generatespaceship_;
    ::int32_t setting_terrainheight_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_KuplungAppSettings_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GUISettings

// required float Setting_FOV = 1;
inline bool GUISettings::has_setting_fov() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void GUISettings::clear_setting_fov() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_fov_ = 0;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline float GUISettings::setting_fov() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.Setting_FOV)
  return _internal_setting_fov();
}
inline void GUISettings::set_setting_fov(float value) {
  _internal_set_setting_fov(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.Setting_FOV)
}
inline float GUISettings::_internal_setting_fov() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.setting_fov_;
}
inline void GUISettings::_internal_set_setting_fov(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_fov_ = value;
}

// required float Setting_OutlineThickness = 2;
inline bool GUISettings::has_setting_outlinethickness() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void GUISettings::clear_setting_outlinethickness() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_outlinethickness_ = 0;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline float GUISettings::setting_outlinethickness() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.Setting_OutlineThickness)
  return _internal_setting_outlinethickness();
}
inline void GUISettings::set_setting_outlinethickness(float value) {
  _internal_set_setting_outlinethickness(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.Setting_OutlineThickness)
}
inline float GUISettings::_internal_setting_outlinethickness() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.setting_outlinethickness_;
}
inline void GUISettings::_internal_set_setting_outlinethickness(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_outlinethickness_ = value;
}

// required float Setting_RatioWidth = 3;
inline bool GUISettings::has_setting_ratiowidth() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void GUISettings::clear_setting_ratiowidth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_ratiowidth_ = 0;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline float GUISettings::setting_ratiowidth() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.Setting_RatioWidth)
  return _internal_setting_ratiowidth();
}
inline void GUISettings::set_setting_ratiowidth(float value) {
  _internal_set_setting_ratiowidth(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.Setting_RatioWidth)
}
inline float GUISettings::_internal_setting_ratiowidth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.setting_ratiowidth_;
}
inline void GUISettings::_internal_set_setting_ratiowidth(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_ratiowidth_ = value;
}

// required float Setting_RatioHeight = 4;
inline bool GUISettings::has_setting_ratioheight() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void GUISettings::clear_setting_ratioheight() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_ratioheight_ = 0;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline float GUISettings::setting_ratioheight() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.Setting_RatioHeight)
  return _internal_setting_ratioheight();
}
inline void GUISettings::set_setting_ratioheight(float value) {
  _internal_set_setting_ratioheight(value);
  _impl_._has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.Setting_RatioHeight)
}
inline float GUISettings::_internal_setting_ratioheight() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.setting_ratioheight_;
}
inline void GUISettings::_internal_set_setting_ratioheight(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_ratioheight_ = value;
}

// required float Setting_PlaneClose = 5;
inline bool GUISettings::has_setting_planeclose() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void GUISettings::clear_setting_planeclose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_planeclose_ = 0;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline float GUISettings::setting_planeclose() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.Setting_PlaneClose)
  return _internal_setting_planeclose();
}
inline void GUISettings::set_setting_planeclose(float value) {
  _internal_set_setting_planeclose(value);
  _impl_._has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.Setting_PlaneClose)
}
inline float GUISettings::_internal_setting_planeclose() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.setting_planeclose_;
}
inline void GUISettings::_internal_set_setting_planeclose(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_planeclose_ = value;
}

// required float Setting_PlaneFar = 6;
inline bool GUISettings::has_setting_planefar() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline void GUISettings::clear_setting_planefar() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_planefar_ = 0;
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline float GUISettings::setting_planefar() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.Setting_PlaneFar)
  return _internal_setting_planefar();
}
inline void GUISettings::set_setting_planefar(float value) {
  _internal_set_setting_planefar(value);
  _impl_._has_bits_[0] |= 0x00008000u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.Setting_PlaneFar)
}
inline float GUISettings::_internal_setting_planefar() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.setting_planefar_;
}
inline void GUISettings::_internal_set_setting_planefar(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_planefar_ = value;
}

// required int32 Setting_GridSize = 7;
inline bool GUISettings::has_setting_gridsize() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline void GUISettings::clear_setting_gridsize() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_gridsize_ = 0;
  _impl_._has_bits_[0] &= ~0x00010000u;
}
inline ::int32_t GUISettings::setting_gridsize() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.Setting_GridSize)
  return _internal_setting_gridsize();
}
inline void GUISettings::set_setting_gridsize(::int32_t value) {
  _internal_set_setting_gridsize(value);
  _impl_._has_bits_[0] |= 0x00010000u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.Setting_GridSize)
}
inline ::int32_t GUISettings::_internal_setting_gridsize() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.setting_gridsize_;
}
inline void GUISettings::_internal_set_setting_gridsize(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_gridsize_ = value;
}

// required int32 Setting_Skybox = 8;
inline bool GUISettings::has_setting_skybox() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline void GUISettings::clear_setting_skybox() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_skybox_ = 0;
  _impl_._has_bits_[0] &= ~0x00020000u;
}
inline ::int32_t GUISettings::setting_skybox() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.Setting_Skybox)
  return _internal_setting_skybox();
}
inline void GUISettings::set_setting_skybox(::int32_t value) {
  _internal_set_setting_skybox(value);
  _impl_._has_bits_[0] |= 0x00020000u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.Setting_Skybox)
}
inline ::int32_t GUISettings::_internal_setting_skybox() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.setting_skybox_;
}
inline void GUISettings::_internal_set_setting_skybox(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_skybox_ = value;
}

// required .KuplungApp.Vec4 Setting_OutlineColor = 9;
inline bool GUISettings::has_setting_outlinecolor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.setting_outlinecolor_ != nullptr);
  return value;
}
inline const ::KuplungApp::Vec4& GUISettings::_internal_setting_outlinecolor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::Vec4* p = _impl_.setting_outlinecolor_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::Vec4&>(::KuplungApp::_Vec4_default_instance_);
}
inline const ::KuplungApp::Vec4& GUISettings::setting_outlinecolor() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.Setting_OutlineColor)
  return _internal_setting_outlinecolor();
}
inline void GUISettings::unsafe_arena_set_allocated_setting_outlinecolor(::KuplungApp::Vec4* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.setting_outlinecolor_);
  }
  _impl_.setting_outlinecolor_ = reinterpret_cast<::KuplungApp::Vec4*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.GUISettings.Setting_OutlineColor)
}
inline ::KuplungApp::Vec4* GUISettings::release_setting_outlinecolor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::KuplungApp::Vec4* released = _impl_.setting_outlinecolor_;
  _impl_.setting_outlinecolor_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::Vec4* GUISettings::unsafe_arena_release_setting_outlinecolor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.GUISettings.Setting_OutlineColor)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::KuplungApp::Vec4* temp = _impl_.setting_outlinecolor_;
  _impl_.setting_outlinecolor_ = nullptr;
  return temp;
}
inline ::KuplungApp::Vec4* GUISettings::_internal_mutable_setting_outlinecolor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.setting_outlinecolor_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::Vec4>(GetArena());
    _impl_.setting_outlinecolor_ = reinterpret_cast<::KuplungApp::Vec4*>(p);
  }
  return _impl_.setting_outlinecolor_;
}
inline ::KuplungApp::Vec4* GUISettings::mutable_setting_outlinecolor() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::KuplungApp::Vec4* _msg = _internal_mutable_setting_outlinecolor();
  // @@protoc_insertion_point(field_mutable:KuplungApp.GUISettings.Setting_OutlineColor)
  return _msg;
}
inline void GUISettings::set_allocated_setting_outlinecolor(::KuplungApp::Vec4* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.setting_outlinecolor_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.setting_outlinecolor_ = reinterpret_cast<::KuplungApp::Vec4*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.GUISettings.Setting_OutlineColor)
}

// required .KuplungApp.Vec3 Setting_UIAmbientLight = 10;
inline bool GUISettings::has_setting_uiambientlight() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.setting_uiambientlight_ != nullptr);
  return value;
}
inline const ::KuplungApp::Vec3& GUISettings::_internal_setting_uiambientlight() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::Vec3* p = _impl_.setting_uiambientlight_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::Vec3&>(::KuplungApp::_Vec3_default_instance_);
}
inline const ::KuplungApp::Vec3& GUISettings::setting_uiambientlight() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.Setting_UIAmbientLight)
  return _internal_setting_uiambientlight();
}
inline void GUISettings::unsafe_arena_set_allocated_setting_uiambientlight(::KuplungApp::Vec3* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.setting_uiambientlight_);
  }
  _impl_.setting_uiambientlight_ = reinterpret_cast<::KuplungApp::Vec3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.GUISettings.Setting_UIAmbientLight)
}
inline ::KuplungApp::Vec3* GUISettings::release_setting_uiambientlight() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::KuplungApp::Vec3* released = _impl_.setting_uiambientlight_;
  _impl_.setting_uiambientlight_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::Vec3* GUISettings::unsafe_arena_release_setting_uiambientlight() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.GUISettings.Setting_UIAmbientLight)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::KuplungApp::Vec3* temp = _impl_.setting_uiambientlight_;
  _impl_.setting_uiambientlight_ = nullptr;
  return temp;
}
inline ::KuplungApp::Vec3* GUISettings::_internal_mutable_setting_uiambientlight() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.setting_uiambientlight_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::Vec3>(GetArena());
    _impl_.setting_uiambientlight_ = reinterpret_cast<::KuplungApp::Vec3*>(p);
  }
  return _impl_.setting_uiambientlight_;
}
inline ::KuplungApp::Vec3* GUISettings::mutable_setting_uiambientlight() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::KuplungApp::Vec3* _msg = _internal_mutable_setting_uiambientlight();
  // @@protoc_insertion_point(field_mutable:KuplungApp.GUISettings.Setting_UIAmbientLight)
  return _msg;
}
inline void GUISettings::set_allocated_setting_uiambientlight(::KuplungApp::Vec3* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.setting_uiambientlight_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.setting_uiambientlight_ = reinterpret_cast<::KuplungApp::Vec3*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.GUISettings.Setting_UIAmbientLight)
}

// required bool Setting_FixedGridWorld = 11;
inline bool GUISettings::has_setting_fixedgridworld() const {
  bool value = (_impl_._has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline void GUISettings::clear_setting_fixedgridworld() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_fixedgridworld_ = false;
  _impl_._has_bits_[0] &= ~0x00040000u;
}
inline bool GUISettings::setting_fixedgridworld() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.Setting_FixedGridWorld)
  return _internal_setting_fixedgridworld();
}
inline void GUISettings::set_setting_fixedgridworld(bool value) {
  _internal_set_setting_fixedgridworld(value);
  _impl_._has_bits_[0] |= 0x00040000u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.Setting_FixedGridWorld)
}
inline bool GUISettings::_internal_setting_fixedgridworld() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.setting_fixedgridworld_;
}
inline void GUISettings::_internal_set_setting_fixedgridworld(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_fixedgridworld_ = value;
}

// required bool Setting_OutlineColorPickerOpen = 12;
inline bool GUISettings::has_setting_outlinecolorpickeropen() const {
  bool value = (_impl_._has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline void GUISettings::clear_setting_outlinecolorpickeropen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_outlinecolorpickeropen_ = false;
  _impl_._has_bits_[0] &= ~0x00080000u;
}
inline bool GUISettings::setting_outlinecolorpickeropen() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.Setting_OutlineColorPickerOpen)
  return _internal_setting_outlinecolorpickeropen();
}
inline void GUISettings::set_setting_outlinecolorpickeropen(bool value) {
  _internal_set_setting_outlinecolorpickeropen(value);
  _impl_._has_bits_[0] |= 0x00080000u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.Setting_OutlineColorPickerOpen)
}
inline bool GUISettings::_internal_setting_outlinecolorpickeropen() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.setting_outlinecolorpickeropen_;
}
inline void GUISettings::_internal_set_setting_outlinecolorpickeropen(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_outlinecolorpickeropen_ = value;
}

// required bool Setting_ShowAxisHelpers = 13;
inline bool GUISettings::has_setting_showaxishelpers() const {
  bool value = (_impl_._has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline void GUISettings::clear_setting_showaxishelpers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_showaxishelpers_ = false;
  _impl_._has_bits_[0] &= ~0x00100000u;
}
inline bool GUISettings::setting_showaxishelpers() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.Setting_ShowAxisHelpers)
  return _internal_setting_showaxishelpers();
}
inline void GUISettings::set_setting_showaxishelpers(bool value) {
  _internal_set_setting_showaxishelpers(value);
  _impl_._has_bits_[0] |= 0x00100000u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.Setting_ShowAxisHelpers)
}
inline bool GUISettings::_internal_setting_showaxishelpers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.setting_showaxishelpers_;
}
inline void GUISettings::_internal_set_setting_showaxishelpers(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_showaxishelpers_ = value;
}

// required bool Settings_ShowZAxis = 14;
inline bool GUISettings::has_settings_showzaxis() const {
  bool value = (_impl_._has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline void GUISettings::clear_settings_showzaxis() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.settings_showzaxis_ = false;
  _impl_._has_bits_[0] &= ~0x00200000u;
}
inline bool GUISettings::settings_showzaxis() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.Settings_ShowZAxis)
  return _internal_settings_showzaxis();
}
inline void GUISettings::set_settings_showzaxis(bool value) {
  _internal_set_settings_showzaxis(value);
  _impl_._has_bits_[0] |= 0x00200000u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.Settings_ShowZAxis)
}
inline bool GUISettings::_internal_settings_showzaxis() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.settings_showzaxis_;
}
inline void GUISettings::_internal_set_settings_showzaxis(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.settings_showzaxis_ = value;
}

// required bool Setting_DeferredTestMode = 15;
inline bool GUISettings::has_setting_deferredtestmode() const {
  bool value = (_impl_._has_bits_[0] & 0x04000000u) != 0;
  return value;
}
inline void GUISettings::clear_setting_deferredtestmode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_deferredtestmode_ = false;
  _impl_._has_bits_[0] &= ~0x04000000u;
}
inline bool GUISettings::setting_deferredtestmode() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.Setting_DeferredTestMode)
  return _internal_setting_deferredtestmode();
}
inline void GUISettings::set_setting_deferredtestmode(bool value) {
  _internal_set_setting_deferredtestmode(value);
  _impl_._has_bits_[0] |= 0x04000000u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.Setting_DeferredTestMode)
}
inline bool GUISettings::_internal_setting_deferredtestmode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.setting_deferredtestmode_;
}
inline void GUISettings::_internal_set_setting_deferredtestmode(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_deferredtestmode_ = value;
}

// required bool Setting_DeferredTestLights = 16;
inline bool GUISettings::has_setting_deferredtestlights() const {
  bool value = (_impl_._has_bits_[0] & 0x08000000u) != 0;
  return value;
}
inline void GUISettings::clear_setting_deferredtestlights() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_deferredtestlights_ = false;
  _impl_._has_bits_[0] &= ~0x08000000u;
}
inline bool GUISettings::setting_deferredtestlights() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.Setting_DeferredTestLights)
  return _internal_setting_deferredtestlights();
}
inline void GUISettings::set_setting_deferredtestlights(bool value) {
  _internal_set_setting_deferredtestlights(value);
  _impl_._has_bits_[0] |= 0x08000000u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.Setting_DeferredTestLights)
}
inline bool GUISettings::_internal_setting_deferredtestlights() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.setting_deferredtestlights_;
}
inline void GUISettings::_internal_set_setting_deferredtestlights(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_deferredtestlights_ = value;
}

// required int32 Setting_LightingPass_DrawMode = 17;
inline bool GUISettings::has_setting_lightingpass_drawmode() const {
  bool value = (_impl_._has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline void GUISettings::clear_setting_lightingpass_drawmode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_lightingpass_drawmode_ = 0;
  _impl_._has_bits_[0] &= ~0x00400000u;
}
inline ::int32_t GUISettings::setting_lightingpass_drawmode() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.Setting_LightingPass_DrawMode)
  return _internal_setting_lightingpass_drawmode();
}
inline void GUISettings::set_setting_lightingpass_drawmode(::int32_t value) {
  _internal_set_setting_lightingpass_drawmode(value);
  _impl_._has_bits_[0] |= 0x00400000u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.Setting_LightingPass_DrawMode)
}
inline ::int32_t GUISettings::_internal_setting_lightingpass_drawmode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.setting_lightingpass_drawmode_;
}
inline void GUISettings::_internal_set_setting_lightingpass_drawmode(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_lightingpass_drawmode_ = value;
}

// required int32 Setting_DeferredTestLightsNumber = 18;
inline bool GUISettings::has_setting_deferredtestlightsnumber() const {
  bool value = (_impl_._has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline void GUISettings::clear_setting_deferredtestlightsnumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_deferredtestlightsnumber_ = 0;
  _impl_._has_bits_[0] &= ~0x00800000u;
}
inline ::int32_t GUISettings::setting_deferredtestlightsnumber() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.Setting_DeferredTestLightsNumber)
  return _internal_setting_deferredtestlightsnumber();
}
inline void GUISettings::set_setting_deferredtestlightsnumber(::int32_t value) {
  _internal_set_setting_deferredtestlightsnumber(value);
  _impl_._has_bits_[0] |= 0x00800000u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.Setting_DeferredTestLightsNumber)
}
inline ::int32_t GUISettings::_internal_setting_deferredtestlightsnumber() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.setting_deferredtestlightsnumber_;
}
inline void GUISettings::_internal_set_setting_deferredtestlightsnumber(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_deferredtestlightsnumber_ = value;
}

// required float Setting_DeferredAmbientStrength = 19;
inline bool GUISettings::has_setting_deferredambientstrength() const {
  bool value = (_impl_._has_bits_[0] & 0x01000000u) != 0;
  return value;
}
inline void GUISettings::clear_setting_deferredambientstrength() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_deferredambientstrength_ = 0;
  _impl_._has_bits_[0] &= ~0x01000000u;
}
inline float GUISettings::setting_deferredambientstrength() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.Setting_DeferredAmbientStrength)
  return _internal_setting_deferredambientstrength();
}
inline void GUISettings::set_setting_deferredambientstrength(float value) {
  _internal_set_setting_deferredambientstrength(value);
  _impl_._has_bits_[0] |= 0x01000000u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.Setting_DeferredAmbientStrength)
}
inline float GUISettings::_internal_setting_deferredambientstrength() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.setting_deferredambientstrength_;
}
inline void GUISettings::_internal_set_setting_deferredambientstrength(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_deferredambientstrength_ = value;
}

// required int32 viewModelSkin = 20;
inline bool GUISettings::has_viewmodelskin() const {
  bool value = (_impl_._has_bits_[0] & 0x02000000u) != 0;
  return value;
}
inline void GUISettings::clear_viewmodelskin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.viewmodelskin_ = 0;
  _impl_._has_bits_[0] &= ~0x02000000u;
}
inline ::int32_t GUISettings::viewmodelskin() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.viewModelSkin)
  return _internal_viewmodelskin();
}
inline void GUISettings::set_viewmodelskin(::int32_t value) {
  _internal_set_viewmodelskin(value);
  _impl_._has_bits_[0] |= 0x02000000u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.viewModelSkin)
}
inline ::int32_t GUISettings::_internal_viewmodelskin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.viewmodelskin_;
}
inline void GUISettings::_internal_set_viewmodelskin(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.viewmodelskin_ = value;
}

// required .KuplungApp.Vec3 SolidLight_Direction = 21;
inline bool GUISettings::has_solidlight_direction() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.solidlight_direction_ != nullptr);
  return value;
}
inline const ::KuplungApp::Vec3& GUISettings::_internal_solidlight_direction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::Vec3* p = _impl_.solidlight_direction_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::Vec3&>(::KuplungApp::_Vec3_default_instance_);
}
inline const ::KuplungApp::Vec3& GUISettings::solidlight_direction() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.SolidLight_Direction)
  return _internal_solidlight_direction();
}
inline void GUISettings::unsafe_arena_set_allocated_solidlight_direction(::KuplungApp::Vec3* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.solidlight_direction_);
  }
  _impl_.solidlight_direction_ = reinterpret_cast<::KuplungApp::Vec3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.GUISettings.SolidLight_Direction)
}
inline ::KuplungApp::Vec3* GUISettings::release_solidlight_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::KuplungApp::Vec3* released = _impl_.solidlight_direction_;
  _impl_.solidlight_direction_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::Vec3* GUISettings::unsafe_arena_release_solidlight_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.GUISettings.SolidLight_Direction)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::KuplungApp::Vec3* temp = _impl_.solidlight_direction_;
  _impl_.solidlight_direction_ = nullptr;
  return temp;
}
inline ::KuplungApp::Vec3* GUISettings::_internal_mutable_solidlight_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.solidlight_direction_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::Vec3>(GetArena());
    _impl_.solidlight_direction_ = reinterpret_cast<::KuplungApp::Vec3*>(p);
  }
  return _impl_.solidlight_direction_;
}
inline ::KuplungApp::Vec3* GUISettings::mutable_solidlight_direction() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::KuplungApp::Vec3* _msg = _internal_mutable_solidlight_direction();
  // @@protoc_insertion_point(field_mutable:KuplungApp.GUISettings.SolidLight_Direction)
  return _msg;
}
inline void GUISettings::set_allocated_solidlight_direction(::KuplungApp::Vec3* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.solidlight_direction_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.solidlight_direction_ = reinterpret_cast<::KuplungApp::Vec3*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.GUISettings.SolidLight_Direction)
}

// required .KuplungApp.Vec3 SolidLight_MaterialColor = 22;
inline bool GUISettings::has_solidlight_materialcolor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.solidlight_materialcolor_ != nullptr);
  return value;
}
inline const ::KuplungApp::Vec3& GUISettings::_internal_solidlight_materialcolor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::Vec3* p = _impl_.solidlight_materialcolor_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::Vec3&>(::KuplungApp::_Vec3_default_instance_);
}
inline const ::KuplungApp::Vec3& GUISettings::solidlight_materialcolor() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.SolidLight_MaterialColor)
  return _internal_solidlight_materialcolor();
}
inline void GUISettings::unsafe_arena_set_allocated_solidlight_materialcolor(::KuplungApp::Vec3* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.solidlight_materialcolor_);
  }
  _impl_.solidlight_materialcolor_ = reinterpret_cast<::KuplungApp::Vec3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.GUISettings.SolidLight_MaterialColor)
}
inline ::KuplungApp::Vec3* GUISettings::release_solidlight_materialcolor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::KuplungApp::Vec3* released = _impl_.solidlight_materialcolor_;
  _impl_.solidlight_materialcolor_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::Vec3* GUISettings::unsafe_arena_release_solidlight_materialcolor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.GUISettings.SolidLight_MaterialColor)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::KuplungApp::Vec3* temp = _impl_.solidlight_materialcolor_;
  _impl_.solidlight_materialcolor_ = nullptr;
  return temp;
}
inline ::KuplungApp::Vec3* GUISettings::_internal_mutable_solidlight_materialcolor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.solidlight_materialcolor_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::Vec3>(GetArena());
    _impl_.solidlight_materialcolor_ = reinterpret_cast<::KuplungApp::Vec3*>(p);
  }
  return _impl_.solidlight_materialcolor_;
}
inline ::KuplungApp::Vec3* GUISettings::mutable_solidlight_materialcolor() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::KuplungApp::Vec3* _msg = _internal_mutable_solidlight_materialcolor();
  // @@protoc_insertion_point(field_mutable:KuplungApp.GUISettings.SolidLight_MaterialColor)
  return _msg;
}
inline void GUISettings::set_allocated_solidlight_materialcolor(::KuplungApp::Vec3* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.solidlight_materialcolor_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.solidlight_materialcolor_ = reinterpret_cast<::KuplungApp::Vec3*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.GUISettings.SolidLight_MaterialColor)
}

// required .KuplungApp.Vec3 SolidLight_Ambient = 23;
inline bool GUISettings::has_solidlight_ambient() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.solidlight_ambient_ != nullptr);
  return value;
}
inline const ::KuplungApp::Vec3& GUISettings::_internal_solidlight_ambient() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::Vec3* p = _impl_.solidlight_ambient_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::Vec3&>(::KuplungApp::_Vec3_default_instance_);
}
inline const ::KuplungApp::Vec3& GUISettings::solidlight_ambient() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.SolidLight_Ambient)
  return _internal_solidlight_ambient();
}
inline void GUISettings::unsafe_arena_set_allocated_solidlight_ambient(::KuplungApp::Vec3* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.solidlight_ambient_);
  }
  _impl_.solidlight_ambient_ = reinterpret_cast<::KuplungApp::Vec3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.GUISettings.SolidLight_Ambient)
}
inline ::KuplungApp::Vec3* GUISettings::release_solidlight_ambient() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::KuplungApp::Vec3* released = _impl_.solidlight_ambient_;
  _impl_.solidlight_ambient_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::Vec3* GUISettings::unsafe_arena_release_solidlight_ambient() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.GUISettings.SolidLight_Ambient)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::KuplungApp::Vec3* temp = _impl_.solidlight_ambient_;
  _impl_.solidlight_ambient_ = nullptr;
  return temp;
}
inline ::KuplungApp::Vec3* GUISettings::_internal_mutable_solidlight_ambient() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.solidlight_ambient_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::Vec3>(GetArena());
    _impl_.solidlight_ambient_ = reinterpret_cast<::KuplungApp::Vec3*>(p);
  }
  return _impl_.solidlight_ambient_;
}
inline ::KuplungApp::Vec3* GUISettings::mutable_solidlight_ambient() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::KuplungApp::Vec3* _msg = _internal_mutable_solidlight_ambient();
  // @@protoc_insertion_point(field_mutable:KuplungApp.GUISettings.SolidLight_Ambient)
  return _msg;
}
inline void GUISettings::set_allocated_solidlight_ambient(::KuplungApp::Vec3* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.solidlight_ambient_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.solidlight_ambient_ = reinterpret_cast<::KuplungApp::Vec3*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.GUISettings.SolidLight_Ambient)
}

// required .KuplungApp.Vec3 SolidLight_Diffuse = 24;
inline bool GUISettings::has_solidlight_diffuse() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.solidlight_diffuse_ != nullptr);
  return value;
}
inline const ::KuplungApp::Vec3& GUISettings::_internal_solidlight_diffuse() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::Vec3* p = _impl_.solidlight_diffuse_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::Vec3&>(::KuplungApp::_Vec3_default_instance_);
}
inline const ::KuplungApp::Vec3& GUISettings::solidlight_diffuse() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.SolidLight_Diffuse)
  return _internal_solidlight_diffuse();
}
inline void GUISettings::unsafe_arena_set_allocated_solidlight_diffuse(::KuplungApp::Vec3* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.solidlight_diffuse_);
  }
  _impl_.solidlight_diffuse_ = reinterpret_cast<::KuplungApp::Vec3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.GUISettings.SolidLight_Diffuse)
}
inline ::KuplungApp::Vec3* GUISettings::release_solidlight_diffuse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::KuplungApp::Vec3* released = _impl_.solidlight_diffuse_;
  _impl_.solidlight_diffuse_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::Vec3* GUISettings::unsafe_arena_release_solidlight_diffuse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.GUISettings.SolidLight_Diffuse)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::KuplungApp::Vec3* temp = _impl_.solidlight_diffuse_;
  _impl_.solidlight_diffuse_ = nullptr;
  return temp;
}
inline ::KuplungApp::Vec3* GUISettings::_internal_mutable_solidlight_diffuse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.solidlight_diffuse_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::Vec3>(GetArena());
    _impl_.solidlight_diffuse_ = reinterpret_cast<::KuplungApp::Vec3*>(p);
  }
  return _impl_.solidlight_diffuse_;
}
inline ::KuplungApp::Vec3* GUISettings::mutable_solidlight_diffuse() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::KuplungApp::Vec3* _msg = _internal_mutable_solidlight_diffuse();
  // @@protoc_insertion_point(field_mutable:KuplungApp.GUISettings.SolidLight_Diffuse)
  return _msg;
}
inline void GUISettings::set_allocated_solidlight_diffuse(::KuplungApp::Vec3* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.solidlight_diffuse_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.solidlight_diffuse_ = reinterpret_cast<::KuplungApp::Vec3*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.GUISettings.SolidLight_Diffuse)
}

// required .KuplungApp.Vec3 SolidLight_Specular = 25;
inline bool GUISettings::has_solidlight_specular() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.solidlight_specular_ != nullptr);
  return value;
}
inline const ::KuplungApp::Vec3& GUISettings::_internal_solidlight_specular() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::Vec3* p = _impl_.solidlight_specular_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::Vec3&>(::KuplungApp::_Vec3_default_instance_);
}
inline const ::KuplungApp::Vec3& GUISettings::solidlight_specular() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.SolidLight_Specular)
  return _internal_solidlight_specular();
}
inline void GUISettings::unsafe_arena_set_allocated_solidlight_specular(::KuplungApp::Vec3* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.solidlight_specular_);
  }
  _impl_.solidlight_specular_ = reinterpret_cast<::KuplungApp::Vec3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.GUISettings.SolidLight_Specular)
}
inline ::KuplungApp::Vec3* GUISettings::release_solidlight_specular() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::KuplungApp::Vec3* released = _impl_.solidlight_specular_;
  _impl_.solidlight_specular_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::Vec3* GUISettings::unsafe_arena_release_solidlight_specular() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.GUISettings.SolidLight_Specular)

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::KuplungApp::Vec3* temp = _impl_.solidlight_specular_;
  _impl_.solidlight_specular_ = nullptr;
  return temp;
}
inline ::KuplungApp::Vec3* GUISettings::_internal_mutable_solidlight_specular() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.solidlight_specular_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::Vec3>(GetArena());
    _impl_.solidlight_specular_ = reinterpret_cast<::KuplungApp::Vec3*>(p);
  }
  return _impl_.solidlight_specular_;
}
inline ::KuplungApp::Vec3* GUISettings::mutable_solidlight_specular() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000080u;
  ::KuplungApp::Vec3* _msg = _internal_mutable_solidlight_specular();
  // @@protoc_insertion_point(field_mutable:KuplungApp.GUISettings.SolidLight_Specular)
  return _msg;
}
inline void GUISettings::set_allocated_solidlight_specular(::KuplungApp::Vec3* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.solidlight_specular_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }

  _impl_.solidlight_specular_ = reinterpret_cast<::KuplungApp::Vec3*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.GUISettings.SolidLight_Specular)
}

// required float SolidLight_Ambient_Strength = 26;
inline bool GUISettings::has_solidlight_ambient_strength() const {
  bool value = (_impl_._has_bits_[0] & 0x40000000u) != 0;
  return value;
}
inline void GUISettings::clear_solidlight_ambient_strength() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.solidlight_ambient_strength_ = 0;
  _impl_._has_bits_[0] &= ~0x40000000u;
}
inline float GUISettings::solidlight_ambient_strength() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.SolidLight_Ambient_Strength)
  return _internal_solidlight_ambient_strength();
}
inline void GUISettings::set_solidlight_ambient_strength(float value) {
  _internal_set_solidlight_ambient_strength(value);
  _impl_._has_bits_[0] |= 0x40000000u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.SolidLight_Ambient_Strength)
}
inline float GUISettings::_internal_solidlight_ambient_strength() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.solidlight_ambient_strength_;
}
inline void GUISettings::_internal_set_solidlight_ambient_strength(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.solidlight_ambient_strength_ = value;
}

// required float SolidLight_Diffuse_Strength = 27;
inline bool GUISettings::has_solidlight_diffuse_strength() const {
  bool value = (_impl_._has_bits_[0] & 0x80000000u) != 0;
  return value;
}
inline void GUISettings::clear_solidlight_diffuse_strength() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.solidlight_diffuse_strength_ = 0;
  _impl_._has_bits_[0] &= ~0x80000000u;
}
inline float GUISettings::solidlight_diffuse_strength() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.SolidLight_Diffuse_Strength)
  return _internal_solidlight_diffuse_strength();
}
inline void GUISettings::set_solidlight_diffuse_strength(float value) {
  _internal_set_solidlight_diffuse_strength(value);
  _impl_._has_bits_[0] |= 0x80000000u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.SolidLight_Diffuse_Strength)
}
inline float GUISettings::_internal_solidlight_diffuse_strength() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.solidlight_diffuse_strength_;
}
inline void GUISettings::_internal_set_solidlight_diffuse_strength(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.solidlight_diffuse_strength_ = value;
}

// required float SolidLight_Specular_Strength = 28;
inline bool GUISettings::has_solidlight_specular_strength() const {
  bool value = (_impl_._has_bits_[1] & 0x00000001u) != 0;
  return value;
}
inline void GUISettings::clear_solidlight_specular_strength() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.solidlight_specular_strength_ = 0;
  _impl_._has_bits_[1] &= ~0x00000001u;
}
inline float GUISettings::solidlight_specular_strength() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.SolidLight_Specular_Strength)
  return _internal_solidlight_specular_strength();
}
inline void GUISettings::set_solidlight_specular_strength(float value) {
  _internal_set_solidlight_specular_strength(value);
  _impl_._has_bits_[1] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.SolidLight_Specular_Strength)
}
inline float GUISettings::_internal_solidlight_specular_strength() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.solidlight_specular_strength_;
}
inline void GUISettings::_internal_set_solidlight_specular_strength(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.solidlight_specular_strength_ = value;
}

// required bool SolidLight_MaterialColor_ColorPicker = 29;
inline bool GUISettings::has_solidlight_materialcolor_colorpicker() const {
  bool value = (_impl_._has_bits_[0] & 0x10000000u) != 0;
  return value;
}
inline void GUISettings::clear_solidlight_materialcolor_colorpicker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.solidlight_materialcolor_colorpicker_ = false;
  _impl_._has_bits_[0] &= ~0x10000000u;
}
inline bool GUISettings::solidlight_materialcolor_colorpicker() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.SolidLight_MaterialColor_ColorPicker)
  return _internal_solidlight_materialcolor_colorpicker();
}
inline void GUISettings::set_solidlight_materialcolor_colorpicker(bool value) {
  _internal_set_solidlight_materialcolor_colorpicker(value);
  _impl_._has_bits_[0] |= 0x10000000u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.SolidLight_MaterialColor_ColorPicker)
}
inline bool GUISettings::_internal_solidlight_materialcolor_colorpicker() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.solidlight_materialcolor_colorpicker_;
}
inline void GUISettings::_internal_set_solidlight_materialcolor_colorpicker(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.solidlight_materialcolor_colorpicker_ = value;
}

// required bool SolidLight_Ambient_ColorPicker = 30;
inline bool GUISettings::has_solidlight_ambient_colorpicker() const {
  bool value = (_impl_._has_bits_[0] & 0x20000000u) != 0;
  return value;
}
inline void GUISettings::clear_solidlight_ambient_colorpicker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.solidlight_ambient_colorpicker_ = false;
  _impl_._has_bits_[0] &= ~0x20000000u;
}
inline bool GUISettings::solidlight_ambient_colorpicker() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.SolidLight_Ambient_ColorPicker)
  return _internal_solidlight_ambient_colorpicker();
}
inline void GUISettings::set_solidlight_ambient_colorpicker(bool value) {
  _internal_set_solidlight_ambient_colorpicker(value);
  _impl_._has_bits_[0] |= 0x20000000u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.SolidLight_Ambient_ColorPicker)
}
inline bool GUISettings::_internal_solidlight_ambient_colorpicker() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.solidlight_ambient_colorpicker_;
}
inline void GUISettings::_internal_set_solidlight_ambient_colorpicker(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.solidlight_ambient_colorpicker_ = value;
}

// required bool SolidLight_Diffuse_ColorPicker = 31;
inline bool GUISettings::has_solidlight_diffuse_colorpicker() const {
  bool value = (_impl_._has_bits_[1] & 0x00000002u) != 0;
  return value;
}
inline void GUISettings::clear_solidlight_diffuse_colorpicker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.solidlight_diffuse_colorpicker_ = false;
  _impl_._has_bits_[1] &= ~0x00000002u;
}
inline bool GUISettings::solidlight_diffuse_colorpicker() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.SolidLight_Diffuse_ColorPicker)
  return _internal_solidlight_diffuse_colorpicker();
}
inline void GUISettings::set_solidlight_diffuse_colorpicker(bool value) {
  _internal_set_solidlight_diffuse_colorpicker(value);
  _impl_._has_bits_[1] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.SolidLight_Diffuse_ColorPicker)
}
inline bool GUISettings::_internal_solidlight_diffuse_colorpicker() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.solidlight_diffuse_colorpicker_;
}
inline void GUISettings::_internal_set_solidlight_diffuse_colorpicker(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.solidlight_diffuse_colorpicker_ = value;
}

// required bool SolidLight_Specular_ColorPicker = 32;
inline bool GUISettings::has_solidlight_specular_colorpicker() const {
  bool value = (_impl_._has_bits_[1] & 0x00000004u) != 0;
  return value;
}
inline void GUISettings::clear_solidlight_specular_colorpicker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.solidlight_specular_colorpicker_ = false;
  _impl_._has_bits_[1] &= ~0x00000004u;
}
inline bool GUISettings::solidlight_specular_colorpicker() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.SolidLight_Specular_ColorPicker)
  return _internal_solidlight_specular_colorpicker();
}
inline void GUISettings::set_solidlight_specular_colorpicker(bool value) {
  _internal_set_solidlight_specular_colorpicker(value);
  _impl_._has_bits_[1] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.SolidLight_Specular_ColorPicker)
}
inline bool GUISettings::_internal_solidlight_specular_colorpicker() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.solidlight_specular_colorpicker_;
}
inline void GUISettings::_internal_set_solidlight_specular_colorpicker(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.solidlight_specular_colorpicker_ = value;
}

// required bool Setting_ShowTerrain = 33;
inline bool GUISettings::has_setting_showterrain() const {
  bool value = (_impl_._has_bits_[1] & 0x00000008u) != 0;
  return value;
}
inline void GUISettings::clear_setting_showterrain() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_showterrain_ = false;
  _impl_._has_bits_[1] &= ~0x00000008u;
}
inline bool GUISettings::setting_showterrain() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.Setting_ShowTerrain)
  return _internal_setting_showterrain();
}
inline void GUISettings::set_setting_showterrain(bool value) {
  _internal_set_setting_showterrain(value);
  _impl_._has_bits_[1] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.Setting_ShowTerrain)
}
inline bool GUISettings::_internal_setting_showterrain() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.setting_showterrain_;
}
inline void GUISettings::_internal_set_setting_showterrain(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_showterrain_ = value;
}

// required bool Setting_TerrainModel = 34;
inline bool GUISettings::has_setting_terrainmodel() const {
  bool value = (_impl_._has_bits_[1] & 0x00000010u) != 0;
  return value;
}
inline void GUISettings::clear_setting_terrainmodel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_terrainmodel_ = false;
  _impl_._has_bits_[1] &= ~0x00000010u;
}
inline bool GUISettings::setting_terrainmodel() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.Setting_TerrainModel)
  return _internal_setting_terrainmodel();
}
inline void GUISettings::set_setting_terrainmodel(bool value) {
  _internal_set_setting_terrainmodel(value);
  _impl_._has_bits_[1] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.Setting_TerrainModel)
}
inline bool GUISettings::_internal_setting_terrainmodel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.setting_terrainmodel_;
}
inline void GUISettings::_internal_set_setting_terrainmodel(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_terrainmodel_ = value;
}

// required bool Setting_TerrainAnimateX = 35;
inline bool GUISettings::has_setting_terrainanimatex() const {
  bool value = (_impl_._has_bits_[1] & 0x00000040u) != 0;
  return value;
}
inline void GUISettings::clear_setting_terrainanimatex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_terrainanimatex_ = false;
  _impl_._has_bits_[1] &= ~0x00000040u;
}
inline bool GUISettings::setting_terrainanimatex() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.Setting_TerrainAnimateX)
  return _internal_setting_terrainanimatex();
}
inline void GUISettings::set_setting_terrainanimatex(bool value) {
  _internal_set_setting_terrainanimatex(value);
  _impl_._has_bits_[1] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.Setting_TerrainAnimateX)
}
inline bool GUISettings::_internal_setting_terrainanimatex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.setting_terrainanimatex_;
}
inline void GUISettings::_internal_set_setting_terrainanimatex(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_terrainanimatex_ = value;
}

// required bool Setting_TerrainAnimateY = 36;
inline bool GUISettings::has_setting_terrainanimatey() const {
  bool value = (_impl_._has_bits_[1] & 0x00000080u) != 0;
  return value;
}
inline void GUISettings::clear_setting_terrainanimatey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_terrainanimatey_ = false;
  _impl_._has_bits_[1] &= ~0x00000080u;
}
inline bool GUISettings::setting_terrainanimatey() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.Setting_TerrainAnimateY)
  return _internal_setting_terrainanimatey();
}
inline void GUISettings::set_setting_terrainanimatey(bool value) {
  _internal_set_setting_terrainanimatey(value);
  _impl_._has_bits_[1] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.Setting_TerrainAnimateY)
}
inline bool GUISettings::_internal_setting_terrainanimatey() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.setting_terrainanimatey_;
}
inline void GUISettings::_internal_set_setting_terrainanimatey(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_terrainanimatey_ = value;
}

// required string heightmapImage = 37;
inline bool GUISettings::has_heightmapimage() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void GUISettings::clear_heightmapimage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.heightmapimage_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GUISettings::heightmapimage() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.heightmapImage)
  return _internal_heightmapimage();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GUISettings::set_heightmapimage(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.heightmapimage_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.heightmapImage)
}
inline std::string* GUISettings::mutable_heightmapimage() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_heightmapimage();
  // @@protoc_insertion_point(field_mutable:KuplungApp.GUISettings.heightmapImage)
  return _s;
}
inline const std::string& GUISettings::_internal_heightmapimage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.heightmapimage_.Get();
}
inline void GUISettings::_internal_set_heightmapimage(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.heightmapimage_.Set(value, GetArena());
}
inline std::string* GUISettings::_internal_mutable_heightmapimage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.heightmapimage_.Mutable( GetArena());
}
inline std::string* GUISettings::release_heightmapimage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.GUISettings.heightmapImage)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.heightmapimage_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.heightmapimage_.Set("", GetArena());
  }
  return released;
}
inline void GUISettings::set_allocated_heightmapimage(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.heightmapimage_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.heightmapimage_.IsDefault()) {
    _impl_.heightmapimage_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.GUISettings.heightmapImage)
}

// required int32 Setting_TerrainWidth = 38;
inline bool GUISettings::has_setting_terrainwidth() const {
  bool value = (_impl_._has_bits_[1] & 0x00000020u) != 0;
  return value;
}
inline void GUISettings::clear_setting_terrainwidth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_terrainwidth_ = 0;
  _impl_._has_bits_[1] &= ~0x00000020u;
}
inline ::int32_t GUISettings::setting_terrainwidth() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.Setting_TerrainWidth)
  return _internal_setting_terrainwidth();
}
inline void GUISettings::set_setting_terrainwidth(::int32_t value) {
  _internal_set_setting_terrainwidth(value);
  _impl_._has_bits_[1] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.Setting_TerrainWidth)
}
inline ::int32_t GUISettings::_internal_setting_terrainwidth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.setting_terrainwidth_;
}
inline void GUISettings::_internal_set_setting_terrainwidth(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_terrainwidth_ = value;
}

// required int32 Setting_TerrainHeight = 39;
inline bool GUISettings::has_setting_terrainheight() const {
  bool value = (_impl_._has_bits_[1] & 0x00000400u) != 0;
  return value;
}
inline void GUISettings::clear_setting_terrainheight() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_terrainheight_ = 0;
  _impl_._has_bits_[1] &= ~0x00000400u;
}
inline ::int32_t GUISettings::setting_terrainheight() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.Setting_TerrainHeight)
  return _internal_setting_terrainheight();
}
inline void GUISettings::set_setting_terrainheight(::int32_t value) {
  _internal_set_setting_terrainheight(value);
  _impl_._has_bits_[1] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.Setting_TerrainHeight)
}
inline ::int32_t GUISettings::_internal_setting_terrainheight() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.setting_terrainheight_;
}
inline void GUISettings::_internal_set_setting_terrainheight(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_terrainheight_ = value;
}

// required bool Setting_ShowSpaceship = 40;
inline bool GUISettings::has_setting_showspaceship() const {
  bool value = (_impl_._has_bits_[1] & 0x00000100u) != 0;
  return value;
}
inline void GUISettings::clear_setting_showspaceship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_showspaceship_ = false;
  _impl_._has_bits_[1] &= ~0x00000100u;
}
inline bool GUISettings::setting_showspaceship() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.Setting_ShowSpaceship)
  return _internal_setting_showspaceship();
}
inline void GUISettings::set_setting_showspaceship(bool value) {
  _internal_set_setting_showspaceship(value);
  _impl_._has_bits_[1] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.Setting_ShowSpaceship)
}
inline bool GUISettings::_internal_setting_showspaceship() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.setting_showspaceship_;
}
inline void GUISettings::_internal_set_setting_showspaceship(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_showspaceship_ = value;
}

// required bool Setting_GenerateSpaceship = 41;
inline bool GUISettings::has_setting_generatespaceship() const {
  bool value = (_impl_._has_bits_[1] & 0x00000200u) != 0;
  return value;
}
inline void GUISettings::clear_setting_generatespaceship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_generatespaceship_ = false;
  _impl_._has_bits_[1] &= ~0x00000200u;
}
inline bool GUISettings::setting_generatespaceship() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.Setting_GenerateSpaceship)
  return _internal_setting_generatespaceship();
}
inline void GUISettings::set_setting_generatespaceship(bool value) {
  _internal_set_setting_generatespaceship(value);
  _impl_._has_bits_[1] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:KuplungApp.GUISettings.Setting_GenerateSpaceship)
}
inline bool GUISettings::_internal_setting_generatespaceship() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.setting_generatespaceship_;
}
inline void GUISettings::_internal_set_setting_generatespaceship(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_generatespaceship_ = value;
}

// required .KuplungApp.CameraSettings camera = 42;
inline bool GUISettings::has_camera() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_ != nullptr);
  return value;
}
inline void GUISettings::clear_camera() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_ != nullptr) _impl_.camera_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline const ::KuplungApp::CameraSettings& GUISettings::_internal_camera() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::CameraSettings* p = _impl_.camera_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::CameraSettings&>(::KuplungApp::_CameraSettings_default_instance_);
}
inline const ::KuplungApp::CameraSettings& GUISettings::camera() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.camera)
  return _internal_camera();
}
inline void GUISettings::unsafe_arena_set_allocated_camera(::KuplungApp::CameraSettings* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_);
  }
  _impl_.camera_ = reinterpret_cast<::KuplungApp::CameraSettings*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.GUISettings.camera)
}
inline ::KuplungApp::CameraSettings* GUISettings::release_camera() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::KuplungApp::CameraSettings* released = _impl_.camera_;
  _impl_.camera_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::CameraSettings* GUISettings::unsafe_arena_release_camera() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.GUISettings.camera)

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::KuplungApp::CameraSettings* temp = _impl_.camera_;
  _impl_.camera_ = nullptr;
  return temp;
}
inline ::KuplungApp::CameraSettings* GUISettings::_internal_mutable_camera() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::CameraSettings>(GetArena());
    _impl_.camera_ = reinterpret_cast<::KuplungApp::CameraSettings*>(p);
  }
  return _impl_.camera_;
}
inline ::KuplungApp::CameraSettings* GUISettings::mutable_camera() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000100u;
  ::KuplungApp::CameraSettings* _msg = _internal_mutable_camera();
  // @@protoc_insertion_point(field_mutable:KuplungApp.GUISettings.camera)
  return _msg;
}
inline void GUISettings::set_allocated_camera(::KuplungApp::CameraSettings* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.camera_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }

  _impl_.camera_ = reinterpret_cast<::KuplungApp::CameraSettings*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.GUISettings.camera)
}

// required .KuplungApp.GridSettings grid = 43;
inline bool GUISettings::has_grid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.grid_ != nullptr);
  return value;
}
inline void GUISettings::clear_grid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.grid_ != nullptr) _impl_.grid_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline const ::KuplungApp::GridSettings& GUISettings::_internal_grid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::GridSettings* p = _impl_.grid_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::GridSettings&>(::KuplungApp::_GridSettings_default_instance_);
}
inline const ::KuplungApp::GridSettings& GUISettings::grid() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.grid)
  return _internal_grid();
}
inline void GUISettings::unsafe_arena_set_allocated_grid(::KuplungApp::GridSettings* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.grid_);
  }
  _impl_.grid_ = reinterpret_cast<::KuplungApp::GridSettings*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.GUISettings.grid)
}
inline ::KuplungApp::GridSettings* GUISettings::release_grid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::KuplungApp::GridSettings* released = _impl_.grid_;
  _impl_.grid_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::GridSettings* GUISettings::unsafe_arena_release_grid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.GUISettings.grid)

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::KuplungApp::GridSettings* temp = _impl_.grid_;
  _impl_.grid_ = nullptr;
  return temp;
}
inline ::KuplungApp::GridSettings* GUISettings::_internal_mutable_grid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.grid_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::GridSettings>(GetArena());
    _impl_.grid_ = reinterpret_cast<::KuplungApp::GridSettings*>(p);
  }
  return _impl_.grid_;
}
inline ::KuplungApp::GridSettings* GUISettings::mutable_grid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000200u;
  ::KuplungApp::GridSettings* _msg = _internal_mutable_grid();
  // @@protoc_insertion_point(field_mutable:KuplungApp.GUISettings.grid)
  return _msg;
}
inline void GUISettings::set_allocated_grid(::KuplungApp::GridSettings* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.grid_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }

  _impl_.grid_ = reinterpret_cast<::KuplungApp::GridSettings*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.GUISettings.grid)
}

// repeated .KuplungApp.LightObject lights = 44;
inline int GUISettings::_internal_lights_size() const {
  return _internal_lights().size();
}
inline int GUISettings::lights_size() const {
  return _internal_lights_size();
}
inline void GUISettings::clear_lights() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lights_.Clear();
}
inline ::KuplungApp::LightObject* GUISettings::mutable_lights(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:KuplungApp.GUISettings.lights)
  return _internal_mutable_lights()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::KuplungApp::LightObject>* GUISettings::mutable_lights()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:KuplungApp.GUISettings.lights)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_lights();
}
inline const ::KuplungApp::LightObject& GUISettings::lights(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.GUISettings.lights)
  return _internal_lights().Get(index);
}
inline ::KuplungApp::LightObject* GUISettings::add_lights() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::KuplungApp::LightObject* _add = _internal_mutable_lights()->Add();
  // @@protoc_insertion_point(field_add:KuplungApp.GUISettings.lights)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::KuplungApp::LightObject>& GUISettings::lights() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:KuplungApp.GUISettings.lights)
  return _internal_lights();
}
inline const ::google::protobuf::RepeatedPtrField<::KuplungApp::LightObject>&
GUISettings::_internal_lights() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lights_;
}
inline ::google::protobuf::RepeatedPtrField<::KuplungApp::LightObject>*
GUISettings::_internal_mutable_lights() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.lights_;
}

// -------------------------------------------------------------------

// CameraSettings

// required .KuplungApp.Vec3 cameraPosition = 1;
inline bool CameraSettings::has_cameraposition() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cameraposition_ != nullptr);
  return value;
}
inline const ::KuplungApp::Vec3& CameraSettings::_internal_cameraposition() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::Vec3* p = _impl_.cameraposition_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::Vec3&>(::KuplungApp::_Vec3_default_instance_);
}
inline const ::KuplungApp::Vec3& CameraSettings::cameraposition() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.CameraSettings.cameraPosition)
  return _internal_cameraposition();
}
inline void CameraSettings::unsafe_arena_set_allocated_cameraposition(::KuplungApp::Vec3* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cameraposition_);
  }
  _impl_.cameraposition_ = reinterpret_cast<::KuplungApp::Vec3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.CameraSettings.cameraPosition)
}
inline ::KuplungApp::Vec3* CameraSettings::release_cameraposition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::KuplungApp::Vec3* released = _impl_.cameraposition_;
  _impl_.cameraposition_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::Vec3* CameraSettings::unsafe_arena_release_cameraposition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.CameraSettings.cameraPosition)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::KuplungApp::Vec3* temp = _impl_.cameraposition_;
  _impl_.cameraposition_ = nullptr;
  return temp;
}
inline ::KuplungApp::Vec3* CameraSettings::_internal_mutable_cameraposition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cameraposition_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::Vec3>(GetArena());
    _impl_.cameraposition_ = reinterpret_cast<::KuplungApp::Vec3*>(p);
  }
  return _impl_.cameraposition_;
}
inline ::KuplungApp::Vec3* CameraSettings::mutable_cameraposition() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::KuplungApp::Vec3* _msg = _internal_mutable_cameraposition();
  // @@protoc_insertion_point(field_mutable:KuplungApp.CameraSettings.cameraPosition)
  return _msg;
}
inline void CameraSettings::set_allocated_cameraposition(::KuplungApp::Vec3* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cameraposition_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.cameraposition_ = reinterpret_cast<::KuplungApp::Vec3*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.CameraSettings.cameraPosition)
}

// required .KuplungApp.Vec3 View_Eye = 2;
inline bool CameraSettings::has_view_eye() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.view_eye_ != nullptr);
  return value;
}
inline const ::KuplungApp::Vec3& CameraSettings::_internal_view_eye() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::Vec3* p = _impl_.view_eye_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::Vec3&>(::KuplungApp::_Vec3_default_instance_);
}
inline const ::KuplungApp::Vec3& CameraSettings::view_eye() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.CameraSettings.View_Eye)
  return _internal_view_eye();
}
inline void CameraSettings::unsafe_arena_set_allocated_view_eye(::KuplungApp::Vec3* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.view_eye_);
  }
  _impl_.view_eye_ = reinterpret_cast<::KuplungApp::Vec3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.CameraSettings.View_Eye)
}
inline ::KuplungApp::Vec3* CameraSettings::release_view_eye() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::KuplungApp::Vec3* released = _impl_.view_eye_;
  _impl_.view_eye_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::Vec3* CameraSettings::unsafe_arena_release_view_eye() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.CameraSettings.View_Eye)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::KuplungApp::Vec3* temp = _impl_.view_eye_;
  _impl_.view_eye_ = nullptr;
  return temp;
}
inline ::KuplungApp::Vec3* CameraSettings::_internal_mutable_view_eye() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.view_eye_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::Vec3>(GetArena());
    _impl_.view_eye_ = reinterpret_cast<::KuplungApp::Vec3*>(p);
  }
  return _impl_.view_eye_;
}
inline ::KuplungApp::Vec3* CameraSettings::mutable_view_eye() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::KuplungApp::Vec3* _msg = _internal_mutable_view_eye();
  // @@protoc_insertion_point(field_mutable:KuplungApp.CameraSettings.View_Eye)
  return _msg;
}
inline void CameraSettings::set_allocated_view_eye(::KuplungApp::Vec3* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.view_eye_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.view_eye_ = reinterpret_cast<::KuplungApp::Vec3*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.CameraSettings.View_Eye)
}

// required .KuplungApp.Vec3 View_Center = 3;
inline bool CameraSettings::has_view_center() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.view_center_ != nullptr);
  return value;
}
inline const ::KuplungApp::Vec3& CameraSettings::_internal_view_center() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::Vec3* p = _impl_.view_center_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::Vec3&>(::KuplungApp::_Vec3_default_instance_);
}
inline const ::KuplungApp::Vec3& CameraSettings::view_center() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.CameraSettings.View_Center)
  return _internal_view_center();
}
inline void CameraSettings::unsafe_arena_set_allocated_view_center(::KuplungApp::Vec3* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.view_center_);
  }
  _impl_.view_center_ = reinterpret_cast<::KuplungApp::Vec3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.CameraSettings.View_Center)
}
inline ::KuplungApp::Vec3* CameraSettings::release_view_center() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::KuplungApp::Vec3* released = _impl_.view_center_;
  _impl_.view_center_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::Vec3* CameraSettings::unsafe_arena_release_view_center() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.CameraSettings.View_Center)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::KuplungApp::Vec3* temp = _impl_.view_center_;
  _impl_.view_center_ = nullptr;
  return temp;
}
inline ::KuplungApp::Vec3* CameraSettings::_internal_mutable_view_center() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.view_center_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::Vec3>(GetArena());
    _impl_.view_center_ = reinterpret_cast<::KuplungApp::Vec3*>(p);
  }
  return _impl_.view_center_;
}
inline ::KuplungApp::Vec3* CameraSettings::mutable_view_center() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::KuplungApp::Vec3* _msg = _internal_mutable_view_center();
  // @@protoc_insertion_point(field_mutable:KuplungApp.CameraSettings.View_Center)
  return _msg;
}
inline void CameraSettings::set_allocated_view_center(::KuplungApp::Vec3* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.view_center_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.view_center_ = reinterpret_cast<::KuplungApp::Vec3*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.CameraSettings.View_Center)
}

// required .KuplungApp.Vec3 View_Up = 4;
inline bool CameraSettings::has_view_up() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.view_up_ != nullptr);
  return value;
}
inline const ::KuplungApp::Vec3& CameraSettings::_internal_view_up() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::Vec3* p = _impl_.view_up_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::Vec3&>(::KuplungApp::_Vec3_default_instance_);
}
inline const ::KuplungApp::Vec3& CameraSettings::view_up() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.CameraSettings.View_Up)
  return _internal_view_up();
}
inline void CameraSettings::unsafe_arena_set_allocated_view_up(::KuplungApp::Vec3* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.view_up_);
  }
  _impl_.view_up_ = reinterpret_cast<::KuplungApp::Vec3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.CameraSettings.View_Up)
}
inline ::KuplungApp::Vec3* CameraSettings::release_view_up() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::KuplungApp::Vec3* released = _impl_.view_up_;
  _impl_.view_up_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::Vec3* CameraSettings::unsafe_arena_release_view_up() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.CameraSettings.View_Up)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::KuplungApp::Vec3* temp = _impl_.view_up_;
  _impl_.view_up_ = nullptr;
  return temp;
}
inline ::KuplungApp::Vec3* CameraSettings::_internal_mutable_view_up() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.view_up_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::Vec3>(GetArena());
    _impl_.view_up_ = reinterpret_cast<::KuplungApp::Vec3*>(p);
  }
  return _impl_.view_up_;
}
inline ::KuplungApp::Vec3* CameraSettings::mutable_view_up() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::KuplungApp::Vec3* _msg = _internal_mutable_view_up();
  // @@protoc_insertion_point(field_mutable:KuplungApp.CameraSettings.View_Up)
  return _msg;
}
inline void CameraSettings::set_allocated_view_up(::KuplungApp::Vec3* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.view_up_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.view_up_ = reinterpret_cast<::KuplungApp::Vec3*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.CameraSettings.View_Up)
}

// required .KuplungApp.ObjectCoordinate positionX = 5;
inline bool CameraSettings::has_positionx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.positionx_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& CameraSettings::_internal_positionx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.positionx_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& CameraSettings::positionx() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.CameraSettings.positionX)
  return _internal_positionx();
}
inline void CameraSettings::unsafe_arena_set_allocated_positionx(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.positionx_);
  }
  _impl_.positionx_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.CameraSettings.positionX)
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::release_positionx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.positionx_;
  _impl_.positionx_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::unsafe_arena_release_positionx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.CameraSettings.positionX)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.positionx_;
  _impl_.positionx_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::_internal_mutable_positionx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.positionx_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.positionx_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.positionx_;
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::mutable_positionx() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_positionx();
  // @@protoc_insertion_point(field_mutable:KuplungApp.CameraSettings.positionX)
  return _msg;
}
inline void CameraSettings::set_allocated_positionx(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.positionx_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.positionx_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.CameraSettings.positionX)
}

// required .KuplungApp.ObjectCoordinate positionY = 6;
inline bool CameraSettings::has_positiony() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.positiony_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& CameraSettings::_internal_positiony() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.positiony_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& CameraSettings::positiony() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.CameraSettings.positionY)
  return _internal_positiony();
}
inline void CameraSettings::unsafe_arena_set_allocated_positiony(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.positiony_);
  }
  _impl_.positiony_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.CameraSettings.positionY)
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::release_positiony() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.positiony_;
  _impl_.positiony_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::unsafe_arena_release_positiony() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.CameraSettings.positionY)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.positiony_;
  _impl_.positiony_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::_internal_mutable_positiony() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.positiony_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.positiony_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.positiony_;
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::mutable_positiony() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_positiony();
  // @@protoc_insertion_point(field_mutable:KuplungApp.CameraSettings.positionY)
  return _msg;
}
inline void CameraSettings::set_allocated_positiony(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.positiony_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.positiony_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.CameraSettings.positionY)
}

// required .KuplungApp.ObjectCoordinate positionZ = 7;
inline bool CameraSettings::has_positionz() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.positionz_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& CameraSettings::_internal_positionz() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.positionz_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& CameraSettings::positionz() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.CameraSettings.positionZ)
  return _internal_positionz();
}
inline void CameraSettings::unsafe_arena_set_allocated_positionz(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.positionz_);
  }
  _impl_.positionz_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.CameraSettings.positionZ)
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::release_positionz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.positionz_;
  _impl_.positionz_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::unsafe_arena_release_positionz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.CameraSettings.positionZ)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.positionz_;
  _impl_.positionz_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::_internal_mutable_positionz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.positionz_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.positionz_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.positionz_;
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::mutable_positionz() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_positionz();
  // @@protoc_insertion_point(field_mutable:KuplungApp.CameraSettings.positionZ)
  return _msg;
}
inline void CameraSettings::set_allocated_positionz(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.positionz_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.positionz_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.CameraSettings.positionZ)
}

// required .KuplungApp.ObjectCoordinate rotateX = 8;
inline bool CameraSettings::has_rotatex() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rotatex_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& CameraSettings::_internal_rotatex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.rotatex_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& CameraSettings::rotatex() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.CameraSettings.rotateX)
  return _internal_rotatex();
}
inline void CameraSettings::unsafe_arena_set_allocated_rotatex(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotatex_);
  }
  _impl_.rotatex_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.CameraSettings.rotateX)
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::release_rotatex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.rotatex_;
  _impl_.rotatex_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::unsafe_arena_release_rotatex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.CameraSettings.rotateX)

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.rotatex_;
  _impl_.rotatex_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::_internal_mutable_rotatex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatex_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.rotatex_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.rotatex_;
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::mutable_rotatex() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000080u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_rotatex();
  // @@protoc_insertion_point(field_mutable:KuplungApp.CameraSettings.rotateX)
  return _msg;
}
inline void CameraSettings::set_allocated_rotatex(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotatex_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }

  _impl_.rotatex_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.CameraSettings.rotateX)
}

// required .KuplungApp.ObjectCoordinate rotateY = 9;
inline bool CameraSettings::has_rotatey() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rotatey_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& CameraSettings::_internal_rotatey() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.rotatey_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& CameraSettings::rotatey() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.CameraSettings.rotateY)
  return _internal_rotatey();
}
inline void CameraSettings::unsafe_arena_set_allocated_rotatey(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotatey_);
  }
  _impl_.rotatey_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.CameraSettings.rotateY)
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::release_rotatey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.rotatey_;
  _impl_.rotatey_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::unsafe_arena_release_rotatey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.CameraSettings.rotateY)

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.rotatey_;
  _impl_.rotatey_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::_internal_mutable_rotatey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatey_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.rotatey_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.rotatey_;
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::mutable_rotatey() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000100u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_rotatey();
  // @@protoc_insertion_point(field_mutable:KuplungApp.CameraSettings.rotateY)
  return _msg;
}
inline void CameraSettings::set_allocated_rotatey(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotatey_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }

  _impl_.rotatey_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.CameraSettings.rotateY)
}

// required .KuplungApp.ObjectCoordinate rotateZ = 10;
inline bool CameraSettings::has_rotatez() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rotatez_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& CameraSettings::_internal_rotatez() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.rotatez_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& CameraSettings::rotatez() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.CameraSettings.rotateZ)
  return _internal_rotatez();
}
inline void CameraSettings::unsafe_arena_set_allocated_rotatez(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotatez_);
  }
  _impl_.rotatez_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.CameraSettings.rotateZ)
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::release_rotatez() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.rotatez_;
  _impl_.rotatez_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::unsafe_arena_release_rotatez() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.CameraSettings.rotateZ)

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.rotatez_;
  _impl_.rotatez_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::_internal_mutable_rotatez() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatez_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.rotatez_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.rotatez_;
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::mutable_rotatez() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000200u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_rotatez();
  // @@protoc_insertion_point(field_mutable:KuplungApp.CameraSettings.rotateZ)
  return _msg;
}
inline void CameraSettings::set_allocated_rotatez(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotatez_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }

  _impl_.rotatez_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.CameraSettings.rotateZ)
}

// required .KuplungApp.ObjectCoordinate rotateCenterX = 11;
inline bool CameraSettings::has_rotatecenterx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rotatecenterx_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& CameraSettings::_internal_rotatecenterx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.rotatecenterx_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& CameraSettings::rotatecenterx() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.CameraSettings.rotateCenterX)
  return _internal_rotatecenterx();
}
inline void CameraSettings::unsafe_arena_set_allocated_rotatecenterx(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotatecenterx_);
  }
  _impl_.rotatecenterx_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.CameraSettings.rotateCenterX)
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::release_rotatecenterx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000400u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.rotatecenterx_;
  _impl_.rotatecenterx_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::unsafe_arena_release_rotatecenterx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.CameraSettings.rotateCenterX)

  _impl_._has_bits_[0] &= ~0x00000400u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.rotatecenterx_;
  _impl_.rotatecenterx_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::_internal_mutable_rotatecenterx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatecenterx_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.rotatecenterx_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.rotatecenterx_;
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::mutable_rotatecenterx() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000400u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_rotatecenterx();
  // @@protoc_insertion_point(field_mutable:KuplungApp.CameraSettings.rotateCenterX)
  return _msg;
}
inline void CameraSettings::set_allocated_rotatecenterx(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotatecenterx_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }

  _impl_.rotatecenterx_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.CameraSettings.rotateCenterX)
}

// required .KuplungApp.ObjectCoordinate rotateCenterY = 12;
inline bool CameraSettings::has_rotatecentery() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rotatecentery_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& CameraSettings::_internal_rotatecentery() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.rotatecentery_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& CameraSettings::rotatecentery() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.CameraSettings.rotateCenterY)
  return _internal_rotatecentery();
}
inline void CameraSettings::unsafe_arena_set_allocated_rotatecentery(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotatecentery_);
  }
  _impl_.rotatecentery_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.CameraSettings.rotateCenterY)
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::release_rotatecentery() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000800u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.rotatecentery_;
  _impl_.rotatecentery_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::unsafe_arena_release_rotatecentery() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.CameraSettings.rotateCenterY)

  _impl_._has_bits_[0] &= ~0x00000800u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.rotatecentery_;
  _impl_.rotatecentery_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::_internal_mutable_rotatecentery() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatecentery_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.rotatecentery_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.rotatecentery_;
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::mutable_rotatecentery() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000800u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_rotatecentery();
  // @@protoc_insertion_point(field_mutable:KuplungApp.CameraSettings.rotateCenterY)
  return _msg;
}
inline void CameraSettings::set_allocated_rotatecentery(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotatecentery_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }

  _impl_.rotatecentery_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.CameraSettings.rotateCenterY)
}

// required .KuplungApp.ObjectCoordinate rotateCenterZ = 13;
inline bool CameraSettings::has_rotatecenterz() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rotatecenterz_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& CameraSettings::_internal_rotatecenterz() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.rotatecenterz_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& CameraSettings::rotatecenterz() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.CameraSettings.rotateCenterZ)
  return _internal_rotatecenterz();
}
inline void CameraSettings::unsafe_arena_set_allocated_rotatecenterz(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotatecenterz_);
  }
  _impl_.rotatecenterz_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.CameraSettings.rotateCenterZ)
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::release_rotatecenterz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00001000u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.rotatecenterz_;
  _impl_.rotatecenterz_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::unsafe_arena_release_rotatecenterz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.CameraSettings.rotateCenterZ)

  _impl_._has_bits_[0] &= ~0x00001000u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.rotatecenterz_;
  _impl_.rotatecenterz_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::_internal_mutable_rotatecenterz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatecenterz_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.rotatecenterz_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.rotatecenterz_;
}
inline ::KuplungApp::ObjectCoordinate* CameraSettings::mutable_rotatecenterz() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00001000u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_rotatecenterz();
  // @@protoc_insertion_point(field_mutable:KuplungApp.CameraSettings.rotateCenterZ)
  return _msg;
}
inline void CameraSettings::set_allocated_rotatecenterz(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotatecenterz_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }

  _impl_.rotatecenterz_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.CameraSettings.rotateCenterZ)
}

// -------------------------------------------------------------------

// GridSettings

// required bool actAsMirror = 1;
inline bool GridSettings::has_actasmirror() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void GridSettings::clear_actasmirror() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.actasmirror_ = false;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline bool GridSettings::actasmirror() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GridSettings.actAsMirror)
  return _internal_actasmirror();
}
inline void GridSettings::set_actasmirror(bool value) {
  _internal_set_actasmirror(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:KuplungApp.GridSettings.actAsMirror)
}
inline bool GridSettings::_internal_actasmirror() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.actasmirror_;
}
inline void GridSettings::_internal_set_actasmirror(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.actasmirror_ = value;
}

// required int32 gridSize = 2;
inline bool GridSettings::has_gridsize() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void GridSettings::clear_gridsize() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gridsize_ = 0;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::int32_t GridSettings::gridsize() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GridSettings.gridSize)
  return _internal_gridsize();
}
inline void GridSettings::set_gridsize(::int32_t value) {
  _internal_set_gridsize(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:KuplungApp.GridSettings.gridSize)
}
inline ::int32_t GridSettings::_internal_gridsize() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gridsize_;
}
inline void GridSettings::_internal_set_gridsize(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gridsize_ = value;
}

// required .KuplungApp.ObjectCoordinate positionX = 3;
inline bool GridSettings::has_positionx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.positionx_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& GridSettings::_internal_positionx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.positionx_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& GridSettings::positionx() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.GridSettings.positionX)
  return _internal_positionx();
}
inline void GridSettings::unsafe_arena_set_allocated_positionx(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.positionx_);
  }
  _impl_.positionx_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.GridSettings.positionX)
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::release_positionx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.positionx_;
  _impl_.positionx_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::unsafe_arena_release_positionx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.GridSettings.positionX)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.positionx_;
  _impl_.positionx_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::_internal_mutable_positionx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.positionx_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.positionx_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.positionx_;
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::mutable_positionx() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_positionx();
  // @@protoc_insertion_point(field_mutable:KuplungApp.GridSettings.positionX)
  return _msg;
}
inline void GridSettings::set_allocated_positionx(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.positionx_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.positionx_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.GridSettings.positionX)
}

// required .KuplungApp.ObjectCoordinate positionY = 4;
inline bool GridSettings::has_positiony() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.positiony_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& GridSettings::_internal_positiony() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.positiony_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& GridSettings::positiony() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.GridSettings.positionY)
  return _internal_positiony();
}
inline void GridSettings::unsafe_arena_set_allocated_positiony(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.positiony_);
  }
  _impl_.positiony_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.GridSettings.positionY)
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::release_positiony() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.positiony_;
  _impl_.positiony_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::unsafe_arena_release_positiony() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.GridSettings.positionY)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.positiony_;
  _impl_.positiony_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::_internal_mutable_positiony() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.positiony_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.positiony_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.positiony_;
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::mutable_positiony() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_positiony();
  // @@protoc_insertion_point(field_mutable:KuplungApp.GridSettings.positionY)
  return _msg;
}
inline void GridSettings::set_allocated_positiony(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.positiony_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.positiony_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.GridSettings.positionY)
}

// required .KuplungApp.ObjectCoordinate positionZ = 5;
inline bool GridSettings::has_positionz() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.positionz_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& GridSettings::_internal_positionz() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.positionz_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& GridSettings::positionz() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.GridSettings.positionZ)
  return _internal_positionz();
}
inline void GridSettings::unsafe_arena_set_allocated_positionz(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.positionz_);
  }
  _impl_.positionz_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.GridSettings.positionZ)
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::release_positionz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.positionz_;
  _impl_.positionz_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::unsafe_arena_release_positionz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.GridSettings.positionZ)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.positionz_;
  _impl_.positionz_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::_internal_mutable_positionz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.positionz_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.positionz_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.positionz_;
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::mutable_positionz() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_positionz();
  // @@protoc_insertion_point(field_mutable:KuplungApp.GridSettings.positionZ)
  return _msg;
}
inline void GridSettings::set_allocated_positionz(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.positionz_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.positionz_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.GridSettings.positionZ)
}

// required .KuplungApp.ObjectCoordinate rotateX = 6;
inline bool GridSettings::has_rotatex() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rotatex_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& GridSettings::_internal_rotatex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.rotatex_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& GridSettings::rotatex() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.GridSettings.rotateX)
  return _internal_rotatex();
}
inline void GridSettings::unsafe_arena_set_allocated_rotatex(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotatex_);
  }
  _impl_.rotatex_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.GridSettings.rotateX)
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::release_rotatex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.rotatex_;
  _impl_.rotatex_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::unsafe_arena_release_rotatex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.GridSettings.rotateX)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.rotatex_;
  _impl_.rotatex_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::_internal_mutable_rotatex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatex_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.rotatex_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.rotatex_;
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::mutable_rotatex() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_rotatex();
  // @@protoc_insertion_point(field_mutable:KuplungApp.GridSettings.rotateX)
  return _msg;
}
inline void GridSettings::set_allocated_rotatex(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotatex_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.rotatex_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.GridSettings.rotateX)
}

// required .KuplungApp.ObjectCoordinate rotateY = 7;
inline bool GridSettings::has_rotatey() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rotatey_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& GridSettings::_internal_rotatey() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.rotatey_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& GridSettings::rotatey() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.GridSettings.rotateY)
  return _internal_rotatey();
}
inline void GridSettings::unsafe_arena_set_allocated_rotatey(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotatey_);
  }
  _impl_.rotatey_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.GridSettings.rotateY)
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::release_rotatey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.rotatey_;
  _impl_.rotatey_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::unsafe_arena_release_rotatey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.GridSettings.rotateY)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.rotatey_;
  _impl_.rotatey_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::_internal_mutable_rotatey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatey_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.rotatey_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.rotatey_;
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::mutable_rotatey() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_rotatey();
  // @@protoc_insertion_point(field_mutable:KuplungApp.GridSettings.rotateY)
  return _msg;
}
inline void GridSettings::set_allocated_rotatey(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotatey_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.rotatey_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.GridSettings.rotateY)
}

// required .KuplungApp.ObjectCoordinate rotateZ = 8;
inline bool GridSettings::has_rotatez() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rotatez_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& GridSettings::_internal_rotatez() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.rotatez_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& GridSettings::rotatez() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.GridSettings.rotateZ)
  return _internal_rotatez();
}
inline void GridSettings::unsafe_arena_set_allocated_rotatez(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotatez_);
  }
  _impl_.rotatez_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.GridSettings.rotateZ)
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::release_rotatez() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.rotatez_;
  _impl_.rotatez_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::unsafe_arena_release_rotatez() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.GridSettings.rotateZ)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.rotatez_;
  _impl_.rotatez_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::_internal_mutable_rotatez() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatez_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.rotatez_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.rotatez_;
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::mutable_rotatez() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_rotatez();
  // @@protoc_insertion_point(field_mutable:KuplungApp.GridSettings.rotateZ)
  return _msg;
}
inline void GridSettings::set_allocated_rotatez(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotatez_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.rotatez_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.GridSettings.rotateZ)
}

// required .KuplungApp.ObjectCoordinate scaleX = 9;
inline bool GridSettings::has_scalex() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.scalex_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& GridSettings::_internal_scalex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.scalex_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& GridSettings::scalex() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.GridSettings.scaleX)
  return _internal_scalex();
}
inline void GridSettings::unsafe_arena_set_allocated_scalex(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.scalex_);
  }
  _impl_.scalex_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.GridSettings.scaleX)
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::release_scalex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.scalex_;
  _impl_.scalex_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::unsafe_arena_release_scalex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.GridSettings.scaleX)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.scalex_;
  _impl_.scalex_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::_internal_mutable_scalex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.scalex_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.scalex_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.scalex_;
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::mutable_scalex() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_scalex();
  // @@protoc_insertion_point(field_mutable:KuplungApp.GridSettings.scaleX)
  return _msg;
}
inline void GridSettings::set_allocated_scalex(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.scalex_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.scalex_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.GridSettings.scaleX)
}

// required .KuplungApp.ObjectCoordinate scaleY = 10;
inline bool GridSettings::has_scaley() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.scaley_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& GridSettings::_internal_scaley() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.scaley_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& GridSettings::scaley() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.GridSettings.scaleY)
  return _internal_scaley();
}
inline void GridSettings::unsafe_arena_set_allocated_scaley(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.scaley_);
  }
  _impl_.scaley_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.GridSettings.scaleY)
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::release_scaley() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.scaley_;
  _impl_.scaley_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::unsafe_arena_release_scaley() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.GridSettings.scaleY)

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.scaley_;
  _impl_.scaley_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::_internal_mutable_scaley() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.scaley_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.scaley_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.scaley_;
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::mutable_scaley() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000080u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_scaley();
  // @@protoc_insertion_point(field_mutable:KuplungApp.GridSettings.scaleY)
  return _msg;
}
inline void GridSettings::set_allocated_scaley(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.scaley_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }

  _impl_.scaley_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.GridSettings.scaleY)
}

// required .KuplungApp.ObjectCoordinate scaleZ = 11;
inline bool GridSettings::has_scalez() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.scalez_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& GridSettings::_internal_scalez() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.scalez_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& GridSettings::scalez() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.GridSettings.scaleZ)
  return _internal_scalez();
}
inline void GridSettings::unsafe_arena_set_allocated_scalez(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.scalez_);
  }
  _impl_.scalez_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.GridSettings.scaleZ)
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::release_scalez() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.scalez_;
  _impl_.scalez_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::unsafe_arena_release_scalez() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.GridSettings.scaleZ)

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.scalez_;
  _impl_.scalez_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::_internal_mutable_scalez() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.scalez_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.scalez_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.scalez_;
}
inline ::KuplungApp::ObjectCoordinate* GridSettings::mutable_scalez() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000100u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_scalez();
  // @@protoc_insertion_point(field_mutable:KuplungApp.GridSettings.scaleZ)
  return _msg;
}
inline void GridSettings::set_allocated_scalez(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.scalez_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }

  _impl_.scalez_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.GridSettings.scaleZ)
}

// required float transparency = 12;
inline bool GridSettings::has_transparency() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void GridSettings::clear_transparency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transparency_ = 0;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline float GridSettings::transparency() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GridSettings.transparency)
  return _internal_transparency();
}
inline void GridSettings::set_transparency(float value) {
  _internal_set_transparency(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:KuplungApp.GridSettings.transparency)
}
inline float GridSettings::_internal_transparency() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.transparency_;
}
inline void GridSettings::_internal_set_transparency(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transparency_ = value;
}

// required int32 showGrid = 13;
inline bool GridSettings::has_showgrid() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void GridSettings::clear_showgrid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.showgrid_ = 0;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::int32_t GridSettings::showgrid() const {
  // @@protoc_insertion_point(field_get:KuplungApp.GridSettings.showGrid)
  return _internal_showgrid();
}
inline void GridSettings::set_showgrid(::int32_t value) {
  _internal_set_showgrid(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:KuplungApp.GridSettings.showGrid)
}
inline ::int32_t GridSettings::_internal_showgrid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.showgrid_;
}
inline void GridSettings::_internal_set_showgrid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.showgrid_ = value;
}

// -------------------------------------------------------------------

// LightObject

// required string title = 1;
inline bool LightObject::has_title() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void LightObject::clear_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& LightObject::title() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.LightObject.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LightObject::set_title(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:KuplungApp.LightObject.title)
}
inline std::string* LightObject::mutable_title() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:KuplungApp.LightObject.title)
  return _s;
}
inline const std::string& LightObject::_internal_title() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.title_.Get();
}
inline void LightObject::_internal_set_title(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.title_.Set(value, GetArena());
}
inline std::string* LightObject::_internal_mutable_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.title_.Mutable( GetArena());
}
inline std::string* LightObject::release_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.LightObject.title)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.title_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.title_.Set("", GetArena());
  }
  return released;
}
inline void LightObject::set_allocated_title(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.title_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.title_.IsDefault()) {
    _impl_.title_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.LightObject.title)
}

// required string description = 2;
inline bool LightObject::has_description() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void LightObject::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& LightObject::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.LightObject.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LightObject::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:KuplungApp.LightObject.description)
}
inline std::string* LightObject::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:KuplungApp.LightObject.description)
  return _s;
}
inline const std::string& LightObject::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void LightObject::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.description_.Set(value, GetArena());
}
inline std::string* LightObject::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* LightObject::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.LightObject.description)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.description_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.description_.Set("", GetArena());
  }
  return released;
}
inline void LightObject::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.LightObject.description)
}

// required int32 type = 3;
inline bool LightObject::has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x02000000u) != 0;
  return value;
}
inline void LightObject::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x02000000u;
}
inline ::int32_t LightObject::type() const {
  // @@protoc_insertion_point(field_get:KuplungApp.LightObject.type)
  return _internal_type();
}
inline void LightObject::set_type(::int32_t value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x02000000u;
  // @@protoc_insertion_point(field_set:KuplungApp.LightObject.type)
}
inline ::int32_t LightObject::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_;
}
inline void LightObject::_internal_set_type(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// required bool showLampObject = 4;
inline bool LightObject::has_showlampobject() const {
  bool value = (_impl_._has_bits_[0] & 0x04000000u) != 0;
  return value;
}
inline void LightObject::clear_showlampobject() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.showlampobject_ = false;
  _impl_._has_bits_[0] &= ~0x04000000u;
}
inline bool LightObject::showlampobject() const {
  // @@protoc_insertion_point(field_get:KuplungApp.LightObject.showLampObject)
  return _internal_showlampobject();
}
inline void LightObject::set_showlampobject(bool value) {
  _internal_set_showlampobject(value);
  _impl_._has_bits_[0] |= 0x04000000u;
  // @@protoc_insertion_point(field_set:KuplungApp.LightObject.showLampObject)
}
inline bool LightObject::_internal_showlampobject() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.showlampobject_;
}
inline void LightObject::_internal_set_showlampobject(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.showlampobject_ = value;
}

// required bool showLampDirection = 5;
inline bool LightObject::has_showlampdirection() const {
  bool value = (_impl_._has_bits_[0] & 0x08000000u) != 0;
  return value;
}
inline void LightObject::clear_showlampdirection() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.showlampdirection_ = false;
  _impl_._has_bits_[0] &= ~0x08000000u;
}
inline bool LightObject::showlampdirection() const {
  // @@protoc_insertion_point(field_get:KuplungApp.LightObject.showLampDirection)
  return _internal_showlampdirection();
}
inline void LightObject::set_showlampdirection(bool value) {
  _internal_set_showlampdirection(value);
  _impl_._has_bits_[0] |= 0x08000000u;
  // @@protoc_insertion_point(field_set:KuplungApp.LightObject.showLampDirection)
}
inline bool LightObject::_internal_showlampdirection() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.showlampdirection_;
}
inline void LightObject::_internal_set_showlampdirection(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.showlampdirection_ = value;
}

// required bool showInWire = 6;
inline bool LightObject::has_showinwire() const {
  bool value = (_impl_._has_bits_[0] & 0x10000000u) != 0;
  return value;
}
inline void LightObject::clear_showinwire() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.showinwire_ = false;
  _impl_._has_bits_[0] &= ~0x10000000u;
}
inline bool LightObject::showinwire() const {
  // @@protoc_insertion_point(field_get:KuplungApp.LightObject.showInWire)
  return _internal_showinwire();
}
inline void LightObject::set_showinwire(bool value) {
  _internal_set_showinwire(value);
  _impl_._has_bits_[0] |= 0x10000000u;
  // @@protoc_insertion_point(field_set:KuplungApp.LightObject.showInWire)
}
inline bool LightObject::_internal_showinwire() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.showinwire_;
}
inline void LightObject::_internal_set_showinwire(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.showinwire_ = value;
}

// required .KuplungApp.ObjectCoordinate positionX = 7;
inline bool LightObject::has_positionx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.positionx_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::_internal_positionx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.positionx_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::positionx() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.LightObject.positionX)
  return _internal_positionx();
}
inline void LightObject::unsafe_arena_set_allocated_positionx(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.positionx_);
  }
  _impl_.positionx_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.LightObject.positionX)
}
inline ::KuplungApp::ObjectCoordinate* LightObject::release_positionx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.positionx_;
  _impl_.positionx_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::unsafe_arena_release_positionx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.LightObject.positionX)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.positionx_;
  _impl_.positionx_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::_internal_mutable_positionx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.positionx_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.positionx_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.positionx_;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::mutable_positionx() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_positionx();
  // @@protoc_insertion_point(field_mutable:KuplungApp.LightObject.positionX)
  return _msg;
}
inline void LightObject::set_allocated_positionx(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.positionx_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.positionx_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.LightObject.positionX)
}

// required .KuplungApp.ObjectCoordinate positionY = 8;
inline bool LightObject::has_positiony() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.positiony_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::_internal_positiony() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.positiony_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::positiony() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.LightObject.positionY)
  return _internal_positiony();
}
inline void LightObject::unsafe_arena_set_allocated_positiony(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.positiony_);
  }
  _impl_.positiony_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.LightObject.positionY)
}
inline ::KuplungApp::ObjectCoordinate* LightObject::release_positiony() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.positiony_;
  _impl_.positiony_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::unsafe_arena_release_positiony() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.LightObject.positionY)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.positiony_;
  _impl_.positiony_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::_internal_mutable_positiony() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.positiony_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.positiony_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.positiony_;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::mutable_positiony() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_positiony();
  // @@protoc_insertion_point(field_mutable:KuplungApp.LightObject.positionY)
  return _msg;
}
inline void LightObject::set_allocated_positiony(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.positiony_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.positiony_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.LightObject.positionY)
}

// required .KuplungApp.ObjectCoordinate positionZ = 9;
inline bool LightObject::has_positionz() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.positionz_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::_internal_positionz() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.positionz_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::positionz() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.LightObject.positionZ)
  return _internal_positionz();
}
inline void LightObject::unsafe_arena_set_allocated_positionz(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.positionz_);
  }
  _impl_.positionz_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.LightObject.positionZ)
}
inline ::KuplungApp::ObjectCoordinate* LightObject::release_positionz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.positionz_;
  _impl_.positionz_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::unsafe_arena_release_positionz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.LightObject.positionZ)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.positionz_;
  _impl_.positionz_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::_internal_mutable_positionz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.positionz_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.positionz_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.positionz_;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::mutable_positionz() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_positionz();
  // @@protoc_insertion_point(field_mutable:KuplungApp.LightObject.positionZ)
  return _msg;
}
inline void LightObject::set_allocated_positionz(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.positionz_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.positionz_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.LightObject.positionZ)
}

// required .KuplungApp.ObjectCoordinate directionX = 10;
inline bool LightObject::has_directionx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.directionx_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::_internal_directionx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.directionx_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::directionx() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.LightObject.directionX)
  return _internal_directionx();
}
inline void LightObject::unsafe_arena_set_allocated_directionx(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.directionx_);
  }
  _impl_.directionx_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.LightObject.directionX)
}
inline ::KuplungApp::ObjectCoordinate* LightObject::release_directionx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.directionx_;
  _impl_.directionx_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::unsafe_arena_release_directionx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.LightObject.directionX)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.directionx_;
  _impl_.directionx_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::_internal_mutable_directionx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.directionx_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.directionx_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.directionx_;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::mutable_directionx() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_directionx();
  // @@protoc_insertion_point(field_mutable:KuplungApp.LightObject.directionX)
  return _msg;
}
inline void LightObject::set_allocated_directionx(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.directionx_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.directionx_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.LightObject.directionX)
}

// required .KuplungApp.ObjectCoordinate directionY = 11;
inline bool LightObject::has_directiony() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.directiony_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::_internal_directiony() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.directiony_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::directiony() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.LightObject.directionY)
  return _internal_directiony();
}
inline void LightObject::unsafe_arena_set_allocated_directiony(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.directiony_);
  }
  _impl_.directiony_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.LightObject.directionY)
}
inline ::KuplungApp::ObjectCoordinate* LightObject::release_directiony() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.directiony_;
  _impl_.directiony_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::unsafe_arena_release_directiony() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.LightObject.directionY)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.directiony_;
  _impl_.directiony_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::_internal_mutable_directiony() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.directiony_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.directiony_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.directiony_;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::mutable_directiony() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_directiony();
  // @@protoc_insertion_point(field_mutable:KuplungApp.LightObject.directionY)
  return _msg;
}
inline void LightObject::set_allocated_directiony(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.directiony_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.directiony_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.LightObject.directionY)
}

// required .KuplungApp.ObjectCoordinate directionZ = 12;
inline bool LightObject::has_directionz() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.directionz_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::_internal_directionz() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.directionz_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::directionz() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.LightObject.directionZ)
  return _internal_directionz();
}
inline void LightObject::unsafe_arena_set_allocated_directionz(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.directionz_);
  }
  _impl_.directionz_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.LightObject.directionZ)
}
inline ::KuplungApp::ObjectCoordinate* LightObject::release_directionz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.directionz_;
  _impl_.directionz_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::unsafe_arena_release_directionz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.LightObject.directionZ)

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.directionz_;
  _impl_.directionz_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::_internal_mutable_directionz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.directionz_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.directionz_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.directionz_;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::mutable_directionz() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000080u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_directionz();
  // @@protoc_insertion_point(field_mutable:KuplungApp.LightObject.directionZ)
  return _msg;
}
inline void LightObject::set_allocated_directionz(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.directionz_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }

  _impl_.directionz_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.LightObject.directionZ)
}

// required .KuplungApp.ObjectCoordinate scaleX = 13;
inline bool LightObject::has_scalex() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.scalex_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::_internal_scalex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.scalex_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::scalex() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.LightObject.scaleX)
  return _internal_scalex();
}
inline void LightObject::unsafe_arena_set_allocated_scalex(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.scalex_);
  }
  _impl_.scalex_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.LightObject.scaleX)
}
inline ::KuplungApp::ObjectCoordinate* LightObject::release_scalex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.scalex_;
  _impl_.scalex_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::unsafe_arena_release_scalex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.LightObject.scaleX)

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.scalex_;
  _impl_.scalex_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::_internal_mutable_scalex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.scalex_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.scalex_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.scalex_;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::mutable_scalex() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000100u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_scalex();
  // @@protoc_insertion_point(field_mutable:KuplungApp.LightObject.scaleX)
  return _msg;
}
inline void LightObject::set_allocated_scalex(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.scalex_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }

  _impl_.scalex_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.LightObject.scaleX)
}

// required .KuplungApp.ObjectCoordinate scaleY = 14;
inline bool LightObject::has_scaley() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.scaley_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::_internal_scaley() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.scaley_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::scaley() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.LightObject.scaleY)
  return _internal_scaley();
}
inline void LightObject::unsafe_arena_set_allocated_scaley(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.scaley_);
  }
  _impl_.scaley_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.LightObject.scaleY)
}
inline ::KuplungApp::ObjectCoordinate* LightObject::release_scaley() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.scaley_;
  _impl_.scaley_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::unsafe_arena_release_scaley() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.LightObject.scaleY)

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.scaley_;
  _impl_.scaley_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::_internal_mutable_scaley() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.scaley_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.scaley_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.scaley_;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::mutable_scaley() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000200u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_scaley();
  // @@protoc_insertion_point(field_mutable:KuplungApp.LightObject.scaleY)
  return _msg;
}
inline void LightObject::set_allocated_scaley(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.scaley_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }

  _impl_.scaley_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.LightObject.scaleY)
}

// required .KuplungApp.ObjectCoordinate scaleZ = 15;
inline bool LightObject::has_scalez() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.scalez_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::_internal_scalez() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.scalez_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::scalez() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.LightObject.scaleZ)
  return _internal_scalez();
}
inline void LightObject::unsafe_arena_set_allocated_scalez(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.scalez_);
  }
  _impl_.scalez_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.LightObject.scaleZ)
}
inline ::KuplungApp::ObjectCoordinate* LightObject::release_scalez() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000400u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.scalez_;
  _impl_.scalez_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::unsafe_arena_release_scalez() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.LightObject.scaleZ)

  _impl_._has_bits_[0] &= ~0x00000400u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.scalez_;
  _impl_.scalez_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::_internal_mutable_scalez() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.scalez_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.scalez_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.scalez_;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::mutable_scalez() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000400u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_scalez();
  // @@protoc_insertion_point(field_mutable:KuplungApp.LightObject.scaleZ)
  return _msg;
}
inline void LightObject::set_allocated_scalez(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.scalez_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }

  _impl_.scalez_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.LightObject.scaleZ)
}

// required .KuplungApp.ObjectCoordinate rotateX = 16;
inline bool LightObject::has_rotatex() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rotatex_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::_internal_rotatex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.rotatex_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::rotatex() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.LightObject.rotateX)
  return _internal_rotatex();
}
inline void LightObject::unsafe_arena_set_allocated_rotatex(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotatex_);
  }
  _impl_.rotatex_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.LightObject.rotateX)
}
inline ::KuplungApp::ObjectCoordinate* LightObject::release_rotatex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000800u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.rotatex_;
  _impl_.rotatex_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::unsafe_arena_release_rotatex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.LightObject.rotateX)

  _impl_._has_bits_[0] &= ~0x00000800u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.rotatex_;
  _impl_.rotatex_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::_internal_mutable_rotatex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatex_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.rotatex_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.rotatex_;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::mutable_rotatex() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000800u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_rotatex();
  // @@protoc_insertion_point(field_mutable:KuplungApp.LightObject.rotateX)
  return _msg;
}
inline void LightObject::set_allocated_rotatex(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotatex_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }

  _impl_.rotatex_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.LightObject.rotateX)
}

// required .KuplungApp.ObjectCoordinate rotateY = 17;
inline bool LightObject::has_rotatey() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rotatey_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::_internal_rotatey() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.rotatey_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::rotatey() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.LightObject.rotateY)
  return _internal_rotatey();
}
inline void LightObject::unsafe_arena_set_allocated_rotatey(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotatey_);
  }
  _impl_.rotatey_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.LightObject.rotateY)
}
inline ::KuplungApp::ObjectCoordinate* LightObject::release_rotatey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00001000u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.rotatey_;
  _impl_.rotatey_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::unsafe_arena_release_rotatey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.LightObject.rotateY)

  _impl_._has_bits_[0] &= ~0x00001000u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.rotatey_;
  _impl_.rotatey_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::_internal_mutable_rotatey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatey_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.rotatey_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.rotatey_;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::mutable_rotatey() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00001000u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_rotatey();
  // @@protoc_insertion_point(field_mutable:KuplungApp.LightObject.rotateY)
  return _msg;
}
inline void LightObject::set_allocated_rotatey(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotatey_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }

  _impl_.rotatey_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.LightObject.rotateY)
}

// required .KuplungApp.ObjectCoordinate rotateZ = 18;
inline bool LightObject::has_rotatez() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rotatez_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::_internal_rotatez() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.rotatez_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::rotatez() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.LightObject.rotateZ)
  return _internal_rotatez();
}
inline void LightObject::unsafe_arena_set_allocated_rotatez(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotatez_);
  }
  _impl_.rotatez_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00002000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00002000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.LightObject.rotateZ)
}
inline ::KuplungApp::ObjectCoordinate* LightObject::release_rotatez() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00002000u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.rotatez_;
  _impl_.rotatez_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::unsafe_arena_release_rotatez() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.LightObject.rotateZ)

  _impl_._has_bits_[0] &= ~0x00002000u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.rotatez_;
  _impl_.rotatez_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::_internal_mutable_rotatez() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatez_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.rotatez_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.rotatez_;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::mutable_rotatez() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00002000u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_rotatez();
  // @@protoc_insertion_point(field_mutable:KuplungApp.LightObject.rotateZ)
  return _msg;
}
inline void LightObject::set_allocated_rotatez(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotatez_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00002000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00002000u;
  }

  _impl_.rotatez_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.LightObject.rotateZ)
}

// required .KuplungApp.ObjectCoordinate rotateCenterX = 19;
inline bool LightObject::has_rotatecenterx() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rotatecenterx_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::_internal_rotatecenterx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.rotatecenterx_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::rotatecenterx() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.LightObject.rotateCenterX)
  return _internal_rotatecenterx();
}
inline void LightObject::unsafe_arena_set_allocated_rotatecenterx(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotatecenterx_);
  }
  _impl_.rotatecenterx_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00004000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00004000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.LightObject.rotateCenterX)
}
inline ::KuplungApp::ObjectCoordinate* LightObject::release_rotatecenterx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00004000u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.rotatecenterx_;
  _impl_.rotatecenterx_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::unsafe_arena_release_rotatecenterx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.LightObject.rotateCenterX)

  _impl_._has_bits_[0] &= ~0x00004000u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.rotatecenterx_;
  _impl_.rotatecenterx_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::_internal_mutable_rotatecenterx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatecenterx_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.rotatecenterx_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.rotatecenterx_;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::mutable_rotatecenterx() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00004000u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_rotatecenterx();
  // @@protoc_insertion_point(field_mutable:KuplungApp.LightObject.rotateCenterX)
  return _msg;
}
inline void LightObject::set_allocated_rotatecenterx(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotatecenterx_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00004000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00004000u;
  }

  _impl_.rotatecenterx_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.LightObject.rotateCenterX)
}

// required .KuplungApp.ObjectCoordinate rotateCenterY = 20;
inline bool LightObject::has_rotatecentery() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rotatecentery_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::_internal_rotatecentery() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.rotatecentery_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::rotatecentery() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.LightObject.rotateCenterY)
  return _internal_rotatecentery();
}
inline void LightObject::unsafe_arena_set_allocated_rotatecentery(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotatecentery_);
  }
  _impl_.rotatecentery_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00008000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00008000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.LightObject.rotateCenterY)
}
inline ::KuplungApp::ObjectCoordinate* LightObject::release_rotatecentery() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00008000u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.rotatecentery_;
  _impl_.rotatecentery_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::unsafe_arena_release_rotatecentery() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.LightObject.rotateCenterY)

  _impl_._has_bits_[0] &= ~0x00008000u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.rotatecentery_;
  _impl_.rotatecentery_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::_internal_mutable_rotatecentery() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatecentery_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.rotatecentery_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.rotatecentery_;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::mutable_rotatecentery() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00008000u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_rotatecentery();
  // @@protoc_insertion_point(field_mutable:KuplungApp.LightObject.rotateCenterY)
  return _msg;
}
inline void LightObject::set_allocated_rotatecentery(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotatecentery_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00008000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00008000u;
  }

  _impl_.rotatecentery_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.LightObject.rotateCenterY)
}

// required .KuplungApp.ObjectCoordinate rotateCenterZ = 21;
inline bool LightObject::has_rotatecenterz() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rotatecenterz_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::_internal_rotatecenterz() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.rotatecenterz_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::rotatecenterz() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.LightObject.rotateCenterZ)
  return _internal_rotatecenterz();
}
inline void LightObject::unsafe_arena_set_allocated_rotatecenterz(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotatecenterz_);
  }
  _impl_.rotatecenterz_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00010000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00010000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.LightObject.rotateCenterZ)
}
inline ::KuplungApp::ObjectCoordinate* LightObject::release_rotatecenterz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00010000u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.rotatecenterz_;
  _impl_.rotatecenterz_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::unsafe_arena_release_rotatecenterz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.LightObject.rotateCenterZ)

  _impl_._has_bits_[0] &= ~0x00010000u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.rotatecenterz_;
  _impl_.rotatecenterz_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::_internal_mutable_rotatecenterz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatecenterz_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.rotatecenterz_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.rotatecenterz_;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::mutable_rotatecenterz() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00010000u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_rotatecenterz();
  // @@protoc_insertion_point(field_mutable:KuplungApp.LightObject.rotateCenterZ)
  return _msg;
}
inline void LightObject::set_allocated_rotatecenterz(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotatecenterz_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00010000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00010000u;
  }

  _impl_.rotatecenterz_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.LightObject.rotateCenterZ)
}

// required .KuplungApp.MaterialColor ambient = 22;
inline bool LightObject::has_ambient() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ambient_ != nullptr);
  return value;
}
inline const ::KuplungApp::MaterialColor& LightObject::_internal_ambient() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::MaterialColor* p = _impl_.ambient_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::MaterialColor&>(::KuplungApp::_MaterialColor_default_instance_);
}
inline const ::KuplungApp::MaterialColor& LightObject::ambient() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.LightObject.ambient)
  return _internal_ambient();
}
inline void LightObject::unsafe_arena_set_allocated_ambient(::KuplungApp::MaterialColor* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ambient_);
  }
  _impl_.ambient_ = reinterpret_cast<::KuplungApp::MaterialColor*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00020000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00020000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.LightObject.ambient)
}
inline ::KuplungApp::MaterialColor* LightObject::release_ambient() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00020000u;
  ::KuplungApp::MaterialColor* released = _impl_.ambient_;
  _impl_.ambient_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::MaterialColor* LightObject::unsafe_arena_release_ambient() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.LightObject.ambient)

  _impl_._has_bits_[0] &= ~0x00020000u;
  ::KuplungApp::MaterialColor* temp = _impl_.ambient_;
  _impl_.ambient_ = nullptr;
  return temp;
}
inline ::KuplungApp::MaterialColor* LightObject::_internal_mutable_ambient() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ambient_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::MaterialColor>(GetArena());
    _impl_.ambient_ = reinterpret_cast<::KuplungApp::MaterialColor*>(p);
  }
  return _impl_.ambient_;
}
inline ::KuplungApp::MaterialColor* LightObject::mutable_ambient() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00020000u;
  ::KuplungApp::MaterialColor* _msg = _internal_mutable_ambient();
  // @@protoc_insertion_point(field_mutable:KuplungApp.LightObject.ambient)
  return _msg;
}
inline void LightObject::set_allocated_ambient(::KuplungApp::MaterialColor* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ambient_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00020000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00020000u;
  }

  _impl_.ambient_ = reinterpret_cast<::KuplungApp::MaterialColor*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.LightObject.ambient)
}

// required .KuplungApp.MaterialColor diffuse = 23;
inline bool LightObject::has_diffuse() const {
  bool value = (_impl_._has_bits_[0] & 0x00040000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.diffuse_ != nullptr);
  return value;
}
inline const ::KuplungApp::MaterialColor& LightObject::_internal_diffuse() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::MaterialColor* p = _impl_.diffuse_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::MaterialColor&>(::KuplungApp::_MaterialColor_default_instance_);
}
inline const ::KuplungApp::MaterialColor& LightObject::diffuse() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.LightObject.diffuse)
  return _internal_diffuse();
}
inline void LightObject::unsafe_arena_set_allocated_diffuse(::KuplungApp::MaterialColor* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.diffuse_);
  }
  _impl_.diffuse_ = reinterpret_cast<::KuplungApp::MaterialColor*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00040000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00040000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.LightObject.diffuse)
}
inline ::KuplungApp::MaterialColor* LightObject::release_diffuse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00040000u;
  ::KuplungApp::MaterialColor* released = _impl_.diffuse_;
  _impl_.diffuse_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::MaterialColor* LightObject::unsafe_arena_release_diffuse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.LightObject.diffuse)

  _impl_._has_bits_[0] &= ~0x00040000u;
  ::KuplungApp::MaterialColor* temp = _impl_.diffuse_;
  _impl_.diffuse_ = nullptr;
  return temp;
}
inline ::KuplungApp::MaterialColor* LightObject::_internal_mutable_diffuse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.diffuse_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::MaterialColor>(GetArena());
    _impl_.diffuse_ = reinterpret_cast<::KuplungApp::MaterialColor*>(p);
  }
  return _impl_.diffuse_;
}
inline ::KuplungApp::MaterialColor* LightObject::mutable_diffuse() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00040000u;
  ::KuplungApp::MaterialColor* _msg = _internal_mutable_diffuse();
  // @@protoc_insertion_point(field_mutable:KuplungApp.LightObject.diffuse)
  return _msg;
}
inline void LightObject::set_allocated_diffuse(::KuplungApp::MaterialColor* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.diffuse_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00040000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00040000u;
  }

  _impl_.diffuse_ = reinterpret_cast<::KuplungApp::MaterialColor*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.LightObject.diffuse)
}

// required .KuplungApp.MaterialColor specular = 24;
inline bool LightObject::has_specular() const {
  bool value = (_impl_._has_bits_[0] & 0x00080000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.specular_ != nullptr);
  return value;
}
inline const ::KuplungApp::MaterialColor& LightObject::_internal_specular() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::MaterialColor* p = _impl_.specular_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::MaterialColor&>(::KuplungApp::_MaterialColor_default_instance_);
}
inline const ::KuplungApp::MaterialColor& LightObject::specular() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.LightObject.specular)
  return _internal_specular();
}
inline void LightObject::unsafe_arena_set_allocated_specular(::KuplungApp::MaterialColor* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.specular_);
  }
  _impl_.specular_ = reinterpret_cast<::KuplungApp::MaterialColor*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00080000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00080000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.LightObject.specular)
}
inline ::KuplungApp::MaterialColor* LightObject::release_specular() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00080000u;
  ::KuplungApp::MaterialColor* released = _impl_.specular_;
  _impl_.specular_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::MaterialColor* LightObject::unsafe_arena_release_specular() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.LightObject.specular)

  _impl_._has_bits_[0] &= ~0x00080000u;
  ::KuplungApp::MaterialColor* temp = _impl_.specular_;
  _impl_.specular_ = nullptr;
  return temp;
}
inline ::KuplungApp::MaterialColor* LightObject::_internal_mutable_specular() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.specular_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::MaterialColor>(GetArena());
    _impl_.specular_ = reinterpret_cast<::KuplungApp::MaterialColor*>(p);
  }
  return _impl_.specular_;
}
inline ::KuplungApp::MaterialColor* LightObject::mutable_specular() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00080000u;
  ::KuplungApp::MaterialColor* _msg = _internal_mutable_specular();
  // @@protoc_insertion_point(field_mutable:KuplungApp.LightObject.specular)
  return _msg;
}
inline void LightObject::set_allocated_specular(::KuplungApp::MaterialColor* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.specular_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00080000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00080000u;
  }

  _impl_.specular_ = reinterpret_cast<::KuplungApp::MaterialColor*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.LightObject.specular)
}

// required .KuplungApp.ObjectCoordinate lCutOff = 25;
inline bool LightObject::has_lcutoff() const {
  bool value = (_impl_._has_bits_[0] & 0x00100000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.lcutoff_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::_internal_lcutoff() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.lcutoff_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::lcutoff() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.LightObject.lCutOff)
  return _internal_lcutoff();
}
inline void LightObject::unsafe_arena_set_allocated_lcutoff(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lcutoff_);
  }
  _impl_.lcutoff_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00100000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00100000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.LightObject.lCutOff)
}
inline ::KuplungApp::ObjectCoordinate* LightObject::release_lcutoff() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00100000u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.lcutoff_;
  _impl_.lcutoff_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::unsafe_arena_release_lcutoff() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.LightObject.lCutOff)

  _impl_._has_bits_[0] &= ~0x00100000u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.lcutoff_;
  _impl_.lcutoff_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::_internal_mutable_lcutoff() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lcutoff_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.lcutoff_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.lcutoff_;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::mutable_lcutoff() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00100000u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_lcutoff();
  // @@protoc_insertion_point(field_mutable:KuplungApp.LightObject.lCutOff)
  return _msg;
}
inline void LightObject::set_allocated_lcutoff(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lcutoff_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00100000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00100000u;
  }

  _impl_.lcutoff_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.LightObject.lCutOff)
}

// required .KuplungApp.ObjectCoordinate lOuterCutOff = 26;
inline bool LightObject::has_loutercutoff() const {
  bool value = (_impl_._has_bits_[0] & 0x00200000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.loutercutoff_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::_internal_loutercutoff() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.loutercutoff_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::loutercutoff() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.LightObject.lOuterCutOff)
  return _internal_loutercutoff();
}
inline void LightObject::unsafe_arena_set_allocated_loutercutoff(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.loutercutoff_);
  }
  _impl_.loutercutoff_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00200000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00200000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.LightObject.lOuterCutOff)
}
inline ::KuplungApp::ObjectCoordinate* LightObject::release_loutercutoff() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00200000u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.loutercutoff_;
  _impl_.loutercutoff_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::unsafe_arena_release_loutercutoff() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.LightObject.lOuterCutOff)

  _impl_._has_bits_[0] &= ~0x00200000u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.loutercutoff_;
  _impl_.loutercutoff_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::_internal_mutable_loutercutoff() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.loutercutoff_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.loutercutoff_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.loutercutoff_;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::mutable_loutercutoff() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00200000u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_loutercutoff();
  // @@protoc_insertion_point(field_mutable:KuplungApp.LightObject.lOuterCutOff)
  return _msg;
}
inline void LightObject::set_allocated_loutercutoff(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.loutercutoff_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00200000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00200000u;
  }

  _impl_.loutercutoff_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.LightObject.lOuterCutOff)
}

// required .KuplungApp.ObjectCoordinate lConstant = 27;
inline bool LightObject::has_lconstant() const {
  bool value = (_impl_._has_bits_[0] & 0x00400000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.lconstant_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::_internal_lconstant() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.lconstant_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::lconstant() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.LightObject.lConstant)
  return _internal_lconstant();
}
inline void LightObject::unsafe_arena_set_allocated_lconstant(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lconstant_);
  }
  _impl_.lconstant_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00400000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00400000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.LightObject.lConstant)
}
inline ::KuplungApp::ObjectCoordinate* LightObject::release_lconstant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00400000u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.lconstant_;
  _impl_.lconstant_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::unsafe_arena_release_lconstant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.LightObject.lConstant)

  _impl_._has_bits_[0] &= ~0x00400000u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.lconstant_;
  _impl_.lconstant_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::_internal_mutable_lconstant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lconstant_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.lconstant_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.lconstant_;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::mutable_lconstant() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00400000u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_lconstant();
  // @@protoc_insertion_point(field_mutable:KuplungApp.LightObject.lConstant)
  return _msg;
}
inline void LightObject::set_allocated_lconstant(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lconstant_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00400000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00400000u;
  }

  _impl_.lconstant_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.LightObject.lConstant)
}

// required .KuplungApp.ObjectCoordinate lLinear = 28;
inline bool LightObject::has_llinear() const {
  bool value = (_impl_._has_bits_[0] & 0x00800000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.llinear_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::_internal_llinear() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.llinear_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::llinear() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.LightObject.lLinear)
  return _internal_llinear();
}
inline void LightObject::unsafe_arena_set_allocated_llinear(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.llinear_);
  }
  _impl_.llinear_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00800000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00800000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.LightObject.lLinear)
}
inline ::KuplungApp::ObjectCoordinate* LightObject::release_llinear() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00800000u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.llinear_;
  _impl_.llinear_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::unsafe_arena_release_llinear() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.LightObject.lLinear)

  _impl_._has_bits_[0] &= ~0x00800000u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.llinear_;
  _impl_.llinear_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::_internal_mutable_llinear() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.llinear_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.llinear_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.llinear_;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::mutable_llinear() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00800000u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_llinear();
  // @@protoc_insertion_point(field_mutable:KuplungApp.LightObject.lLinear)
  return _msg;
}
inline void LightObject::set_allocated_llinear(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.llinear_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00800000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00800000u;
  }

  _impl_.llinear_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.LightObject.lLinear)
}

// required .KuplungApp.ObjectCoordinate lQuadratic = 29;
inline bool LightObject::has_lquadratic() const {
  bool value = (_impl_._has_bits_[0] & 0x01000000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.lquadratic_ != nullptr);
  return value;
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::_internal_lquadratic() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::KuplungApp::ObjectCoordinate* p = _impl_.lquadratic_;
  return p != nullptr ? *p : reinterpret_cast<const ::KuplungApp::ObjectCoordinate&>(::KuplungApp::_ObjectCoordinate_default_instance_);
}
inline const ::KuplungApp::ObjectCoordinate& LightObject::lquadratic() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:KuplungApp.LightObject.lQuadratic)
  return _internal_lquadratic();
}
inline void LightObject::unsafe_arena_set_allocated_lquadratic(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lquadratic_);
  }
  _impl_.lquadratic_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x01000000u;
  } else {
    _impl_._has_bits_[0] &= ~0x01000000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KuplungApp.LightObject.lQuadratic)
}
inline ::KuplungApp::ObjectCoordinate* LightObject::release_lquadratic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x01000000u;
  ::KuplungApp::ObjectCoordinate* released = _impl_.lquadratic_;
  _impl_.lquadratic_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::unsafe_arena_release_lquadratic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:KuplungApp.LightObject.lQuadratic)

  _impl_._has_bits_[0] &= ~0x01000000u;
  ::KuplungApp::ObjectCoordinate* temp = _impl_.lquadratic_;
  _impl_.lquadratic_ = nullptr;
  return temp;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::_internal_mutable_lquadratic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lquadratic_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::KuplungApp::ObjectCoordinate>(GetArena());
    _impl_.lquadratic_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(p);
  }
  return _impl_.lquadratic_;
}
inline ::KuplungApp::ObjectCoordinate* LightObject::mutable_lquadratic() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x01000000u;
  ::KuplungApp::ObjectCoordinate* _msg = _internal_mutable_lquadratic();
  // @@protoc_insertion_point(field_mutable:KuplungApp.LightObject.lQuadratic)
  return _msg;
}
inline void LightObject::set_allocated_lquadratic(::KuplungApp::ObjectCoordinate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lquadratic_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x01000000u;
  } else {
    _impl_._has_bits_[0] &= ~0x01000000u;
  }

  _impl_.lquadratic_ = reinterpret_cast<::KuplungApp::ObjectCoordinate*>(value);
  // @@protoc_insertion_point(field_set_allocated:KuplungApp.LightObject.lQuadratic)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace KuplungApp


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // KuplungAppSettings_2eproto_2epb_2eh
