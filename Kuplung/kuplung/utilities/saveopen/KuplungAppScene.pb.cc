// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: KuplungAppScene.proto
// Protobuf C++ Version: 5.29.3

#include "KuplungAppScene.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace KuplungApp {

inline constexpr MeshModel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        positionx_{nullptr},
        positiony_{nullptr},
        positionz_{nullptr},
        scalex_{nullptr},
        scaley_{nullptr},
        scalez_{nullptr},
        rotatex_{nullptr},
        rotatey_{nullptr},
        rotatez_{nullptr},
        displacex_{nullptr},
        displacey_{nullptr},
        displacez_{nullptr},
        setting_materialrefraction_{nullptr},
        setting_materialspecularexp_{nullptr},
        solidlightskin_materialcolor_{nullptr},
        solidlightskin_ambient_{nullptr},
        solidlightskin_diffuse_{nullptr},
        solidlightskin_specular_{nullptr},
        setting_lightposition_{nullptr},
        setting_lightdirection_{nullptr},
        setting_lightambient_{nullptr},
        setting_lightdiffuse_{nullptr},
        setting_lightspecular_{nullptr},
        displacementheightscale_{nullptr},
        materialambient_{nullptr},
        materialdiffuse_{nullptr},
        materialspecular_{nullptr},
        materialemission_{nullptr},
        effect_gblur_radius_{nullptr},
        effect_gblur_width_{nullptr},
        meshobject_{nullptr},
        modelid_{0},
        settings_deferredrender_{false},
        setting_celshading_{false},
        setting_wireframe_{false},
        setting_usetessellation_{false},
        setting_alpha_{0},
        setting_tessellationsubdivision_{0},
        setting_modelviewskin_{0},
        solidlightskin_ambient_strength_{0},
        solidlightskin_diffuse_strength_{0},
        solidlightskin_specular_strength_{0},
        setting_usecullface_{false},
        showmaterialeditor_{false},
        setting_parallaxmapping_{false},
        effect_bloom_dobloom_{false},
        setting_lightstrengthambient_{0},
        setting_lightstrengthdiffuse_{0},
        setting_lightstrengthspecular_{0},
        materialilluminationmodel_{0},
        effect_gblur_mode_{0},
        effect_bloom_weighta_{0},
        effect_bloom_weightb_{0},
        effect_bloom_weightc_{0},
        effect_bloom_weightd_{0},
        effect_bloom_vignette_{0},
        effect_bloom_vignetteatt_{0},
        setting_lightingpass_drawmode_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MeshModel::MeshModel(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MeshModelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MeshModelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MeshModelDefaultTypeInternal() {}
  union {
    MeshModel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MeshModelDefaultTypeInternal _MeshModel_default_instance_;

inline constexpr Scene::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : models_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Scene::Scene(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SceneDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SceneDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SceneDefaultTypeInternal() {}
  union {
    Scene _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SceneDefaultTypeInternal _Scene_default_instance_;
}  // namespace KuplungApp
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_KuplungAppScene_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_KuplungAppScene_2eproto = nullptr;
const ::uint32_t
    TableStruct_KuplungAppScene_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::KuplungApp::Scene, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::KuplungApp::Scene, _impl_.models_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.modelid_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.settings_deferredrender_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.setting_celshading_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.setting_wireframe_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.setting_usetessellation_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.setting_usecullface_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.setting_alpha_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.setting_tessellationsubdivision_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.positionx_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.positiony_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.positionz_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.scalex_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.scaley_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.scalez_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.rotatex_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.rotatey_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.rotatez_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.displacex_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.displacey_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.displacez_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.setting_materialrefraction_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.setting_materialspecularexp_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.setting_modelviewskin_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.solidlightskin_materialcolor_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.solidlightskin_ambient_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.solidlightskin_diffuse_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.solidlightskin_specular_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.solidlightskin_ambient_strength_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.solidlightskin_diffuse_strength_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.solidlightskin_specular_strength_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.setting_lightposition_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.setting_lightdirection_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.setting_lightambient_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.setting_lightdiffuse_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.setting_lightspecular_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.setting_lightstrengthambient_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.setting_lightstrengthdiffuse_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.setting_lightstrengthspecular_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.materialilluminationmodel_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.displacementheightscale_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.showmaterialeditor_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.materialambient_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.materialdiffuse_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.materialspecular_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.materialemission_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.setting_parallaxmapping_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.effect_gblur_mode_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.effect_gblur_radius_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.effect_gblur_width_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.effect_bloom_dobloom_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.effect_bloom_weighta_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.effect_bloom_weightb_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.effect_bloom_weightc_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.effect_bloom_weightd_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.effect_bloom_vignette_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.effect_bloom_vignetteatt_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.setting_lightingpass_drawmode_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::MeshModel, _impl_.meshobject_),
        31,
        32,
        33,
        34,
        35,
        42,
        36,
        37,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        38,
        14,
        15,
        16,
        17,
        39,
        40,
        41,
        18,
        19,
        20,
        21,
        22,
        46,
        47,
        48,
        49,
        23,
        43,
        24,
        25,
        26,
        27,
        44,
        50,
        28,
        29,
        45,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        30,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::KuplungApp::Scene)},
        {9, 75, -1, sizeof(::KuplungApp::MeshModel)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::KuplungApp::_Scene_default_instance_._instance,
    &::KuplungApp::_MeshModel_default_instance_._instance,
};
const char descriptor_table_protodef_KuplungAppScene_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\025KuplungAppScene.proto\022\nKuplungApp\032\030Kup"
    "lungDefinitions.proto\".\n\005Scene\022%\n\006models"
    "\030\001 \003(\0132\025.KuplungApp.MeshModel\"\252\023\n\tMeshMo"
    "del\022\017\n\007ModelID\030\001 \002(\005\022\037\n\027Settings_Deferre"
    "dRender\030\002 \002(\010\022\032\n\022Setting_CelShading\030\003 \002("
    "\010\022\031\n\021Setting_Wireframe\030\004 \002(\010\022\037\n\027Setting_"
    "UseTessellation\030\005 \002(\010\022\033\n\023Setting_UseCull"
    "Face\030\006 \002(\010\022\025\n\rSetting_Alpha\030\007 \002(\002\022\'\n\037Set"
    "ting_TessellationSubdivision\030\010 \002(\005\022/\n\tpo"
    "sitionX\030\t \002(\0132\034.KuplungApp.ObjectCoordin"
    "ate\022/\n\tpositionY\030\n \002(\0132\034.KuplungApp.Obje"
    "ctCoordinate\022/\n\tpositionZ\030\013 \002(\0132\034.Kuplun"
    "gApp.ObjectCoordinate\022,\n\006scaleX\030\014 \002(\0132\034."
    "KuplungApp.ObjectCoordinate\022,\n\006scaleY\030\r "
    "\002(\0132\034.KuplungApp.ObjectCoordinate\022,\n\006sca"
    "leZ\030\016 \002(\0132\034.KuplungApp.ObjectCoordinate\022"
    "-\n\007rotateX\030\017 \002(\0132\034.KuplungApp.ObjectCoor"
    "dinate\022-\n\007rotateY\030\020 \002(\0132\034.KuplungApp.Obj"
    "ectCoordinate\022-\n\007rotateZ\030\021 \002(\0132\034.Kuplung"
    "App.ObjectCoordinate\022/\n\tdisplaceX\030\022 \002(\0132"
    "\034.KuplungApp.ObjectCoordinate\022/\n\tdisplac"
    "eY\030\023 \002(\0132\034.KuplungApp.ObjectCoordinate\022/"
    "\n\tdisplaceZ\030\024 \002(\0132\034.KuplungApp.ObjectCoo"
    "rdinate\022@\n\032Setting_MaterialRefraction\030\025 "
    "\002(\0132\034.KuplungApp.ObjectCoordinate\022A\n\033Set"
    "ting_MaterialSpecularExp\030\026 \002(\0132\034.Kuplung"
    "App.ObjectCoordinate\022\035\n\025Setting_ModelVie"
    "wSkin\030\027 \002(\005\0226\n\034solidLightSkin_MaterialCo"
    "lor\030\030 \002(\0132\020.KuplungApp.Vec3\0220\n\026solidLigh"
    "tSkin_Ambient\030\031 \002(\0132\020.KuplungApp.Vec3\0220\n"
    "\026solidLightSkin_Diffuse\030\032 \002(\0132\020.KuplungA"
    "pp.Vec3\0221\n\027solidLightSkin_Specular\030\033 \002(\013"
    "2\020.KuplungApp.Vec3\022\'\n\037solidLightSkin_Amb"
    "ient_Strength\030\034 \002(\002\022\'\n\037solidLightSkin_Di"
    "ffuse_Strength\030\035 \002(\002\022(\n solidLightSkin_S"
    "pecular_Strength\030\036 \002(\002\022/\n\025Setting_LightP"
    "osition\030\037 \002(\0132\020.KuplungApp.Vec3\0220\n\026Setti"
    "ng_LightDirection\030  \002(\0132\020.KuplungApp.Vec"
    "3\022.\n\024Setting_LightAmbient\030! \002(\0132\020.Kuplun"
    "gApp.Vec3\022.\n\024Setting_LightDiffuse\030\" \002(\0132"
    "\020.KuplungApp.Vec3\022/\n\025Setting_LightSpecul"
    "ar\030# \002(\0132\020.KuplungApp.Vec3\022$\n\034Setting_Li"
    "ghtStrengthAmbient\030$ \002(\002\022$\n\034Setting_Ligh"
    "tStrengthDiffuse\030% \002(\002\022%\n\035Setting_LightS"
    "trengthSpecular\030& \002(\002\022!\n\031materialIllumin"
    "ationModel\030\' \002(\005\022=\n\027displacementHeightSc"
    "ale\030( \002(\0132\034.KuplungApp.ObjectCoordinate\022"
    "\032\n\022showMaterialEditor\030) \002(\010\0222\n\017materialA"
    "mbient\030* \002(\0132\031.KuplungApp.MaterialColor\022"
    "2\n\017materialDiffuse\030+ \002(\0132\031.KuplungApp.Ma"
    "terialColor\0223\n\020materialSpecular\030, \002(\0132\031."
    "KuplungApp.MaterialColor\0223\n\020materialEmis"
    "sion\030- \002(\0132\031.KuplungApp.MaterialColor\022\037\n"
    "\027Setting_ParallaxMapping\030. \002(\010\022\031\n\021Effect"
    "_GBlur_Mode\030/ \002(\005\0229\n\023Effect_GBlur_Radius"
    "\0300 \002(\0132\034.KuplungApp.ObjectCoordinate\0228\n\022"
    "Effect_GBlur_Width\0301 \002(\0132\034.KuplungApp.Ob"
    "jectCoordinate\022\034\n\024Effect_Bloom_doBloom\0302"
    " \002(\010\022\034\n\024Effect_Bloom_WeightA\0303 \002(\002\022\034\n\024Ef"
    "fect_Bloom_WeightB\0304 \002(\002\022\034\n\024Effect_Bloom"
    "_WeightC\0305 \002(\002\022\034\n\024Effect_Bloom_WeightD\0306"
    " \002(\002\022\035\n\025Effect_Bloom_Vignette\0307 \002(\002\022 \n\030E"
    "ffect_Bloom_VignetteAtt\0308 \002(\002\022%\n\035Setting"
    "_LightingPass_DrawMode\0309 \002(\005\022$\n\nmeshObje"
    "ct\030: \002(\0132\020.KuplungApp.Mesh"
};
static const ::_pbi::DescriptorTable* const descriptor_table_KuplungAppScene_2eproto_deps[1] =
    {
        &::descriptor_table_KuplungDefinitions_2eproto,
};
static ::absl::once_flag descriptor_table_KuplungAppScene_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_KuplungAppScene_2eproto = {
    false,
    false,
    2586,
    descriptor_table_protodef_KuplungAppScene_2eproto,
    "KuplungAppScene.proto",
    &descriptor_table_KuplungAppScene_2eproto_once,
    descriptor_table_KuplungAppScene_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_KuplungAppScene_2eproto::offsets,
    file_level_enum_descriptors_KuplungAppScene_2eproto,
    file_level_service_descriptors_KuplungAppScene_2eproto,
};
namespace KuplungApp {
// ===================================================================

class Scene::_Internal {
 public:
};

Scene::Scene(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:KuplungApp.Scene)
}
inline PROTOBUF_NDEBUG_INLINE Scene::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::KuplungApp::Scene& from_msg)
      : models_{visibility, arena, from.models_},
        _cached_size_{0} {}

Scene::Scene(
    ::google::protobuf::Arena* arena,
    const Scene& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Scene* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:KuplungApp.Scene)
}
inline PROTOBUF_NDEBUG_INLINE Scene::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : models_{visibility, arena},
        _cached_size_{0} {}

inline void Scene::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Scene::~Scene() {
  // @@protoc_insertion_point(destructor:KuplungApp.Scene)
  SharedDtor(*this);
}
inline void Scene::SharedDtor(MessageLite& self) {
  Scene& this_ = static_cast<Scene&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Scene::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Scene(arena);
}
constexpr auto Scene::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Scene, _impl_.models_) +
          decltype(Scene::_impl_.models_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Scene), alignof(Scene), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Scene::PlacementNew_,
                                 sizeof(Scene),
                                 alignof(Scene));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Scene::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Scene_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        Scene::IsInitializedImpl,
        &Scene::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Scene>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Scene::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Scene>(), &Scene::ByteSizeLong,
            &Scene::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Scene, _impl_._cached_size_),
        false,
    },
    &Scene::kDescriptorMethods,
    &descriptor_table_KuplungAppScene_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Scene::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Scene::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::KuplungApp::Scene>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .KuplungApp.MeshModel models = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Scene, _impl_.models_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .KuplungApp.MeshModel models = 1;
    {PROTOBUF_FIELD_OFFSET(Scene, _impl_.models_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::KuplungApp::MeshModel>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Scene::Clear() {
// @@protoc_insertion_point(message_clear_start:KuplungApp.Scene)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.models_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Scene::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Scene& this_ = static_cast<const Scene&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Scene::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Scene& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:KuplungApp.Scene)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .KuplungApp.MeshModel models = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_models_size());
               i < n; i++) {
            const auto& repfield = this_._internal_models().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:KuplungApp.Scene)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Scene::ByteSizeLong(const MessageLite& base) {
          const Scene& this_ = static_cast<const Scene&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Scene::ByteSizeLong() const {
          const Scene& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:KuplungApp.Scene)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .KuplungApp.MeshModel models = 1;
            {
              total_size += 1UL * this_._internal_models_size();
              for (const auto& msg : this_._internal_models()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Scene::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Scene*>(&to_msg);
  auto& from = static_cast<const Scene&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:KuplungApp.Scene)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_models()->MergeFrom(
      from._internal_models());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Scene::CopyFrom(const Scene& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KuplungApp.Scene)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Scene::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const Scene&>(msg);
  if (!::google::protobuf::internal::AllAreInitialized(this_._internal_models()))
    return false;
  return true;
}

void Scene::InternalSwap(Scene* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.models_.InternalSwap(&other->_impl_.models_);
}

::google::protobuf::Metadata Scene::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MeshModel::_Internal {
 public:
  using HasBits =
      decltype(std::declval<MeshModel>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MeshModel, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return (((has_bits[0] & 0xffffffff) ^ 0xffffffff)
       | ((has_bits[1] & 0x03ffffff) ^ 0x03ffffff)) != 0;
  }
};

void MeshModel::clear_positionx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.positionx_ != nullptr) _impl_.positionx_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void MeshModel::clear_positiony() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.positiony_ != nullptr) _impl_.positiony_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void MeshModel::clear_positionz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.positionz_ != nullptr) _impl_.positionz_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void MeshModel::clear_scalex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.scalex_ != nullptr) _impl_.scalex_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void MeshModel::clear_scaley() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.scaley_ != nullptr) _impl_.scaley_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void MeshModel::clear_scalez() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.scalez_ != nullptr) _impl_.scalez_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void MeshModel::clear_rotatex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatex_ != nullptr) _impl_.rotatex_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void MeshModel::clear_rotatey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatey_ != nullptr) _impl_.rotatey_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void MeshModel::clear_rotatez() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatez_ != nullptr) _impl_.rotatez_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
void MeshModel::clear_displacex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.displacex_ != nullptr) _impl_.displacex_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
void MeshModel::clear_displacey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.displacey_ != nullptr) _impl_.displacey_->Clear();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
void MeshModel::clear_displacez() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.displacez_ != nullptr) _impl_.displacez_->Clear();
  _impl_._has_bits_[0] &= ~0x00000800u;
}
void MeshModel::clear_setting_materialrefraction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.setting_materialrefraction_ != nullptr) _impl_.setting_materialrefraction_->Clear();
  _impl_._has_bits_[0] &= ~0x00001000u;
}
void MeshModel::clear_setting_materialspecularexp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.setting_materialspecularexp_ != nullptr) _impl_.setting_materialspecularexp_->Clear();
  _impl_._has_bits_[0] &= ~0x00002000u;
}
void MeshModel::clear_solidlightskin_materialcolor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.solidlightskin_materialcolor_ != nullptr) _impl_.solidlightskin_materialcolor_->Clear();
  _impl_._has_bits_[0] &= ~0x00004000u;
}
void MeshModel::clear_solidlightskin_ambient() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.solidlightskin_ambient_ != nullptr) _impl_.solidlightskin_ambient_->Clear();
  _impl_._has_bits_[0] &= ~0x00008000u;
}
void MeshModel::clear_solidlightskin_diffuse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.solidlightskin_diffuse_ != nullptr) _impl_.solidlightskin_diffuse_->Clear();
  _impl_._has_bits_[0] &= ~0x00010000u;
}
void MeshModel::clear_solidlightskin_specular() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.solidlightskin_specular_ != nullptr) _impl_.solidlightskin_specular_->Clear();
  _impl_._has_bits_[0] &= ~0x00020000u;
}
void MeshModel::clear_setting_lightposition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.setting_lightposition_ != nullptr) _impl_.setting_lightposition_->Clear();
  _impl_._has_bits_[0] &= ~0x00040000u;
}
void MeshModel::clear_setting_lightdirection() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.setting_lightdirection_ != nullptr) _impl_.setting_lightdirection_->Clear();
  _impl_._has_bits_[0] &= ~0x00080000u;
}
void MeshModel::clear_setting_lightambient() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.setting_lightambient_ != nullptr) _impl_.setting_lightambient_->Clear();
  _impl_._has_bits_[0] &= ~0x00100000u;
}
void MeshModel::clear_setting_lightdiffuse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.setting_lightdiffuse_ != nullptr) _impl_.setting_lightdiffuse_->Clear();
  _impl_._has_bits_[0] &= ~0x00200000u;
}
void MeshModel::clear_setting_lightspecular() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.setting_lightspecular_ != nullptr) _impl_.setting_lightspecular_->Clear();
  _impl_._has_bits_[0] &= ~0x00400000u;
}
void MeshModel::clear_displacementheightscale() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.displacementheightscale_ != nullptr) _impl_.displacementheightscale_->Clear();
  _impl_._has_bits_[0] &= ~0x00800000u;
}
void MeshModel::clear_materialambient() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.materialambient_ != nullptr) _impl_.materialambient_->Clear();
  _impl_._has_bits_[0] &= ~0x01000000u;
}
void MeshModel::clear_materialdiffuse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.materialdiffuse_ != nullptr) _impl_.materialdiffuse_->Clear();
  _impl_._has_bits_[0] &= ~0x02000000u;
}
void MeshModel::clear_materialspecular() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.materialspecular_ != nullptr) _impl_.materialspecular_->Clear();
  _impl_._has_bits_[0] &= ~0x04000000u;
}
void MeshModel::clear_materialemission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.materialemission_ != nullptr) _impl_.materialemission_->Clear();
  _impl_._has_bits_[0] &= ~0x08000000u;
}
void MeshModel::clear_effect_gblur_radius() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.effect_gblur_radius_ != nullptr) _impl_.effect_gblur_radius_->Clear();
  _impl_._has_bits_[0] &= ~0x10000000u;
}
void MeshModel::clear_effect_gblur_width() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.effect_gblur_width_ != nullptr) _impl_.effect_gblur_width_->Clear();
  _impl_._has_bits_[0] &= ~0x20000000u;
}
void MeshModel::clear_meshobject() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.meshobject_ != nullptr) _impl_.meshobject_->Clear();
  _impl_._has_bits_[0] &= ~0x40000000u;
}
MeshModel::MeshModel(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:KuplungApp.MeshModel)
}
inline PROTOBUF_NDEBUG_INLINE MeshModel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::KuplungApp::MeshModel& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

MeshModel::MeshModel(
    ::google::protobuf::Arena* arena,
    const MeshModel& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MeshModel* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.positionx_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.positionx_)
                        : nullptr;
  _impl_.positiony_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.positiony_)
                        : nullptr;
  _impl_.positionz_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.positionz_)
                        : nullptr;
  _impl_.scalex_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.scalex_)
                        : nullptr;
  _impl_.scaley_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.scaley_)
                        : nullptr;
  _impl_.scalez_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.scalez_)
                        : nullptr;
  _impl_.rotatex_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.rotatex_)
                        : nullptr;
  _impl_.rotatey_ = (cached_has_bits & 0x00000080u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.rotatey_)
                        : nullptr;
  _impl_.rotatez_ = (cached_has_bits & 0x00000100u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.rotatez_)
                        : nullptr;
  _impl_.displacex_ = (cached_has_bits & 0x00000200u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.displacex_)
                        : nullptr;
  _impl_.displacey_ = (cached_has_bits & 0x00000400u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.displacey_)
                        : nullptr;
  _impl_.displacez_ = (cached_has_bits & 0x00000800u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.displacez_)
                        : nullptr;
  _impl_.setting_materialrefraction_ = (cached_has_bits & 0x00001000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.setting_materialrefraction_)
                        : nullptr;
  _impl_.setting_materialspecularexp_ = (cached_has_bits & 0x00002000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.setting_materialspecularexp_)
                        : nullptr;
  _impl_.solidlightskin_materialcolor_ = (cached_has_bits & 0x00004000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(
                              arena, *from._impl_.solidlightskin_materialcolor_)
                        : nullptr;
  _impl_.solidlightskin_ambient_ = (cached_has_bits & 0x00008000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(
                              arena, *from._impl_.solidlightskin_ambient_)
                        : nullptr;
  _impl_.solidlightskin_diffuse_ = (cached_has_bits & 0x00010000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(
                              arena, *from._impl_.solidlightskin_diffuse_)
                        : nullptr;
  _impl_.solidlightskin_specular_ = (cached_has_bits & 0x00020000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(
                              arena, *from._impl_.solidlightskin_specular_)
                        : nullptr;
  _impl_.setting_lightposition_ = (cached_has_bits & 0x00040000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(
                              arena, *from._impl_.setting_lightposition_)
                        : nullptr;
  _impl_.setting_lightdirection_ = (cached_has_bits & 0x00080000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(
                              arena, *from._impl_.setting_lightdirection_)
                        : nullptr;
  _impl_.setting_lightambient_ = (cached_has_bits & 0x00100000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(
                              arena, *from._impl_.setting_lightambient_)
                        : nullptr;
  _impl_.setting_lightdiffuse_ = (cached_has_bits & 0x00200000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(
                              arena, *from._impl_.setting_lightdiffuse_)
                        : nullptr;
  _impl_.setting_lightspecular_ = (cached_has_bits & 0x00400000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(
                              arena, *from._impl_.setting_lightspecular_)
                        : nullptr;
  _impl_.displacementheightscale_ = (cached_has_bits & 0x00800000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.displacementheightscale_)
                        : nullptr;
  _impl_.materialambient_ = (cached_has_bits & 0x01000000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::MaterialColor>(
                              arena, *from._impl_.materialambient_)
                        : nullptr;
  _impl_.materialdiffuse_ = (cached_has_bits & 0x02000000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::MaterialColor>(
                              arena, *from._impl_.materialdiffuse_)
                        : nullptr;
  _impl_.materialspecular_ = (cached_has_bits & 0x04000000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::MaterialColor>(
                              arena, *from._impl_.materialspecular_)
                        : nullptr;
  _impl_.materialemission_ = (cached_has_bits & 0x08000000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::MaterialColor>(
                              arena, *from._impl_.materialemission_)
                        : nullptr;
  _impl_.effect_gblur_radius_ = (cached_has_bits & 0x10000000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.effect_gblur_radius_)
                        : nullptr;
  _impl_.effect_gblur_width_ = (cached_has_bits & 0x20000000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.effect_gblur_width_)
                        : nullptr;
  _impl_.meshobject_ = (cached_has_bits & 0x40000000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::Mesh>(
                              arena, *from._impl_.meshobject_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, modelid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, modelid_),
           offsetof(Impl_, setting_lightingpass_drawmode_) -
               offsetof(Impl_, modelid_) +
               sizeof(Impl_::setting_lightingpass_drawmode_));

  // @@protoc_insertion_point(copy_constructor:KuplungApp.MeshModel)
}
inline PROTOBUF_NDEBUG_INLINE MeshModel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MeshModel::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, positionx_),
           0,
           offsetof(Impl_, setting_lightingpass_drawmode_) -
               offsetof(Impl_, positionx_) +
               sizeof(Impl_::setting_lightingpass_drawmode_));
}
MeshModel::~MeshModel() {
  // @@protoc_insertion_point(destructor:KuplungApp.MeshModel)
  SharedDtor(*this);
}
inline void MeshModel::SharedDtor(MessageLite& self) {
  MeshModel& this_ = static_cast<MeshModel&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.positionx_;
  delete this_._impl_.positiony_;
  delete this_._impl_.positionz_;
  delete this_._impl_.scalex_;
  delete this_._impl_.scaley_;
  delete this_._impl_.scalez_;
  delete this_._impl_.rotatex_;
  delete this_._impl_.rotatey_;
  delete this_._impl_.rotatez_;
  delete this_._impl_.displacex_;
  delete this_._impl_.displacey_;
  delete this_._impl_.displacez_;
  delete this_._impl_.setting_materialrefraction_;
  delete this_._impl_.setting_materialspecularexp_;
  delete this_._impl_.solidlightskin_materialcolor_;
  delete this_._impl_.solidlightskin_ambient_;
  delete this_._impl_.solidlightskin_diffuse_;
  delete this_._impl_.solidlightskin_specular_;
  delete this_._impl_.setting_lightposition_;
  delete this_._impl_.setting_lightdirection_;
  delete this_._impl_.setting_lightambient_;
  delete this_._impl_.setting_lightdiffuse_;
  delete this_._impl_.setting_lightspecular_;
  delete this_._impl_.displacementheightscale_;
  delete this_._impl_.materialambient_;
  delete this_._impl_.materialdiffuse_;
  delete this_._impl_.materialspecular_;
  delete this_._impl_.materialemission_;
  delete this_._impl_.effect_gblur_radius_;
  delete this_._impl_.effect_gblur_width_;
  delete this_._impl_.meshobject_;
  this_._impl_.~Impl_();
}

inline void* MeshModel::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MeshModel(arena);
}
constexpr auto MeshModel::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MeshModel),
                                            alignof(MeshModel));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MeshModel::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MeshModel_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        MeshModel::IsInitializedImpl,
        &MeshModel::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MeshModel>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MeshModel::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MeshModel>(), &MeshModel::ByteSizeLong,
            &MeshModel::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MeshModel, _impl_._cached_size_),
        false,
    },
    &MeshModel::kDescriptorMethods,
    &descriptor_table_KuplungAppScene_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MeshModel::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 58, 31, 0, 9> MeshModel::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MeshModel, _impl_._has_bits_),
    0, // no _extensions_
    58, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    0,  // skipmap
    offsetof(decltype(_table_), field_entries),
    58,  // num_field_entries
    31,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::KuplungApp::MeshModel>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required int32 ModelID = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MeshModel, _impl_.modelid_), 31>(),
     {8, 31, 0, PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.modelid_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // required .KuplungApp.ObjectCoordinate positionX = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 0, 0, PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.positionx_)}},
    // required .KuplungApp.ObjectCoordinate positionY = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 1, 1, PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.positiony_)}},
    // required .KuplungApp.ObjectCoordinate positionZ = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 2, 2, PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.positionz_)}},
    // required .KuplungApp.ObjectCoordinate scaleX = 12;
    {::_pbi::TcParser::FastMtS1,
     {98, 3, 3, PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.scalex_)}},
    // required .KuplungApp.ObjectCoordinate scaleY = 13;
    {::_pbi::TcParser::FastMtS1,
     {106, 4, 4, PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.scaley_)}},
    // required .KuplungApp.ObjectCoordinate scaleZ = 14;
    {::_pbi::TcParser::FastMtS1,
     {114, 5, 5, PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.scalez_)}},
    // required .KuplungApp.ObjectCoordinate rotateX = 15;
    {::_pbi::TcParser::FastMtS1,
     {122, 6, 6, PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.rotatex_)}},
    // required .KuplungApp.ObjectCoordinate rotateY = 16;
    {::_pbi::TcParser::FastMtS2,
     {386, 7, 7, PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.rotatey_)}},
    // required .KuplungApp.ObjectCoordinate rotateZ = 17;
    {::_pbi::TcParser::FastMtS2,
     {394, 8, 8, PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.rotatez_)}},
    // required .KuplungApp.ObjectCoordinate displaceX = 18;
    {::_pbi::TcParser::FastMtS2,
     {402, 9, 9, PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.displacex_)}},
    // required .KuplungApp.ObjectCoordinate displaceY = 19;
    {::_pbi::TcParser::FastMtS2,
     {410, 10, 10, PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.displacey_)}},
    // required .KuplungApp.ObjectCoordinate displaceZ = 20;
    {::_pbi::TcParser::FastMtS2,
     {418, 11, 11, PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.displacez_)}},
    // required .KuplungApp.ObjectCoordinate Setting_MaterialRefraction = 21;
    {::_pbi::TcParser::FastMtS2,
     {426, 12, 12, PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.setting_materialrefraction_)}},
    // required .KuplungApp.ObjectCoordinate Setting_MaterialSpecularExp = 22;
    {::_pbi::TcParser::FastMtS2,
     {434, 13, 13, PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.setting_materialspecularexp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // required .KuplungApp.Vec3 solidLightSkin_MaterialColor = 24;
    {::_pbi::TcParser::FastMtS2,
     {450, 14, 14, PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.solidlightskin_materialcolor_)}},
    // required .KuplungApp.Vec3 solidLightSkin_Ambient = 25;
    {::_pbi::TcParser::FastMtS2,
     {458, 15, 15, PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.solidlightskin_ambient_)}},
    // required .KuplungApp.Vec3 solidLightSkin_Diffuse = 26;
    {::_pbi::TcParser::FastMtS2,
     {466, 16, 16, PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.solidlightskin_diffuse_)}},
    // required .KuplungApp.Vec3 solidLightSkin_Specular = 27;
    {::_pbi::TcParser::FastMtS2,
     {474, 17, 17, PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.solidlightskin_specular_)}},
    // required .KuplungApp.MaterialColor materialSpecular = 44;
    {::_pbi::TcParser::FastMtS2,
     {738, 26, 26, PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.materialspecular_)}},
    // required .KuplungApp.MaterialColor materialEmission = 45;
    {::_pbi::TcParser::FastMtS2,
     {746, 27, 27, PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.materialemission_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // required .KuplungApp.Vec3 Setting_LightPosition = 31;
    {::_pbi::TcParser::FastMtS2,
     {506, 18, 18, PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.setting_lightposition_)}},
  }}, {{
    33, 0, 2,
    0, 32, 64512, 48,
    65535, 65535
  }}, {{
    // required int32 ModelID = 1;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.modelid_), _Internal::kHasBitsOffset + 31, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required bool Settings_DeferredRender = 2;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.settings_deferredrender_), _Internal::kHasBitsOffset + 32, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required bool Setting_CelShading = 3;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.setting_celshading_), _Internal::kHasBitsOffset + 33, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required bool Setting_Wireframe = 4;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.setting_wireframe_), _Internal::kHasBitsOffset + 34, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required bool Setting_UseTessellation = 5;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.setting_usetessellation_), _Internal::kHasBitsOffset + 35, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required bool Setting_UseCullFace = 6;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.setting_usecullface_), _Internal::kHasBitsOffset + 42, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required float Setting_Alpha = 7;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.setting_alpha_), _Internal::kHasBitsOffset + 36, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required int32 Setting_TessellationSubdivision = 8;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.setting_tessellationsubdivision_), _Internal::kHasBitsOffset + 37, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required .KuplungApp.ObjectCoordinate positionX = 9;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.positionx_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate positionY = 10;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.positiony_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate positionZ = 11;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.positionz_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate scaleX = 12;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.scalex_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate scaleY = 13;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.scaley_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate scaleZ = 14;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.scalez_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate rotateX = 15;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.rotatex_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate rotateY = 16;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.rotatey_), _Internal::kHasBitsOffset + 7, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate rotateZ = 17;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.rotatez_), _Internal::kHasBitsOffset + 8, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate displaceX = 18;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.displacex_), _Internal::kHasBitsOffset + 9, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate displaceY = 19;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.displacey_), _Internal::kHasBitsOffset + 10, 10,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate displaceZ = 20;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.displacez_), _Internal::kHasBitsOffset + 11, 11,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate Setting_MaterialRefraction = 21;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.setting_materialrefraction_), _Internal::kHasBitsOffset + 12, 12,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate Setting_MaterialSpecularExp = 22;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.setting_materialspecularexp_), _Internal::kHasBitsOffset + 13, 13,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required int32 Setting_ModelViewSkin = 23;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.setting_modelviewskin_), _Internal::kHasBitsOffset + 38, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required .KuplungApp.Vec3 solidLightSkin_MaterialColor = 24;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.solidlightskin_materialcolor_), _Internal::kHasBitsOffset + 14, 14,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.Vec3 solidLightSkin_Ambient = 25;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.solidlightskin_ambient_), _Internal::kHasBitsOffset + 15, 15,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.Vec3 solidLightSkin_Diffuse = 26;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.solidlightskin_diffuse_), _Internal::kHasBitsOffset + 16, 16,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.Vec3 solidLightSkin_Specular = 27;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.solidlightskin_specular_), _Internal::kHasBitsOffset + 17, 17,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required float solidLightSkin_Ambient_Strength = 28;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.solidlightskin_ambient_strength_), _Internal::kHasBitsOffset + 39, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float solidLightSkin_Diffuse_Strength = 29;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.solidlightskin_diffuse_strength_), _Internal::kHasBitsOffset + 40, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float solidLightSkin_Specular_Strength = 30;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.solidlightskin_specular_strength_), _Internal::kHasBitsOffset + 41, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required .KuplungApp.Vec3 Setting_LightPosition = 31;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.setting_lightposition_), _Internal::kHasBitsOffset + 18, 18,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.Vec3 Setting_LightDirection = 32;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.setting_lightdirection_), _Internal::kHasBitsOffset + 19, 19,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.Vec3 Setting_LightAmbient = 33;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.setting_lightambient_), _Internal::kHasBitsOffset + 20, 20,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.Vec3 Setting_LightDiffuse = 34;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.setting_lightdiffuse_), _Internal::kHasBitsOffset + 21, 21,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.Vec3 Setting_LightSpecular = 35;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.setting_lightspecular_), _Internal::kHasBitsOffset + 22, 22,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required float Setting_LightStrengthAmbient = 36;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.setting_lightstrengthambient_), _Internal::kHasBitsOffset + 46, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float Setting_LightStrengthDiffuse = 37;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.setting_lightstrengthdiffuse_), _Internal::kHasBitsOffset + 47, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float Setting_LightStrengthSpecular = 38;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.setting_lightstrengthspecular_), _Internal::kHasBitsOffset + 48, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required int32 materialIlluminationModel = 39;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.materialilluminationmodel_), _Internal::kHasBitsOffset + 49, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required .KuplungApp.ObjectCoordinate displacementHeightScale = 40;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.displacementheightscale_), _Internal::kHasBitsOffset + 23, 23,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required bool showMaterialEditor = 41;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.showmaterialeditor_), _Internal::kHasBitsOffset + 43, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required .KuplungApp.MaterialColor materialAmbient = 42;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.materialambient_), _Internal::kHasBitsOffset + 24, 24,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.MaterialColor materialDiffuse = 43;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.materialdiffuse_), _Internal::kHasBitsOffset + 25, 25,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.MaterialColor materialSpecular = 44;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.materialspecular_), _Internal::kHasBitsOffset + 26, 26,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.MaterialColor materialEmission = 45;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.materialemission_), _Internal::kHasBitsOffset + 27, 27,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required bool Setting_ParallaxMapping = 46;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.setting_parallaxmapping_), _Internal::kHasBitsOffset + 44, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required int32 Effect_GBlur_Mode = 47;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.effect_gblur_mode_), _Internal::kHasBitsOffset + 50, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required .KuplungApp.ObjectCoordinate Effect_GBlur_Radius = 48;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.effect_gblur_radius_), _Internal::kHasBitsOffset + 28, 28,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate Effect_GBlur_Width = 49;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.effect_gblur_width_), _Internal::kHasBitsOffset + 29, 29,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required bool Effect_Bloom_doBloom = 50;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.effect_bloom_dobloom_), _Internal::kHasBitsOffset + 45, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required float Effect_Bloom_WeightA = 51;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.effect_bloom_weighta_), _Internal::kHasBitsOffset + 51, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float Effect_Bloom_WeightB = 52;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.effect_bloom_weightb_), _Internal::kHasBitsOffset + 52, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float Effect_Bloom_WeightC = 53;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.effect_bloom_weightc_), _Internal::kHasBitsOffset + 53, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float Effect_Bloom_WeightD = 54;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.effect_bloom_weightd_), _Internal::kHasBitsOffset + 54, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float Effect_Bloom_Vignette = 55;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.effect_bloom_vignette_), _Internal::kHasBitsOffset + 55, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float Effect_Bloom_VignetteAtt = 56;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.effect_bloom_vignetteatt_), _Internal::kHasBitsOffset + 56, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required int32 Setting_LightingPass_DrawMode = 57;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.setting_lightingpass_drawmode_), _Internal::kHasBitsOffset + 57, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required .KuplungApp.Mesh meshObject = 58;
    {PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.meshobject_), _Internal::kHasBitsOffset + 30, 30,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::Vec3>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::Vec3>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::Vec3>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::Vec3>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::Vec3>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::Vec3>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::Vec3>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::Vec3>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::Vec3>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::MaterialColor>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::MaterialColor>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::MaterialColor>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::MaterialColor>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::Mesh>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void MeshModel::Clear() {
// @@protoc_insertion_point(message_clear_start:KuplungApp.MeshModel)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.positionx_ != nullptr);
      _impl_.positionx_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.positiony_ != nullptr);
      _impl_.positiony_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.positionz_ != nullptr);
      _impl_.positionz_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.scalex_ != nullptr);
      _impl_.scalex_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.scaley_ != nullptr);
      _impl_.scaley_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.scalez_ != nullptr);
      _impl_.scalez_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.rotatex_ != nullptr);
      _impl_.rotatex_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.rotatey_ != nullptr);
      _impl_.rotatey_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(_impl_.rotatez_ != nullptr);
      _impl_.rotatez_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(_impl_.displacex_ != nullptr);
      _impl_.displacex_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(_impl_.displacey_ != nullptr);
      _impl_.displacey_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      ABSL_DCHECK(_impl_.displacez_ != nullptr);
      _impl_.displacez_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      ABSL_DCHECK(_impl_.setting_materialrefraction_ != nullptr);
      _impl_.setting_materialrefraction_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      ABSL_DCHECK(_impl_.setting_materialspecularexp_ != nullptr);
      _impl_.setting_materialspecularexp_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      ABSL_DCHECK(_impl_.solidlightskin_materialcolor_ != nullptr);
      _impl_.solidlightskin_materialcolor_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      ABSL_DCHECK(_impl_.solidlightskin_ambient_ != nullptr);
      _impl_.solidlightskin_ambient_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      ABSL_DCHECK(_impl_.solidlightskin_diffuse_ != nullptr);
      _impl_.solidlightskin_diffuse_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      ABSL_DCHECK(_impl_.solidlightskin_specular_ != nullptr);
      _impl_.solidlightskin_specular_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      ABSL_DCHECK(_impl_.setting_lightposition_ != nullptr);
      _impl_.setting_lightposition_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      ABSL_DCHECK(_impl_.setting_lightdirection_ != nullptr);
      _impl_.setting_lightdirection_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      ABSL_DCHECK(_impl_.setting_lightambient_ != nullptr);
      _impl_.setting_lightambient_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      ABSL_DCHECK(_impl_.setting_lightdiffuse_ != nullptr);
      _impl_.setting_lightdiffuse_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      ABSL_DCHECK(_impl_.setting_lightspecular_ != nullptr);
      _impl_.setting_lightspecular_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      ABSL_DCHECK(_impl_.displacementheightscale_ != nullptr);
      _impl_.displacementheightscale_->Clear();
    }
  }
  if (cached_has_bits & 0x7f000000u) {
    if (cached_has_bits & 0x01000000u) {
      ABSL_DCHECK(_impl_.materialambient_ != nullptr);
      _impl_.materialambient_->Clear();
    }
    if (cached_has_bits & 0x02000000u) {
      ABSL_DCHECK(_impl_.materialdiffuse_ != nullptr);
      _impl_.materialdiffuse_->Clear();
    }
    if (cached_has_bits & 0x04000000u) {
      ABSL_DCHECK(_impl_.materialspecular_ != nullptr);
      _impl_.materialspecular_->Clear();
    }
    if (cached_has_bits & 0x08000000u) {
      ABSL_DCHECK(_impl_.materialemission_ != nullptr);
      _impl_.materialemission_->Clear();
    }
    if (cached_has_bits & 0x10000000u) {
      ABSL_DCHECK(_impl_.effect_gblur_radius_ != nullptr);
      _impl_.effect_gblur_radius_->Clear();
    }
    if (cached_has_bits & 0x20000000u) {
      ABSL_DCHECK(_impl_.effect_gblur_width_ != nullptr);
      _impl_.effect_gblur_width_->Clear();
    }
    if (cached_has_bits & 0x40000000u) {
      ABSL_DCHECK(_impl_.meshobject_ != nullptr);
      _impl_.meshobject_->Clear();
    }
  }
  _impl_.modelid_ = 0;
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.settings_deferredrender_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.solidlightskin_ambient_strength_) -
        reinterpret_cast<char*>(&_impl_.settings_deferredrender_)) + sizeof(_impl_.solidlightskin_ambient_strength_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.solidlightskin_diffuse_strength_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.setting_lightstrengthdiffuse_) -
        reinterpret_cast<char*>(&_impl_.solidlightskin_diffuse_strength_)) + sizeof(_impl_.setting_lightstrengthdiffuse_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&_impl_.setting_lightstrengthspecular_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.effect_bloom_vignette_) -
        reinterpret_cast<char*>(&_impl_.setting_lightstrengthspecular_)) + sizeof(_impl_.effect_bloom_vignette_));
  }
  if (cached_has_bits & 0x03000000u) {
    ::memset(&_impl_.effect_bloom_vignetteatt_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.setting_lightingpass_drawmode_) -
        reinterpret_cast<char*>(&_impl_.effect_bloom_vignetteatt_)) + sizeof(_impl_.setting_lightingpass_drawmode_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MeshModel::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MeshModel& this_ = static_cast<const MeshModel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MeshModel::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MeshModel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:KuplungApp.MeshModel)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // required int32 ModelID = 1;
          if (cached_has_bits & 0x80000000u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_modelid(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[1];
          // required bool Settings_DeferredRender = 2;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_settings_deferredrender(), target);
          }

          // required bool Setting_CelShading = 3;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_setting_celshading(), target);
          }

          // required bool Setting_Wireframe = 4;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_setting_wireframe(), target);
          }

          // required bool Setting_UseTessellation = 5;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_setting_usetessellation(), target);
          }

          // required bool Setting_UseCullFace = 6;
          if (cached_has_bits & 0x00000400u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_setting_usecullface(), target);
          }

          // required float Setting_Alpha = 7;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                7, this_._internal_setting_alpha(), target);
          }

          // required int32 Setting_TessellationSubdivision = 8;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<8>(
                    stream, this_._internal_setting_tessellationsubdivision(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // required .KuplungApp.ObjectCoordinate positionX = 9;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.positionx_, this_._impl_.positionx_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate positionY = 10;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.positiony_, this_._impl_.positiony_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate positionZ = 11;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                11, *this_._impl_.positionz_, this_._impl_.positionz_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate scaleX = 12;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                12, *this_._impl_.scalex_, this_._impl_.scalex_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate scaleY = 13;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                13, *this_._impl_.scaley_, this_._impl_.scaley_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate scaleZ = 14;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                14, *this_._impl_.scalez_, this_._impl_.scalez_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate rotateX = 15;
          if (cached_has_bits & 0x00000040u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                15, *this_._impl_.rotatex_, this_._impl_.rotatex_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate rotateY = 16;
          if (cached_has_bits & 0x00000080u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                16, *this_._impl_.rotatey_, this_._impl_.rotatey_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate rotateZ = 17;
          if (cached_has_bits & 0x00000100u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                17, *this_._impl_.rotatez_, this_._impl_.rotatez_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate displaceX = 18;
          if (cached_has_bits & 0x00000200u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                18, *this_._impl_.displacex_, this_._impl_.displacex_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate displaceY = 19;
          if (cached_has_bits & 0x00000400u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                19, *this_._impl_.displacey_, this_._impl_.displacey_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate displaceZ = 20;
          if (cached_has_bits & 0x00000800u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                20, *this_._impl_.displacez_, this_._impl_.displacez_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate Setting_MaterialRefraction = 21;
          if (cached_has_bits & 0x00001000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                21, *this_._impl_.setting_materialrefraction_, this_._impl_.setting_materialrefraction_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate Setting_MaterialSpecularExp = 22;
          if (cached_has_bits & 0x00002000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                22, *this_._impl_.setting_materialspecularexp_, this_._impl_.setting_materialspecularexp_->GetCachedSize(), target,
                stream);
          }

          cached_has_bits = this_._impl_._has_bits_[1];
          // required int32 Setting_ModelViewSkin = 23;
          if (cached_has_bits & 0x00000040u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                23, this_._internal_setting_modelviewskin(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // required .KuplungApp.Vec3 solidLightSkin_MaterialColor = 24;
          if (cached_has_bits & 0x00004000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                24, *this_._impl_.solidlightskin_materialcolor_, this_._impl_.solidlightskin_materialcolor_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.Vec3 solidLightSkin_Ambient = 25;
          if (cached_has_bits & 0x00008000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                25, *this_._impl_.solidlightskin_ambient_, this_._impl_.solidlightskin_ambient_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.Vec3 solidLightSkin_Diffuse = 26;
          if (cached_has_bits & 0x00010000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                26, *this_._impl_.solidlightskin_diffuse_, this_._impl_.solidlightskin_diffuse_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.Vec3 solidLightSkin_Specular = 27;
          if (cached_has_bits & 0x00020000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                27, *this_._impl_.solidlightskin_specular_, this_._impl_.solidlightskin_specular_->GetCachedSize(), target,
                stream);
          }

          cached_has_bits = this_._impl_._has_bits_[1];
          // required float solidLightSkin_Ambient_Strength = 28;
          if (cached_has_bits & 0x00000080u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                28, this_._internal_solidlightskin_ambient_strength(), target);
          }

          // required float solidLightSkin_Diffuse_Strength = 29;
          if (cached_has_bits & 0x00000100u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                29, this_._internal_solidlightskin_diffuse_strength(), target);
          }

          // required float solidLightSkin_Specular_Strength = 30;
          if (cached_has_bits & 0x00000200u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                30, this_._internal_solidlightskin_specular_strength(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // required .KuplungApp.Vec3 Setting_LightPosition = 31;
          if (cached_has_bits & 0x00040000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                31, *this_._impl_.setting_lightposition_, this_._impl_.setting_lightposition_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.Vec3 Setting_LightDirection = 32;
          if (cached_has_bits & 0x00080000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                32, *this_._impl_.setting_lightdirection_, this_._impl_.setting_lightdirection_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.Vec3 Setting_LightAmbient = 33;
          if (cached_has_bits & 0x00100000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                33, *this_._impl_.setting_lightambient_, this_._impl_.setting_lightambient_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.Vec3 Setting_LightDiffuse = 34;
          if (cached_has_bits & 0x00200000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                34, *this_._impl_.setting_lightdiffuse_, this_._impl_.setting_lightdiffuse_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.Vec3 Setting_LightSpecular = 35;
          if (cached_has_bits & 0x00400000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                35, *this_._impl_.setting_lightspecular_, this_._impl_.setting_lightspecular_->GetCachedSize(), target,
                stream);
          }

          cached_has_bits = this_._impl_._has_bits_[1];
          // required float Setting_LightStrengthAmbient = 36;
          if (cached_has_bits & 0x00004000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                36, this_._internal_setting_lightstrengthambient(), target);
          }

          // required float Setting_LightStrengthDiffuse = 37;
          if (cached_has_bits & 0x00008000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                37, this_._internal_setting_lightstrengthdiffuse(), target);
          }

          // required float Setting_LightStrengthSpecular = 38;
          if (cached_has_bits & 0x00010000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                38, this_._internal_setting_lightstrengthspecular(), target);
          }

          // required int32 materialIlluminationModel = 39;
          if (cached_has_bits & 0x00020000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                39, this_._internal_materialilluminationmodel(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // required .KuplungApp.ObjectCoordinate displacementHeightScale = 40;
          if (cached_has_bits & 0x00800000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                40, *this_._impl_.displacementheightscale_, this_._impl_.displacementheightscale_->GetCachedSize(), target,
                stream);
          }

          cached_has_bits = this_._impl_._has_bits_[1];
          // required bool showMaterialEditor = 41;
          if (cached_has_bits & 0x00000800u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                41, this_._internal_showmaterialeditor(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // required .KuplungApp.MaterialColor materialAmbient = 42;
          if (cached_has_bits & 0x01000000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                42, *this_._impl_.materialambient_, this_._impl_.materialambient_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.MaterialColor materialDiffuse = 43;
          if (cached_has_bits & 0x02000000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                43, *this_._impl_.materialdiffuse_, this_._impl_.materialdiffuse_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.MaterialColor materialSpecular = 44;
          if (cached_has_bits & 0x04000000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                44, *this_._impl_.materialspecular_, this_._impl_.materialspecular_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.MaterialColor materialEmission = 45;
          if (cached_has_bits & 0x08000000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                45, *this_._impl_.materialemission_, this_._impl_.materialemission_->GetCachedSize(), target,
                stream);
          }

          cached_has_bits = this_._impl_._has_bits_[1];
          // required bool Setting_ParallaxMapping = 46;
          if (cached_has_bits & 0x00001000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                46, this_._internal_setting_parallaxmapping(), target);
          }

          // required int32 Effect_GBlur_Mode = 47;
          if (cached_has_bits & 0x00040000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                47, this_._internal_effect_gblur_mode(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // required .KuplungApp.ObjectCoordinate Effect_GBlur_Radius = 48;
          if (cached_has_bits & 0x10000000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                48, *this_._impl_.effect_gblur_radius_, this_._impl_.effect_gblur_radius_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate Effect_GBlur_Width = 49;
          if (cached_has_bits & 0x20000000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                49, *this_._impl_.effect_gblur_width_, this_._impl_.effect_gblur_width_->GetCachedSize(), target,
                stream);
          }

          cached_has_bits = this_._impl_._has_bits_[1];
          // required bool Effect_Bloom_doBloom = 50;
          if (cached_has_bits & 0x00002000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                50, this_._internal_effect_bloom_dobloom(), target);
          }

          // required float Effect_Bloom_WeightA = 51;
          if (cached_has_bits & 0x00080000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                51, this_._internal_effect_bloom_weighta(), target);
          }

          // required float Effect_Bloom_WeightB = 52;
          if (cached_has_bits & 0x00100000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                52, this_._internal_effect_bloom_weightb(), target);
          }

          // required float Effect_Bloom_WeightC = 53;
          if (cached_has_bits & 0x00200000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                53, this_._internal_effect_bloom_weightc(), target);
          }

          // required float Effect_Bloom_WeightD = 54;
          if (cached_has_bits & 0x00400000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                54, this_._internal_effect_bloom_weightd(), target);
          }

          // required float Effect_Bloom_Vignette = 55;
          if (cached_has_bits & 0x00800000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                55, this_._internal_effect_bloom_vignette(), target);
          }

          // required float Effect_Bloom_VignetteAtt = 56;
          if (cached_has_bits & 0x01000000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                56, this_._internal_effect_bloom_vignetteatt(), target);
          }

          // required int32 Setting_LightingPass_DrawMode = 57;
          if (cached_has_bits & 0x02000000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                57, this_._internal_setting_lightingpass_drawmode(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // required .KuplungApp.Mesh meshObject = 58;
          if (cached_has_bits & 0x40000000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                58, *this_._impl_.meshobject_, this_._impl_.meshobject_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:KuplungApp.MeshModel)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MeshModel::ByteSizeLong(const MessageLite& base) {
          const MeshModel& this_ = static_cast<const MeshModel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MeshModel::ByteSizeLong() const {
          const MeshModel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:KuplungApp.MeshModel)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // required .KuplungApp.ObjectCoordinate positionX = 9;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.positionx_);
            }
            // required .KuplungApp.ObjectCoordinate positionY = 10;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.positiony_);
            }
            // required .KuplungApp.ObjectCoordinate positionZ = 11;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.positionz_);
            }
            // required .KuplungApp.ObjectCoordinate scaleX = 12;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.scalex_);
            }
            // required .KuplungApp.ObjectCoordinate scaleY = 13;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.scaley_);
            }
            // required .KuplungApp.ObjectCoordinate scaleZ = 14;
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.scalez_);
            }
            // required .KuplungApp.ObjectCoordinate rotateX = 15;
            if (cached_has_bits & 0x00000040u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rotatex_);
            }
            // required .KuplungApp.ObjectCoordinate rotateY = 16;
            if (cached_has_bits & 0x00000080u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rotatey_);
            }
          }
          if (cached_has_bits & 0x0000ff00u) {
            // required .KuplungApp.ObjectCoordinate rotateZ = 17;
            if (cached_has_bits & 0x00000100u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rotatez_);
            }
            // required .KuplungApp.ObjectCoordinate displaceX = 18;
            if (cached_has_bits & 0x00000200u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.displacex_);
            }
            // required .KuplungApp.ObjectCoordinate displaceY = 19;
            if (cached_has_bits & 0x00000400u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.displacey_);
            }
            // required .KuplungApp.ObjectCoordinate displaceZ = 20;
            if (cached_has_bits & 0x00000800u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.displacez_);
            }
            // required .KuplungApp.ObjectCoordinate Setting_MaterialRefraction = 21;
            if (cached_has_bits & 0x00001000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.setting_materialrefraction_);
            }
            // required .KuplungApp.ObjectCoordinate Setting_MaterialSpecularExp = 22;
            if (cached_has_bits & 0x00002000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.setting_materialspecularexp_);
            }
            // required .KuplungApp.Vec3 solidLightSkin_MaterialColor = 24;
            if (cached_has_bits & 0x00004000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.solidlightskin_materialcolor_);
            }
            // required .KuplungApp.Vec3 solidLightSkin_Ambient = 25;
            if (cached_has_bits & 0x00008000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.solidlightskin_ambient_);
            }
          }
          if (cached_has_bits & 0x00ff0000u) {
            // required .KuplungApp.Vec3 solidLightSkin_Diffuse = 26;
            if (cached_has_bits & 0x00010000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.solidlightskin_diffuse_);
            }
            // required .KuplungApp.Vec3 solidLightSkin_Specular = 27;
            if (cached_has_bits & 0x00020000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.solidlightskin_specular_);
            }
            // required .KuplungApp.Vec3 Setting_LightPosition = 31;
            if (cached_has_bits & 0x00040000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.setting_lightposition_);
            }
            // required .KuplungApp.Vec3 Setting_LightDirection = 32;
            if (cached_has_bits & 0x00080000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.setting_lightdirection_);
            }
            // required .KuplungApp.Vec3 Setting_LightAmbient = 33;
            if (cached_has_bits & 0x00100000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.setting_lightambient_);
            }
            // required .KuplungApp.Vec3 Setting_LightDiffuse = 34;
            if (cached_has_bits & 0x00200000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.setting_lightdiffuse_);
            }
            // required .KuplungApp.Vec3 Setting_LightSpecular = 35;
            if (cached_has_bits & 0x00400000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.setting_lightspecular_);
            }
            // required .KuplungApp.ObjectCoordinate displacementHeightScale = 40;
            if (cached_has_bits & 0x00800000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.displacementheightscale_);
            }
          }
          if (cached_has_bits & 0xff000000u) {
            // required .KuplungApp.MaterialColor materialAmbient = 42;
            if (cached_has_bits & 0x01000000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.materialambient_);
            }
            // required .KuplungApp.MaterialColor materialDiffuse = 43;
            if (cached_has_bits & 0x02000000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.materialdiffuse_);
            }
            // required .KuplungApp.MaterialColor materialSpecular = 44;
            if (cached_has_bits & 0x04000000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.materialspecular_);
            }
            // required .KuplungApp.MaterialColor materialEmission = 45;
            if (cached_has_bits & 0x08000000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.materialemission_);
            }
            // required .KuplungApp.ObjectCoordinate Effect_GBlur_Radius = 48;
            if (cached_has_bits & 0x10000000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.effect_gblur_radius_);
            }
            // required .KuplungApp.ObjectCoordinate Effect_GBlur_Width = 49;
            if (cached_has_bits & 0x20000000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.effect_gblur_width_);
            }
            // required .KuplungApp.Mesh meshObject = 58;
            if (cached_has_bits & 0x40000000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.meshobject_);
            }
            // required int32 ModelID = 1;
            if (cached_has_bits & 0x80000000u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_modelid());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[1];
          if (cached_has_bits & 0x000000ffu) {
            // required bool Settings_DeferredRender = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 2;
            }
            // required bool Setting_CelShading = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 2;
            }
            // required bool Setting_Wireframe = 4;
            if (cached_has_bits & 0x00000004u) {
              total_size += 2;
            }
            // required bool Setting_UseTessellation = 5;
            if (cached_has_bits & 0x00000008u) {
              total_size += 2;
            }
            // required float Setting_Alpha = 7;
            if (cached_has_bits & 0x00000010u) {
              total_size += 5;
            }
            // required int32 Setting_TessellationSubdivision = 8;
            if (cached_has_bits & 0x00000020u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_setting_tessellationsubdivision());
            }
            // required int32 Setting_ModelViewSkin = 23;
            if (cached_has_bits & 0x00000040u) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_setting_modelviewskin());
            }
            // required float solidLightSkin_Ambient_Strength = 28;
            if (cached_has_bits & 0x00000080u) {
              total_size += 6;
            }
          }
          if (cached_has_bits & 0x0000ff00u) {
            // required float solidLightSkin_Diffuse_Strength = 29;
            if (cached_has_bits & 0x00000100u) {
              total_size += 6;
            }
            // required float solidLightSkin_Specular_Strength = 30;
            if (cached_has_bits & 0x00000200u) {
              total_size += 6;
            }
            // required bool Setting_UseCullFace = 6;
            if (cached_has_bits & 0x00000400u) {
              total_size += 2;
            }
            // required bool showMaterialEditor = 41;
            if (cached_has_bits & 0x00000800u) {
              total_size += 3;
            }
            // required bool Setting_ParallaxMapping = 46;
            if (cached_has_bits & 0x00001000u) {
              total_size += 3;
            }
            // required bool Effect_Bloom_doBloom = 50;
            if (cached_has_bits & 0x00002000u) {
              total_size += 3;
            }
            // required float Setting_LightStrengthAmbient = 36;
            if (cached_has_bits & 0x00004000u) {
              total_size += 6;
            }
            // required float Setting_LightStrengthDiffuse = 37;
            if (cached_has_bits & 0x00008000u) {
              total_size += 6;
            }
          }
          if (cached_has_bits & 0x00ff0000u) {
            // required float Setting_LightStrengthSpecular = 38;
            if (cached_has_bits & 0x00010000u) {
              total_size += 6;
            }
            // required int32 materialIlluminationModel = 39;
            if (cached_has_bits & 0x00020000u) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_materialilluminationmodel());
            }
            // required int32 Effect_GBlur_Mode = 47;
            if (cached_has_bits & 0x00040000u) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_effect_gblur_mode());
            }
            // required float Effect_Bloom_WeightA = 51;
            if (cached_has_bits & 0x00080000u) {
              total_size += 6;
            }
            // required float Effect_Bloom_WeightB = 52;
            if (cached_has_bits & 0x00100000u) {
              total_size += 6;
            }
            // required float Effect_Bloom_WeightC = 53;
            if (cached_has_bits & 0x00200000u) {
              total_size += 6;
            }
            // required float Effect_Bloom_WeightD = 54;
            if (cached_has_bits & 0x00400000u) {
              total_size += 6;
            }
            // required float Effect_Bloom_Vignette = 55;
            if (cached_has_bits & 0x00800000u) {
              total_size += 6;
            }
          }
          if (cached_has_bits & 0x03000000u) {
            // required float Effect_Bloom_VignetteAtt = 56;
            if (cached_has_bits & 0x01000000u) {
              total_size += 6;
            }
            // required int32 Setting_LightingPass_DrawMode = 57;
            if (cached_has_bits & 0x02000000u) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_setting_lightingpass_drawmode());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MeshModel::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MeshModel*>(&to_msg);
  auto& from = static_cast<const MeshModel&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:KuplungApp.MeshModel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.positionx_ != nullptr);
      if (_this->_impl_.positionx_ == nullptr) {
        _this->_impl_.positionx_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.positionx_);
      } else {
        _this->_impl_.positionx_->MergeFrom(*from._impl_.positionx_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.positiony_ != nullptr);
      if (_this->_impl_.positiony_ == nullptr) {
        _this->_impl_.positiony_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.positiony_);
      } else {
        _this->_impl_.positiony_->MergeFrom(*from._impl_.positiony_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.positionz_ != nullptr);
      if (_this->_impl_.positionz_ == nullptr) {
        _this->_impl_.positionz_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.positionz_);
      } else {
        _this->_impl_.positionz_->MergeFrom(*from._impl_.positionz_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.scalex_ != nullptr);
      if (_this->_impl_.scalex_ == nullptr) {
        _this->_impl_.scalex_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.scalex_);
      } else {
        _this->_impl_.scalex_->MergeFrom(*from._impl_.scalex_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.scaley_ != nullptr);
      if (_this->_impl_.scaley_ == nullptr) {
        _this->_impl_.scaley_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.scaley_);
      } else {
        _this->_impl_.scaley_->MergeFrom(*from._impl_.scaley_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.scalez_ != nullptr);
      if (_this->_impl_.scalez_ == nullptr) {
        _this->_impl_.scalez_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.scalez_);
      } else {
        _this->_impl_.scalez_->MergeFrom(*from._impl_.scalez_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.rotatex_ != nullptr);
      if (_this->_impl_.rotatex_ == nullptr) {
        _this->_impl_.rotatex_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.rotatex_);
      } else {
        _this->_impl_.rotatex_->MergeFrom(*from._impl_.rotatex_);
      }
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(from._impl_.rotatey_ != nullptr);
      if (_this->_impl_.rotatey_ == nullptr) {
        _this->_impl_.rotatey_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.rotatey_);
      } else {
        _this->_impl_.rotatey_->MergeFrom(*from._impl_.rotatey_);
      }
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(from._impl_.rotatez_ != nullptr);
      if (_this->_impl_.rotatez_ == nullptr) {
        _this->_impl_.rotatez_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.rotatez_);
      } else {
        _this->_impl_.rotatez_->MergeFrom(*from._impl_.rotatez_);
      }
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(from._impl_.displacex_ != nullptr);
      if (_this->_impl_.displacex_ == nullptr) {
        _this->_impl_.displacex_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.displacex_);
      } else {
        _this->_impl_.displacex_->MergeFrom(*from._impl_.displacex_);
      }
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(from._impl_.displacey_ != nullptr);
      if (_this->_impl_.displacey_ == nullptr) {
        _this->_impl_.displacey_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.displacey_);
      } else {
        _this->_impl_.displacey_->MergeFrom(*from._impl_.displacey_);
      }
    }
    if (cached_has_bits & 0x00000800u) {
      ABSL_DCHECK(from._impl_.displacez_ != nullptr);
      if (_this->_impl_.displacez_ == nullptr) {
        _this->_impl_.displacez_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.displacez_);
      } else {
        _this->_impl_.displacez_->MergeFrom(*from._impl_.displacez_);
      }
    }
    if (cached_has_bits & 0x00001000u) {
      ABSL_DCHECK(from._impl_.setting_materialrefraction_ != nullptr);
      if (_this->_impl_.setting_materialrefraction_ == nullptr) {
        _this->_impl_.setting_materialrefraction_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.setting_materialrefraction_);
      } else {
        _this->_impl_.setting_materialrefraction_->MergeFrom(*from._impl_.setting_materialrefraction_);
      }
    }
    if (cached_has_bits & 0x00002000u) {
      ABSL_DCHECK(from._impl_.setting_materialspecularexp_ != nullptr);
      if (_this->_impl_.setting_materialspecularexp_ == nullptr) {
        _this->_impl_.setting_materialspecularexp_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.setting_materialspecularexp_);
      } else {
        _this->_impl_.setting_materialspecularexp_->MergeFrom(*from._impl_.setting_materialspecularexp_);
      }
    }
    if (cached_has_bits & 0x00004000u) {
      ABSL_DCHECK(from._impl_.solidlightskin_materialcolor_ != nullptr);
      if (_this->_impl_.solidlightskin_materialcolor_ == nullptr) {
        _this->_impl_.solidlightskin_materialcolor_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(arena, *from._impl_.solidlightskin_materialcolor_);
      } else {
        _this->_impl_.solidlightskin_materialcolor_->MergeFrom(*from._impl_.solidlightskin_materialcolor_);
      }
    }
    if (cached_has_bits & 0x00008000u) {
      ABSL_DCHECK(from._impl_.solidlightskin_ambient_ != nullptr);
      if (_this->_impl_.solidlightskin_ambient_ == nullptr) {
        _this->_impl_.solidlightskin_ambient_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(arena, *from._impl_.solidlightskin_ambient_);
      } else {
        _this->_impl_.solidlightskin_ambient_->MergeFrom(*from._impl_.solidlightskin_ambient_);
      }
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      ABSL_DCHECK(from._impl_.solidlightskin_diffuse_ != nullptr);
      if (_this->_impl_.solidlightskin_diffuse_ == nullptr) {
        _this->_impl_.solidlightskin_diffuse_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(arena, *from._impl_.solidlightskin_diffuse_);
      } else {
        _this->_impl_.solidlightskin_diffuse_->MergeFrom(*from._impl_.solidlightskin_diffuse_);
      }
    }
    if (cached_has_bits & 0x00020000u) {
      ABSL_DCHECK(from._impl_.solidlightskin_specular_ != nullptr);
      if (_this->_impl_.solidlightskin_specular_ == nullptr) {
        _this->_impl_.solidlightskin_specular_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(arena, *from._impl_.solidlightskin_specular_);
      } else {
        _this->_impl_.solidlightskin_specular_->MergeFrom(*from._impl_.solidlightskin_specular_);
      }
    }
    if (cached_has_bits & 0x00040000u) {
      ABSL_DCHECK(from._impl_.setting_lightposition_ != nullptr);
      if (_this->_impl_.setting_lightposition_ == nullptr) {
        _this->_impl_.setting_lightposition_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(arena, *from._impl_.setting_lightposition_);
      } else {
        _this->_impl_.setting_lightposition_->MergeFrom(*from._impl_.setting_lightposition_);
      }
    }
    if (cached_has_bits & 0x00080000u) {
      ABSL_DCHECK(from._impl_.setting_lightdirection_ != nullptr);
      if (_this->_impl_.setting_lightdirection_ == nullptr) {
        _this->_impl_.setting_lightdirection_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(arena, *from._impl_.setting_lightdirection_);
      } else {
        _this->_impl_.setting_lightdirection_->MergeFrom(*from._impl_.setting_lightdirection_);
      }
    }
    if (cached_has_bits & 0x00100000u) {
      ABSL_DCHECK(from._impl_.setting_lightambient_ != nullptr);
      if (_this->_impl_.setting_lightambient_ == nullptr) {
        _this->_impl_.setting_lightambient_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(arena, *from._impl_.setting_lightambient_);
      } else {
        _this->_impl_.setting_lightambient_->MergeFrom(*from._impl_.setting_lightambient_);
      }
    }
    if (cached_has_bits & 0x00200000u) {
      ABSL_DCHECK(from._impl_.setting_lightdiffuse_ != nullptr);
      if (_this->_impl_.setting_lightdiffuse_ == nullptr) {
        _this->_impl_.setting_lightdiffuse_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(arena, *from._impl_.setting_lightdiffuse_);
      } else {
        _this->_impl_.setting_lightdiffuse_->MergeFrom(*from._impl_.setting_lightdiffuse_);
      }
    }
    if (cached_has_bits & 0x00400000u) {
      ABSL_DCHECK(from._impl_.setting_lightspecular_ != nullptr);
      if (_this->_impl_.setting_lightspecular_ == nullptr) {
        _this->_impl_.setting_lightspecular_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(arena, *from._impl_.setting_lightspecular_);
      } else {
        _this->_impl_.setting_lightspecular_->MergeFrom(*from._impl_.setting_lightspecular_);
      }
    }
    if (cached_has_bits & 0x00800000u) {
      ABSL_DCHECK(from._impl_.displacementheightscale_ != nullptr);
      if (_this->_impl_.displacementheightscale_ == nullptr) {
        _this->_impl_.displacementheightscale_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.displacementheightscale_);
      } else {
        _this->_impl_.displacementheightscale_->MergeFrom(*from._impl_.displacementheightscale_);
      }
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      ABSL_DCHECK(from._impl_.materialambient_ != nullptr);
      if (_this->_impl_.materialambient_ == nullptr) {
        _this->_impl_.materialambient_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::MaterialColor>(arena, *from._impl_.materialambient_);
      } else {
        _this->_impl_.materialambient_->MergeFrom(*from._impl_.materialambient_);
      }
    }
    if (cached_has_bits & 0x02000000u) {
      ABSL_DCHECK(from._impl_.materialdiffuse_ != nullptr);
      if (_this->_impl_.materialdiffuse_ == nullptr) {
        _this->_impl_.materialdiffuse_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::MaterialColor>(arena, *from._impl_.materialdiffuse_);
      } else {
        _this->_impl_.materialdiffuse_->MergeFrom(*from._impl_.materialdiffuse_);
      }
    }
    if (cached_has_bits & 0x04000000u) {
      ABSL_DCHECK(from._impl_.materialspecular_ != nullptr);
      if (_this->_impl_.materialspecular_ == nullptr) {
        _this->_impl_.materialspecular_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::MaterialColor>(arena, *from._impl_.materialspecular_);
      } else {
        _this->_impl_.materialspecular_->MergeFrom(*from._impl_.materialspecular_);
      }
    }
    if (cached_has_bits & 0x08000000u) {
      ABSL_DCHECK(from._impl_.materialemission_ != nullptr);
      if (_this->_impl_.materialemission_ == nullptr) {
        _this->_impl_.materialemission_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::MaterialColor>(arena, *from._impl_.materialemission_);
      } else {
        _this->_impl_.materialemission_->MergeFrom(*from._impl_.materialemission_);
      }
    }
    if (cached_has_bits & 0x10000000u) {
      ABSL_DCHECK(from._impl_.effect_gblur_radius_ != nullptr);
      if (_this->_impl_.effect_gblur_radius_ == nullptr) {
        _this->_impl_.effect_gblur_radius_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.effect_gblur_radius_);
      } else {
        _this->_impl_.effect_gblur_radius_->MergeFrom(*from._impl_.effect_gblur_radius_);
      }
    }
    if (cached_has_bits & 0x20000000u) {
      ABSL_DCHECK(from._impl_.effect_gblur_width_ != nullptr);
      if (_this->_impl_.effect_gblur_width_ == nullptr) {
        _this->_impl_.effect_gblur_width_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.effect_gblur_width_);
      } else {
        _this->_impl_.effect_gblur_width_->MergeFrom(*from._impl_.effect_gblur_width_);
      }
    }
    if (cached_has_bits & 0x40000000u) {
      ABSL_DCHECK(from._impl_.meshobject_ != nullptr);
      if (_this->_impl_.meshobject_ == nullptr) {
        _this->_impl_.meshobject_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::Mesh>(arena, *from._impl_.meshobject_);
      } else {
        _this->_impl_.meshobject_->MergeFrom(*from._impl_.meshobject_);
      }
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_impl_.modelid_ = from._impl_.modelid_;
    }
  }
  cached_has_bits = from._impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.settings_deferredrender_ = from._impl_.settings_deferredrender_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.setting_celshading_ = from._impl_.setting_celshading_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.setting_wireframe_ = from._impl_.setting_wireframe_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.setting_usetessellation_ = from._impl_.setting_usetessellation_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.setting_alpha_ = from._impl_.setting_alpha_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.setting_tessellationsubdivision_ = from._impl_.setting_tessellationsubdivision_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.setting_modelviewskin_ = from._impl_.setting_modelviewskin_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.solidlightskin_ambient_strength_ = from._impl_.solidlightskin_ambient_strength_;
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.solidlightskin_diffuse_strength_ = from._impl_.solidlightskin_diffuse_strength_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.solidlightskin_specular_strength_ = from._impl_.solidlightskin_specular_strength_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.setting_usecullface_ = from._impl_.setting_usecullface_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.showmaterialeditor_ = from._impl_.showmaterialeditor_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.setting_parallaxmapping_ = from._impl_.setting_parallaxmapping_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.effect_bloom_dobloom_ = from._impl_.effect_bloom_dobloom_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.setting_lightstrengthambient_ = from._impl_.setting_lightstrengthambient_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.setting_lightstrengthdiffuse_ = from._impl_.setting_lightstrengthdiffuse_;
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.setting_lightstrengthspecular_ = from._impl_.setting_lightstrengthspecular_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.materialilluminationmodel_ = from._impl_.materialilluminationmodel_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.effect_gblur_mode_ = from._impl_.effect_gblur_mode_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.effect_bloom_weighta_ = from._impl_.effect_bloom_weighta_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.effect_bloom_weightb_ = from._impl_.effect_bloom_weightb_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.effect_bloom_weightc_ = from._impl_.effect_bloom_weightc_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.effect_bloom_weightd_ = from._impl_.effect_bloom_weightd_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.effect_bloom_vignette_ = from._impl_.effect_bloom_vignette_;
    }
  }
  if (cached_has_bits & 0x03000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.effect_bloom_vignetteatt_ = from._impl_.effect_bloom_vignetteatt_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.setting_lightingpass_drawmode_ = from._impl_.setting_lightingpass_drawmode_;
    }
  }
  _this->_impl_._has_bits_.Or(from._impl_._has_bits_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MeshModel::CopyFrom(const MeshModel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KuplungApp.MeshModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MeshModel::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const MeshModel&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._impl_.positionx_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._impl_.positiony_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._impl_.positionz_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!this_._impl_.scalex_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (!this_._impl_.scaley_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (!this_._impl_.scalez_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (!this_._impl_.rotatex_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000080u) != 0) {
    if (!this_._impl_.rotatey_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000100u) != 0) {
    if (!this_._impl_.rotatez_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000200u) != 0) {
    if (!this_._impl_.displacex_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000400u) != 0) {
    if (!this_._impl_.displacey_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000800u) != 0) {
    if (!this_._impl_.displacez_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00001000u) != 0) {
    if (!this_._impl_.setting_materialrefraction_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00002000u) != 0) {
    if (!this_._impl_.setting_materialspecularexp_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00004000u) != 0) {
    if (!this_._impl_.solidlightskin_materialcolor_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00008000u) != 0) {
    if (!this_._impl_.solidlightskin_ambient_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00010000u) != 0) {
    if (!this_._impl_.solidlightskin_diffuse_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00020000u) != 0) {
    if (!this_._impl_.solidlightskin_specular_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00040000u) != 0) {
    if (!this_._impl_.setting_lightposition_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00080000u) != 0) {
    if (!this_._impl_.setting_lightdirection_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00100000u) != 0) {
    if (!this_._impl_.setting_lightambient_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00200000u) != 0) {
    if (!this_._impl_.setting_lightdiffuse_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00400000u) != 0) {
    if (!this_._impl_.setting_lightspecular_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00800000u) != 0) {
    if (!this_._impl_.displacementheightscale_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x01000000u) != 0) {
    if (!this_._impl_.materialambient_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x02000000u) != 0) {
    if (!this_._impl_.materialdiffuse_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x04000000u) != 0) {
    if (!this_._impl_.materialspecular_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x08000000u) != 0) {
    if (!this_._impl_.materialemission_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x10000000u) != 0) {
    if (!this_._impl_.effect_gblur_radius_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x20000000u) != 0) {
    if (!this_._impl_.effect_gblur_width_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x40000000u) != 0) {
    if (!this_._impl_.meshobject_->IsInitialized()) return false;
  }
  return true;
}

void MeshModel::InternalSwap(MeshModel* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_._has_bits_[1], other->_impl_._has_bits_[1]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.setting_lightingpass_drawmode_)
      + sizeof(MeshModel::_impl_.setting_lightingpass_drawmode_)
      - PROTOBUF_FIELD_OFFSET(MeshModel, _impl_.positionx_)>(
          reinterpret_cast<char*>(&_impl_.positionx_),
          reinterpret_cast<char*>(&other->_impl_.positionx_));
}

::google::protobuf::Metadata MeshModel::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace KuplungApp
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_KuplungAppScene_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
