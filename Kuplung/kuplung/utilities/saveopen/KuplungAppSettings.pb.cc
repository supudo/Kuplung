// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: KuplungAppSettings.proto
// Protobuf C++ Version: 5.29.5

#include "KuplungAppSettings.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace KuplungApp {

inline constexpr GridSettings::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        positionx_{nullptr},
        positiony_{nullptr},
        positionz_{nullptr},
        rotatex_{nullptr},
        rotatey_{nullptr},
        rotatez_{nullptr},
        scalex_{nullptr},
        scaley_{nullptr},
        scalez_{nullptr},
        actasmirror_{false},
        gridsize_{0},
        transparency_{0},
        showgrid_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GridSettings::GridSettings(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GridSettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GridSettingsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GridSettingsDefaultTypeInternal() {}
  union {
    GridSettings _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GridSettingsDefaultTypeInternal _GridSettings_default_instance_;

inline constexpr CameraSettings::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        cameraposition_{nullptr},
        view_eye_{nullptr},
        view_center_{nullptr},
        view_up_{nullptr},
        positionx_{nullptr},
        positiony_{nullptr},
        positionz_{nullptr},
        rotatex_{nullptr},
        rotatey_{nullptr},
        rotatez_{nullptr},
        rotatecenterx_{nullptr},
        rotatecentery_{nullptr},
        rotatecenterz_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CameraSettings::CameraSettings(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CameraSettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CameraSettingsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CameraSettingsDefaultTypeInternal() {}
  union {
    CameraSettings _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CameraSettingsDefaultTypeInternal _CameraSettings_default_instance_;

inline constexpr LightObject::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        positionx_{nullptr},
        positiony_{nullptr},
        positionz_{nullptr},
        directionx_{nullptr},
        directiony_{nullptr},
        directionz_{nullptr},
        scalex_{nullptr},
        scaley_{nullptr},
        scalez_{nullptr},
        rotatex_{nullptr},
        rotatey_{nullptr},
        rotatez_{nullptr},
        rotatecenterx_{nullptr},
        rotatecentery_{nullptr},
        rotatecenterz_{nullptr},
        ambient_{nullptr},
        diffuse_{nullptr},
        specular_{nullptr},
        lcutoff_{nullptr},
        loutercutoff_{nullptr},
        lconstant_{nullptr},
        llinear_{nullptr},
        lquadratic_{nullptr},
        type_{0},
        showlampobject_{false},
        showlampdirection_{false},
        showinwire_{false} {}

template <typename>
PROTOBUF_CONSTEXPR LightObject::LightObject(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LightObjectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LightObjectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LightObjectDefaultTypeInternal() {}
  union {
    LightObject _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LightObjectDefaultTypeInternal _LightObject_default_instance_;

inline constexpr GUISettings::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        lights_{},
        heightmapimage_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        setting_outlinecolor_{nullptr},
        setting_uiambientlight_{nullptr},
        solidlight_direction_{nullptr},
        solidlight_materialcolor_{nullptr},
        solidlight_ambient_{nullptr},
        solidlight_diffuse_{nullptr},
        solidlight_specular_{nullptr},
        camera_{nullptr},
        grid_{nullptr},
        setting_fov_{0},
        setting_outlinethickness_{0},
        setting_ratiowidth_{0},
        setting_ratioheight_{0},
        setting_planeclose_{0},
        setting_planefar_{0},
        setting_gridsize_{0},
        setting_skybox_{0},
        setting_fixedgridworld_{false},
        setting_outlinecolorpickeropen_{false},
        setting_showaxishelpers_{false},
        settings_showzaxis_{false},
        setting_lightingpass_drawmode_{0},
        setting_deferredtestlightsnumber_{0},
        setting_deferredambientstrength_{0},
        viewmodelskin_{0},
        setting_deferredtestmode_{false},
        setting_deferredtestlights_{false},
        solidlight_materialcolor_colorpicker_{false},
        solidlight_ambient_colorpicker_{false},
        solidlight_ambient_strength_{0},
        solidlight_diffuse_strength_{0},
        solidlight_specular_strength_{0},
        solidlight_diffuse_colorpicker_{false},
        solidlight_specular_colorpicker_{false},
        setting_showterrain_{false},
        setting_terrainmodel_{false},
        setting_terrainwidth_{0},
        setting_terrainanimatex_{false},
        setting_terrainanimatey_{false},
        setting_showspaceship_{false},
        setting_generatespaceship_{false},
        setting_terrainheight_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GUISettings::GUISettings(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GUISettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GUISettingsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GUISettingsDefaultTypeInternal() {}
  union {
    GUISettings _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GUISettingsDefaultTypeInternal _GUISettings_default_instance_;
}  // namespace KuplungApp
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_KuplungAppSettings_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_KuplungAppSettings_2eproto = nullptr;
const ::uint32_t
    TableStruct_KuplungAppSettings_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.setting_fov_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.setting_outlinethickness_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.setting_ratiowidth_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.setting_ratioheight_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.setting_planeclose_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.setting_planefar_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.setting_gridsize_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.setting_skybox_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.setting_outlinecolor_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.setting_uiambientlight_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.setting_fixedgridworld_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.setting_outlinecolorpickeropen_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.setting_showaxishelpers_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.settings_showzaxis_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.setting_deferredtestmode_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.setting_deferredtestlights_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.setting_lightingpass_drawmode_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.setting_deferredtestlightsnumber_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.setting_deferredambientstrength_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.viewmodelskin_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.solidlight_direction_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.solidlight_materialcolor_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.solidlight_ambient_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.solidlight_diffuse_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.solidlight_specular_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.solidlight_ambient_strength_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.solidlight_diffuse_strength_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.solidlight_specular_strength_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.solidlight_materialcolor_colorpicker_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.solidlight_ambient_colorpicker_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.solidlight_diffuse_colorpicker_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.solidlight_specular_colorpicker_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.setting_showterrain_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.setting_terrainmodel_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.setting_terrainanimatex_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.setting_terrainanimatey_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.heightmapimage_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.setting_terrainwidth_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.setting_terrainheight_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.setting_showspaceship_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.setting_generatespaceship_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.camera_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.grid_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GUISettings, _impl_.lights_),
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        1,
        2,
        18,
        19,
        20,
        21,
        26,
        27,
        22,
        23,
        24,
        25,
        3,
        4,
        5,
        6,
        7,
        30,
        31,
        32,
        28,
        29,
        33,
        34,
        35,
        36,
        38,
        39,
        0,
        37,
        42,
        40,
        41,
        8,
        9,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::KuplungApp::CameraSettings, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::CameraSettings, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::KuplungApp::CameraSettings, _impl_.cameraposition_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::CameraSettings, _impl_.view_eye_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::CameraSettings, _impl_.view_center_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::CameraSettings, _impl_.view_up_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::CameraSettings, _impl_.positionx_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::CameraSettings, _impl_.positiony_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::CameraSettings, _impl_.positionz_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::CameraSettings, _impl_.rotatex_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::CameraSettings, _impl_.rotatey_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::CameraSettings, _impl_.rotatez_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::CameraSettings, _impl_.rotatecenterx_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::CameraSettings, _impl_.rotatecentery_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::CameraSettings, _impl_.rotatecenterz_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GridSettings, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GridSettings, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GridSettings, _impl_.actasmirror_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GridSettings, _impl_.gridsize_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GridSettings, _impl_.positionx_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GridSettings, _impl_.positiony_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GridSettings, _impl_.positionz_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GridSettings, _impl_.rotatex_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GridSettings, _impl_.rotatey_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GridSettings, _impl_.rotatez_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GridSettings, _impl_.scalex_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GridSettings, _impl_.scaley_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GridSettings, _impl_.scalez_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GridSettings, _impl_.transparency_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::GridSettings, _impl_.showgrid_),
        9,
        10,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        11,
        12,
        PROTOBUF_FIELD_OFFSET(::KuplungApp::LightObject, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::LightObject, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::KuplungApp::LightObject, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::LightObject, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::LightObject, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::LightObject, _impl_.showlampobject_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::LightObject, _impl_.showlampdirection_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::LightObject, _impl_.showinwire_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::LightObject, _impl_.positionx_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::LightObject, _impl_.positiony_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::LightObject, _impl_.positionz_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::LightObject, _impl_.directionx_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::LightObject, _impl_.directiony_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::LightObject, _impl_.directionz_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::LightObject, _impl_.scalex_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::LightObject, _impl_.scaley_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::LightObject, _impl_.scalez_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::LightObject, _impl_.rotatex_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::LightObject, _impl_.rotatey_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::LightObject, _impl_.rotatez_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::LightObject, _impl_.rotatecenterx_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::LightObject, _impl_.rotatecentery_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::LightObject, _impl_.rotatecenterz_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::LightObject, _impl_.ambient_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::LightObject, _impl_.diffuse_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::LightObject, _impl_.specular_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::LightObject, _impl_.lcutoff_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::LightObject, _impl_.loutercutoff_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::LightObject, _impl_.lconstant_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::LightObject, _impl_.llinear_),
        PROTOBUF_FIELD_OFFSET(::KuplungApp::LightObject, _impl_.lquadratic_),
        0,
        1,
        25,
        26,
        27,
        28,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 52, -1, sizeof(::KuplungApp::GUISettings)},
        {96, 117, -1, sizeof(::KuplungApp::CameraSettings)},
        {130, 151, -1, sizeof(::KuplungApp::GridSettings)},
        {164, 201, -1, sizeof(::KuplungApp::LightObject)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::KuplungApp::_GUISettings_default_instance_._instance,
    &::KuplungApp::_CameraSettings_default_instance_._instance,
    &::KuplungApp::_GridSettings_default_instance_._instance,
    &::KuplungApp::_LightObject_default_instance_._instance,
};
const char descriptor_table_protodef_KuplungAppSettings_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\030KuplungAppSettings.proto\022\nKuplungApp\032\030"
    "KuplungDefinitions.proto\"\272\014\n\013GUISettings"
    "\022\023\n\013Setting_FOV\030\001 \002(\002\022 \n\030Setting_Outline"
    "Thickness\030\002 \002(\002\022\032\n\022Setting_RatioWidth\030\003 "
    "\002(\002\022\033\n\023Setting_RatioHeight\030\004 \002(\002\022\032\n\022Sett"
    "ing_PlaneClose\030\005 \002(\002\022\030\n\020Setting_PlaneFar"
    "\030\006 \002(\002\022\030\n\020Setting_GridSize\030\007 \002(\005\022\026\n\016Sett"
    "ing_Skybox\030\010 \002(\005\022.\n\024Setting_OutlineColor"
    "\030\t \002(\0132\020.KuplungApp.Vec4\0220\n\026Setting_UIAm"
    "bientLight\030\n \002(\0132\020.KuplungApp.Vec3\022\036\n\026Se"
    "tting_FixedGridWorld\030\013 \002(\010\022&\n\036Setting_Ou"
    "tlineColorPickerOpen\030\014 \002(\010\022\037\n\027Setting_Sh"
    "owAxisHelpers\030\r \002(\010\022\032\n\022Settings_ShowZAxi"
    "s\030\016 \002(\010\022 \n\030Setting_DeferredTestMode\030\017 \002("
    "\010\022\"\n\032Setting_DeferredTestLights\030\020 \002(\010\022%\n"
    "\035Setting_LightingPass_DrawMode\030\021 \002(\005\022(\n "
    "Setting_DeferredTestLightsNumber\030\022 \002(\005\022\'"
    "\n\037Setting_DeferredAmbientStrength\030\023 \002(\002\022"
    "\025\n\rviewModelSkin\030\024 \002(\005\022.\n\024SolidLight_Dir"
    "ection\030\025 \002(\0132\020.KuplungApp.Vec3\0222\n\030SolidL"
    "ight_MaterialColor\030\026 \002(\0132\020.KuplungApp.Ve"
    "c3\022,\n\022SolidLight_Ambient\030\027 \002(\0132\020.Kuplung"
    "App.Vec3\022,\n\022SolidLight_Diffuse\030\030 \002(\0132\020.K"
    "uplungApp.Vec3\022-\n\023SolidLight_Specular\030\031 "
    "\002(\0132\020.KuplungApp.Vec3\022#\n\033SolidLight_Ambi"
    "ent_Strength\030\032 \002(\002\022#\n\033SolidLight_Diffuse"
    "_Strength\030\033 \002(\002\022$\n\034SolidLight_Specular_S"
    "trength\030\034 \002(\002\022,\n$SolidLight_MaterialColo"
    "r_ColorPicker\030\035 \002(\010\022&\n\036SolidLight_Ambien"
    "t_ColorPicker\030\036 \002(\010\022&\n\036SolidLight_Diffus"
    "e_ColorPicker\030\037 \002(\010\022\'\n\037SolidLight_Specul"
    "ar_ColorPicker\030  \002(\010\022\033\n\023Setting_ShowTerr"
    "ain\030! \002(\010\022\034\n\024Setting_TerrainModel\030\" \002(\010\022"
    "\037\n\027Setting_TerrainAnimateX\030# \002(\010\022\037\n\027Sett"
    "ing_TerrainAnimateY\030$ \002(\010\022\026\n\016heightmapIm"
    "age\030% \002(\t\022\034\n\024Setting_TerrainWidth\030& \002(\005\022"
    "\035\n\025Setting_TerrainHeight\030\' \002(\005\022\035\n\025Settin"
    "g_ShowSpaceship\030( \002(\010\022!\n\031Setting_Generat"
    "eSpaceship\030) \002(\010\022*\n\006camera\030* \002(\0132\032.Kuplu"
    "ngApp.CameraSettings\022&\n\004grid\030+ \002(\0132\030.Kup"
    "lungApp.GridSettings\022\'\n\006lights\030, \003(\0132\027.K"
    "uplungApp.LightObject\"\347\004\n\016CameraSettings"
    "\022(\n\016cameraPosition\030\001 \002(\0132\020.KuplungApp.Ve"
    "c3\022\"\n\010View_Eye\030\002 \002(\0132\020.KuplungApp.Vec3\022%"
    "\n\013View_Center\030\003 \002(\0132\020.KuplungApp.Vec3\022!\n"
    "\007View_Up\030\004 \002(\0132\020.KuplungApp.Vec3\022/\n\tposi"
    "tionX\030\005 \002(\0132\034.KuplungApp.ObjectCoordinat"
    "e\022/\n\tpositionY\030\006 \002(\0132\034.KuplungApp.Object"
    "Coordinate\022/\n\tpositionZ\030\007 \002(\0132\034.KuplungA"
    "pp.ObjectCoordinate\022-\n\007rotateX\030\010 \002(\0132\034.K"
    "uplungApp.ObjectCoordinate\022-\n\007rotateY\030\t "
    "\002(\0132\034.KuplungApp.ObjectCoordinate\022-\n\007rot"
    "ateZ\030\n \002(\0132\034.KuplungApp.ObjectCoordinate"
    "\0223\n\rrotateCenterX\030\013 \002(\0132\034.KuplungApp.Obj"
    "ectCoordinate\0223\n\rrotateCenterY\030\014 \002(\0132\034.K"
    "uplungApp.ObjectCoordinate\0223\n\rrotateCent"
    "erZ\030\r \002(\0132\034.KuplungApp.ObjectCoordinate\""
    "\207\004\n\014GridSettings\022\023\n\013actAsMirror\030\001 \002(\010\022\020\n"
    "\010gridSize\030\002 \002(\005\022/\n\tpositionX\030\003 \002(\0132\034.Kup"
    "lungApp.ObjectCoordinate\022/\n\tpositionY\030\004 "
    "\002(\0132\034.KuplungApp.ObjectCoordinate\022/\n\tpos"
    "itionZ\030\005 \002(\0132\034.KuplungApp.ObjectCoordina"
    "te\022-\n\007rotateX\030\006 \002(\0132\034.KuplungApp.ObjectC"
    "oordinate\022-\n\007rotateY\030\007 \002(\0132\034.KuplungApp."
    "ObjectCoordinate\022-\n\007rotateZ\030\010 \002(\0132\034.Kupl"
    "ungApp.ObjectCoordinate\022,\n\006scaleX\030\t \002(\0132"
    "\034.KuplungApp.ObjectCoordinate\022,\n\006scaleY\030"
    "\n \002(\0132\034.KuplungApp.ObjectCoordinate\022,\n\006s"
    "caleZ\030\013 \002(\0132\034.KuplungApp.ObjectCoordinat"
    "e\022\024\n\014transparency\030\014 \002(\002\022\020\n\010showGrid\030\r \002("
    "\005\"\337\t\n\013LightObject\022\r\n\005title\030\001 \002(\t\022\023\n\013desc"
    "ription\030\002 \002(\t\022\014\n\004type\030\003 \002(\005\022\026\n\016showLampO"
    "bject\030\004 \002(\010\022\031\n\021showLampDirection\030\005 \002(\010\022\022"
    "\n\nshowInWire\030\006 \002(\010\022/\n\tpositionX\030\007 \002(\0132\034."
    "KuplungApp.ObjectCoordinate\022/\n\tpositionY"
    "\030\010 \002(\0132\034.KuplungApp.ObjectCoordinate\022/\n\t"
    "positionZ\030\t \002(\0132\034.KuplungApp.ObjectCoord"
    "inate\0220\n\ndirectionX\030\n \002(\0132\034.KuplungApp.O"
    "bjectCoordinate\0220\n\ndirectionY\030\013 \002(\0132\034.Ku"
    "plungApp.ObjectCoordinate\0220\n\ndirectionZ\030"
    "\014 \002(\0132\034.KuplungApp.ObjectCoordinate\022,\n\006s"
    "caleX\030\r \002(\0132\034.KuplungApp.ObjectCoordinat"
    "e\022,\n\006scaleY\030\016 \002(\0132\034.KuplungApp.ObjectCoo"
    "rdinate\022,\n\006scaleZ\030\017 \002(\0132\034.KuplungApp.Obj"
    "ectCoordinate\022-\n\007rotateX\030\020 \002(\0132\034.Kuplung"
    "App.ObjectCoordinate\022-\n\007rotateY\030\021 \002(\0132\034."
    "KuplungApp.ObjectCoordinate\022-\n\007rotateZ\030\022"
    " \002(\0132\034.KuplungApp.ObjectCoordinate\0223\n\rro"
    "tateCenterX\030\023 \002(\0132\034.KuplungApp.ObjectCoo"
    "rdinate\0223\n\rrotateCenterY\030\024 \002(\0132\034.Kuplung"
    "App.ObjectCoordinate\0223\n\rrotateCenterZ\030\025 "
    "\002(\0132\034.KuplungApp.ObjectCoordinate\022*\n\007amb"
    "ient\030\026 \002(\0132\031.KuplungApp.MaterialColor\022*\n"
    "\007diffuse\030\027 \002(\0132\031.KuplungApp.MaterialColo"
    "r\022+\n\010specular\030\030 \002(\0132\031.KuplungApp.Materia"
    "lColor\022-\n\007lCutOff\030\031 \002(\0132\034.KuplungApp.Obj"
    "ectCoordinate\0222\n\014lOuterCutOff\030\032 \002(\0132\034.Ku"
    "plungApp.ObjectCoordinate\022/\n\tlConstant\030\033"
    " \002(\0132\034.KuplungApp.ObjectCoordinate\022-\n\007lL"
    "inear\030\034 \002(\0132\034.KuplungApp.ObjectCoordinat"
    "e\0220\n\nlQuadratic\030\035 \002(\0132\034.KuplungApp.Objec"
    "tCoordinate"
};
static const ::_pbi::DescriptorTable* const descriptor_table_KuplungAppSettings_2eproto_deps[1] =
    {
        &::descriptor_table_KuplungDefinitions_2eproto,
};
static ::absl::once_flag descriptor_table_KuplungAppSettings_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_KuplungAppSettings_2eproto = {
    false,
    false,
    4051,
    descriptor_table_protodef_KuplungAppSettings_2eproto,
    "KuplungAppSettings.proto",
    &descriptor_table_KuplungAppSettings_2eproto_once,
    descriptor_table_KuplungAppSettings_2eproto_deps,
    1,
    4,
    schemas,
    file_default_instances,
    TableStruct_KuplungAppSettings_2eproto::offsets,
    file_level_enum_descriptors_KuplungAppSettings_2eproto,
    file_level_service_descriptors_KuplungAppSettings_2eproto,
};
namespace KuplungApp {
// ===================================================================

class GUISettings::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GUISettings>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GUISettings, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return (((has_bits[0] & 0xffffffff) ^ 0xffffffff)
       | ((has_bits[1] & 0x000007ff) ^ 0x000007ff)) != 0;
  }
};

void GUISettings::clear_setting_outlinecolor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.setting_outlinecolor_ != nullptr) _impl_.setting_outlinecolor_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void GUISettings::clear_setting_uiambientlight() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.setting_uiambientlight_ != nullptr) _impl_.setting_uiambientlight_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void GUISettings::clear_solidlight_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.solidlight_direction_ != nullptr) _impl_.solidlight_direction_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void GUISettings::clear_solidlight_materialcolor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.solidlight_materialcolor_ != nullptr) _impl_.solidlight_materialcolor_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void GUISettings::clear_solidlight_ambient() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.solidlight_ambient_ != nullptr) _impl_.solidlight_ambient_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void GUISettings::clear_solidlight_diffuse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.solidlight_diffuse_ != nullptr) _impl_.solidlight_diffuse_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void GUISettings::clear_solidlight_specular() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.solidlight_specular_ != nullptr) _impl_.solidlight_specular_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
GUISettings::GUISettings(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:KuplungApp.GUISettings)
}
inline PROTOBUF_NDEBUG_INLINE GUISettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::KuplungApp::GUISettings& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        lights_{visibility, arena, from.lights_},
        heightmapimage_(arena, from.heightmapimage_) {}

GUISettings::GUISettings(
    ::google::protobuf::Arena* arena,
    const GUISettings& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GUISettings* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.setting_outlinecolor_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec4>(
                              arena, *from._impl_.setting_outlinecolor_)
                        : nullptr;
  _impl_.setting_uiambientlight_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(
                              arena, *from._impl_.setting_uiambientlight_)
                        : nullptr;
  _impl_.solidlight_direction_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(
                              arena, *from._impl_.solidlight_direction_)
                        : nullptr;
  _impl_.solidlight_materialcolor_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(
                              arena, *from._impl_.solidlight_materialcolor_)
                        : nullptr;
  _impl_.solidlight_ambient_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(
                              arena, *from._impl_.solidlight_ambient_)
                        : nullptr;
  _impl_.solidlight_diffuse_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(
                              arena, *from._impl_.solidlight_diffuse_)
                        : nullptr;
  _impl_.solidlight_specular_ = (cached_has_bits & 0x00000080u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(
                              arena, *from._impl_.solidlight_specular_)
                        : nullptr;
  _impl_.camera_ = (cached_has_bits & 0x00000100u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::CameraSettings>(
                              arena, *from._impl_.camera_)
                        : nullptr;
  _impl_.grid_ = (cached_has_bits & 0x00000200u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::GridSettings>(
                              arena, *from._impl_.grid_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, setting_fov_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, setting_fov_),
           offsetof(Impl_, setting_terrainheight_) -
               offsetof(Impl_, setting_fov_) +
               sizeof(Impl_::setting_terrainheight_));

  // @@protoc_insertion_point(copy_constructor:KuplungApp.GUISettings)
}
inline PROTOBUF_NDEBUG_INLINE GUISettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        lights_{visibility, arena},
        heightmapimage_(arena) {}

inline void GUISettings::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, setting_outlinecolor_),
           0,
           offsetof(Impl_, setting_terrainheight_) -
               offsetof(Impl_, setting_outlinecolor_) +
               sizeof(Impl_::setting_terrainheight_));
}
GUISettings::~GUISettings() {
  // @@protoc_insertion_point(destructor:KuplungApp.GUISettings)
  SharedDtor(*this);
}
inline void GUISettings::SharedDtor(MessageLite& self) {
  GUISettings& this_ = static_cast<GUISettings&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.heightmapimage_.Destroy();
  delete this_._impl_.setting_outlinecolor_;
  delete this_._impl_.setting_uiambientlight_;
  delete this_._impl_.solidlight_direction_;
  delete this_._impl_.solidlight_materialcolor_;
  delete this_._impl_.solidlight_ambient_;
  delete this_._impl_.solidlight_diffuse_;
  delete this_._impl_.solidlight_specular_;
  delete this_._impl_.camera_;
  delete this_._impl_.grid_;
  this_._impl_.~Impl_();
}

inline void* GUISettings::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GUISettings(arena);
}
constexpr auto GUISettings::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.lights_) +
          decltype(GUISettings::_impl_.lights_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(GUISettings), alignof(GUISettings), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GUISettings::PlacementNew_,
                                 sizeof(GUISettings),
                                 alignof(GUISettings));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GUISettings::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GUISettings_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        GUISettings::IsInitializedImpl,
        &GUISettings::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GUISettings>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GUISettings::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GUISettings>(), &GUISettings::ByteSizeLong,
            &GUISettings::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GUISettings, _impl_._cached_size_),
        false,
    },
    &GUISettings::kDescriptorMethods,
    &descriptor_table_KuplungAppSettings_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GUISettings::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 44, 10, 85, 7> GUISettings::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GUISettings, _impl_._has_bits_),
    0, // no _extensions_
    44, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    0,  // skipmap
    offsetof(decltype(_table_), field_entries),
    44,  // num_field_entries
    10,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::KuplungApp::GUISettings>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required float Setting_FOV = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 10, 0, PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_fov_)}},
    // required float Setting_OutlineThickness = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 11, 0, PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_outlinethickness_)}},
    // required float Setting_RatioWidth = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 12, 0, PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_ratiowidth_)}},
    // required float Setting_RatioHeight = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 13, 0, PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_ratioheight_)}},
    // required float Setting_PlaneClose = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 14, 0, PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_planeclose_)}},
    // required float Setting_PlaneFar = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 15, 0, PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_planefar_)}},
    // required int32 Setting_GridSize = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GUISettings, _impl_.setting_gridsize_), 16>(),
     {56, 16, 0, PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_gridsize_)}},
    // required int32 Setting_Skybox = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GUISettings, _impl_.setting_skybox_), 17>(),
     {64, 17, 0, PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_skybox_)}},
    // required .KuplungApp.Vec4 Setting_OutlineColor = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 1, 0, PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_outlinecolor_)}},
    // required .KuplungApp.Vec3 Setting_UIAmbientLight = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 2, 1, PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_uiambientlight_)}},
    // required bool Setting_FixedGridWorld = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GUISettings, _impl_.setting_fixedgridworld_), 18>(),
     {88, 18, 0, PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_fixedgridworld_)}},
    // required bool Setting_OutlineColorPickerOpen = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GUISettings, _impl_.setting_outlinecolorpickeropen_), 19>(),
     {96, 19, 0, PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_outlinecolorpickeropen_)}},
    // required bool Setting_ShowAxisHelpers = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GUISettings, _impl_.setting_showaxishelpers_), 20>(),
     {104, 20, 0, PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_showaxishelpers_)}},
    // required bool Settings_ShowZAxis = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GUISettings, _impl_.settings_showzaxis_), 21>(),
     {112, 21, 0, PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.settings_showzaxis_)}},
    // required bool Setting_DeferredTestMode = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GUISettings, _impl_.setting_deferredtestmode_), 26>(),
     {120, 26, 0, PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_deferredtestmode_)}},
    // required bool Setting_DeferredTestLights = 16;
    {::_pbi::TcParser::FastV8S2,
     {384, 27, 0, PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_deferredtestlights_)}},
    // required int32 Setting_LightingPass_DrawMode = 17;
    {::_pbi::TcParser::FastV32S2,
     {392, 22, 0, PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_lightingpass_drawmode_)}},
    // required int32 Setting_DeferredTestLightsNumber = 18;
    {::_pbi::TcParser::FastV32S2,
     {400, 23, 0, PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_deferredtestlightsnumber_)}},
    // required float Setting_DeferredAmbientStrength = 19;
    {::_pbi::TcParser::FastF32S2,
     {413, 24, 0, PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_deferredambientstrength_)}},
    // required int32 viewModelSkin = 20;
    {::_pbi::TcParser::FastV32S2,
     {416, 25, 0, PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.viewmodelskin_)}},
    // required .KuplungApp.Vec3 SolidLight_Direction = 21;
    {::_pbi::TcParser::FastMtS2,
     {426, 3, 2, PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.solidlight_direction_)}},
    // required .KuplungApp.Vec3 SolidLight_MaterialColor = 22;
    {::_pbi::TcParser::FastMtS2,
     {434, 4, 3, PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.solidlight_materialcolor_)}},
    // required .KuplungApp.Vec3 SolidLight_Ambient = 23;
    {::_pbi::TcParser::FastMtS2,
     {442, 5, 4, PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.solidlight_ambient_)}},
    // required .KuplungApp.Vec3 SolidLight_Diffuse = 24;
    {::_pbi::TcParser::FastMtS2,
     {450, 6, 5, PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.solidlight_diffuse_)}},
    // required .KuplungApp.Vec3 SolidLight_Specular = 25;
    {::_pbi::TcParser::FastMtS2,
     {458, 7, 6, PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.solidlight_specular_)}},
    // required float SolidLight_Ambient_Strength = 26;
    {::_pbi::TcParser::FastF32S2,
     {469, 30, 0, PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.solidlight_ambient_strength_)}},
    // required float SolidLight_Diffuse_Strength = 27;
    {::_pbi::TcParser::FastF32S2,
     {477, 31, 0, PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.solidlight_diffuse_strength_)}},
    // repeated .KuplungApp.LightObject lights = 44;
    {::_pbi::TcParser::FastMtR2,
     {738, 63, 9, PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.lights_)}},
    // required bool SolidLight_MaterialColor_ColorPicker = 29;
    {::_pbi::TcParser::FastV8S2,
     {488, 28, 0, PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.solidlight_materialcolor_colorpicker_)}},
    // required bool SolidLight_Ambient_ColorPicker = 30;
    {::_pbi::TcParser::FastV8S2,
     {496, 29, 0, PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.solidlight_ambient_colorpicker_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    33, 0, 1,
    61440, 32,
    65535, 65535
  }}, {{
    // required float Setting_FOV = 1;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_fov_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float Setting_OutlineThickness = 2;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_outlinethickness_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float Setting_RatioWidth = 3;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_ratiowidth_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float Setting_RatioHeight = 4;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_ratioheight_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float Setting_PlaneClose = 5;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_planeclose_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float Setting_PlaneFar = 6;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_planefar_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required int32 Setting_GridSize = 7;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_gridsize_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required int32 Setting_Skybox = 8;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_skybox_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required .KuplungApp.Vec4 Setting_OutlineColor = 9;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_outlinecolor_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.Vec3 Setting_UIAmbientLight = 10;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_uiambientlight_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required bool Setting_FixedGridWorld = 11;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_fixedgridworld_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required bool Setting_OutlineColorPickerOpen = 12;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_outlinecolorpickeropen_), _Internal::kHasBitsOffset + 19, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required bool Setting_ShowAxisHelpers = 13;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_showaxishelpers_), _Internal::kHasBitsOffset + 20, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required bool Settings_ShowZAxis = 14;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.settings_showzaxis_), _Internal::kHasBitsOffset + 21, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required bool Setting_DeferredTestMode = 15;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_deferredtestmode_), _Internal::kHasBitsOffset + 26, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required bool Setting_DeferredTestLights = 16;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_deferredtestlights_), _Internal::kHasBitsOffset + 27, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required int32 Setting_LightingPass_DrawMode = 17;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_lightingpass_drawmode_), _Internal::kHasBitsOffset + 22, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required int32 Setting_DeferredTestLightsNumber = 18;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_deferredtestlightsnumber_), _Internal::kHasBitsOffset + 23, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required float Setting_DeferredAmbientStrength = 19;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_deferredambientstrength_), _Internal::kHasBitsOffset + 24, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required int32 viewModelSkin = 20;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.viewmodelskin_), _Internal::kHasBitsOffset + 25, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required .KuplungApp.Vec3 SolidLight_Direction = 21;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.solidlight_direction_), _Internal::kHasBitsOffset + 3, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.Vec3 SolidLight_MaterialColor = 22;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.solidlight_materialcolor_), _Internal::kHasBitsOffset + 4, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.Vec3 SolidLight_Ambient = 23;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.solidlight_ambient_), _Internal::kHasBitsOffset + 5, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.Vec3 SolidLight_Diffuse = 24;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.solidlight_diffuse_), _Internal::kHasBitsOffset + 6, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.Vec3 SolidLight_Specular = 25;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.solidlight_specular_), _Internal::kHasBitsOffset + 7, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required float SolidLight_Ambient_Strength = 26;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.solidlight_ambient_strength_), _Internal::kHasBitsOffset + 30, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float SolidLight_Diffuse_Strength = 27;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.solidlight_diffuse_strength_), _Internal::kHasBitsOffset + 31, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float SolidLight_Specular_Strength = 28;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.solidlight_specular_strength_), _Internal::kHasBitsOffset + 32, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required bool SolidLight_MaterialColor_ColorPicker = 29;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.solidlight_materialcolor_colorpicker_), _Internal::kHasBitsOffset + 28, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required bool SolidLight_Ambient_ColorPicker = 30;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.solidlight_ambient_colorpicker_), _Internal::kHasBitsOffset + 29, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required bool SolidLight_Diffuse_ColorPicker = 31;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.solidlight_diffuse_colorpicker_), _Internal::kHasBitsOffset + 33, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required bool SolidLight_Specular_ColorPicker = 32;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.solidlight_specular_colorpicker_), _Internal::kHasBitsOffset + 34, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required bool Setting_ShowTerrain = 33;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_showterrain_), _Internal::kHasBitsOffset + 35, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required bool Setting_TerrainModel = 34;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_terrainmodel_), _Internal::kHasBitsOffset + 36, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required bool Setting_TerrainAnimateX = 35;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_terrainanimatex_), _Internal::kHasBitsOffset + 38, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required bool Setting_TerrainAnimateY = 36;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_terrainanimatey_), _Internal::kHasBitsOffset + 39, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required string heightmapImage = 37;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.heightmapimage_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required int32 Setting_TerrainWidth = 38;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_terrainwidth_), _Internal::kHasBitsOffset + 37, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required int32 Setting_TerrainHeight = 39;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_terrainheight_), _Internal::kHasBitsOffset + 42, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required bool Setting_ShowSpaceship = 40;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_showspaceship_), _Internal::kHasBitsOffset + 40, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required bool Setting_GenerateSpaceship = 41;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_generatespaceship_), _Internal::kHasBitsOffset + 41, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required .KuplungApp.CameraSettings camera = 42;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.camera_), _Internal::kHasBitsOffset + 8, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.GridSettings grid = 43;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.grid_), _Internal::kHasBitsOffset + 9, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .KuplungApp.LightObject lights = 44;
    {PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.lights_), -1, 9,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::KuplungApp::Vec4>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::Vec3>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::Vec3>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::Vec3>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::Vec3>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::Vec3>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::Vec3>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::CameraSettings>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::GridSettings>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::LightObject>()},
  }}, {{
    "\26\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\16\0\0\0\0\0\0\0\0\0\0"
    "KuplungApp.GUISettings"
    "heightmapImage"
  }},
};

PROTOBUF_NOINLINE void GUISettings::Clear() {
// @@protoc_insertion_point(message_clear_start:KuplungApp.GUISettings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.lights_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.heightmapimage_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.setting_outlinecolor_ != nullptr);
      _impl_.setting_outlinecolor_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.setting_uiambientlight_ != nullptr);
      _impl_.setting_uiambientlight_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.solidlight_direction_ != nullptr);
      _impl_.solidlight_direction_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.solidlight_materialcolor_ != nullptr);
      _impl_.solidlight_materialcolor_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.solidlight_ambient_ != nullptr);
      _impl_.solidlight_ambient_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.solidlight_diffuse_ != nullptr);
      _impl_.solidlight_diffuse_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.solidlight_specular_ != nullptr);
      _impl_.solidlight_specular_->Clear();
    }
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(_impl_.camera_ != nullptr);
      _impl_.camera_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(_impl_.grid_ != nullptr);
      _impl_.grid_->Clear();
    }
  }
  if (cached_has_bits & 0x0000fc00u) {
    ::memset(&_impl_.setting_fov_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.setting_planefar_) -
        reinterpret_cast<char*>(&_impl_.setting_fov_)) + sizeof(_impl_.setting_planefar_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&_impl_.setting_gridsize_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.setting_deferredtestlightsnumber_) -
        reinterpret_cast<char*>(&_impl_.setting_gridsize_)) + sizeof(_impl_.setting_deferredtestlightsnumber_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&_impl_.setting_deferredambientstrength_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.solidlight_diffuse_strength_) -
        reinterpret_cast<char*>(&_impl_.setting_deferredambientstrength_)) + sizeof(_impl_.solidlight_diffuse_strength_));
  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.solidlight_specular_strength_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.setting_terrainanimatey_) -
        reinterpret_cast<char*>(&_impl_.solidlight_specular_strength_)) + sizeof(_impl_.setting_terrainanimatey_));
  }
  if (cached_has_bits & 0x00000700u) {
    ::memset(&_impl_.setting_showspaceship_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.setting_terrainheight_) -
        reinterpret_cast<char*>(&_impl_.setting_showspaceship_)) + sizeof(_impl_.setting_terrainheight_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GUISettings::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GUISettings& this_ = static_cast<const GUISettings&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GUISettings::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GUISettings& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:KuplungApp.GUISettings)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // required float Setting_FOV = 1;
          if (cached_has_bits & 0x00000400u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_setting_fov(), target);
          }

          // required float Setting_OutlineThickness = 2;
          if (cached_has_bits & 0x00000800u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_setting_outlinethickness(), target);
          }

          // required float Setting_RatioWidth = 3;
          if (cached_has_bits & 0x00001000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_setting_ratiowidth(), target);
          }

          // required float Setting_RatioHeight = 4;
          if (cached_has_bits & 0x00002000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_setting_ratioheight(), target);
          }

          // required float Setting_PlaneClose = 5;
          if (cached_has_bits & 0x00004000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_setting_planeclose(), target);
          }

          // required float Setting_PlaneFar = 6;
          if (cached_has_bits & 0x00008000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                6, this_._internal_setting_planefar(), target);
          }

          // required int32 Setting_GridSize = 7;
          if (cached_has_bits & 0x00010000u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<7>(
                    stream, this_._internal_setting_gridsize(), target);
          }

          // required int32 Setting_Skybox = 8;
          if (cached_has_bits & 0x00020000u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<8>(
                    stream, this_._internal_setting_skybox(), target);
          }

          // required .KuplungApp.Vec4 Setting_OutlineColor = 9;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.setting_outlinecolor_, this_._impl_.setting_outlinecolor_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.Vec3 Setting_UIAmbientLight = 10;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.setting_uiambientlight_, this_._impl_.setting_uiambientlight_->GetCachedSize(), target,
                stream);
          }

          // required bool Setting_FixedGridWorld = 11;
          if (cached_has_bits & 0x00040000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                11, this_._internal_setting_fixedgridworld(), target);
          }

          // required bool Setting_OutlineColorPickerOpen = 12;
          if (cached_has_bits & 0x00080000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                12, this_._internal_setting_outlinecolorpickeropen(), target);
          }

          // required bool Setting_ShowAxisHelpers = 13;
          if (cached_has_bits & 0x00100000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                13, this_._internal_setting_showaxishelpers(), target);
          }

          // required bool Settings_ShowZAxis = 14;
          if (cached_has_bits & 0x00200000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                14, this_._internal_settings_showzaxis(), target);
          }

          // required bool Setting_DeferredTestMode = 15;
          if (cached_has_bits & 0x04000000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                15, this_._internal_setting_deferredtestmode(), target);
          }

          // required bool Setting_DeferredTestLights = 16;
          if (cached_has_bits & 0x08000000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                16, this_._internal_setting_deferredtestlights(), target);
          }

          // required int32 Setting_LightingPass_DrawMode = 17;
          if (cached_has_bits & 0x00400000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                17, this_._internal_setting_lightingpass_drawmode(), target);
          }

          // required int32 Setting_DeferredTestLightsNumber = 18;
          if (cached_has_bits & 0x00800000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                18, this_._internal_setting_deferredtestlightsnumber(), target);
          }

          // required float Setting_DeferredAmbientStrength = 19;
          if (cached_has_bits & 0x01000000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                19, this_._internal_setting_deferredambientstrength(), target);
          }

          // required int32 viewModelSkin = 20;
          if (cached_has_bits & 0x02000000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                20, this_._internal_viewmodelskin(), target);
          }

          // required .KuplungApp.Vec3 SolidLight_Direction = 21;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                21, *this_._impl_.solidlight_direction_, this_._impl_.solidlight_direction_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.Vec3 SolidLight_MaterialColor = 22;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                22, *this_._impl_.solidlight_materialcolor_, this_._impl_.solidlight_materialcolor_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.Vec3 SolidLight_Ambient = 23;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                23, *this_._impl_.solidlight_ambient_, this_._impl_.solidlight_ambient_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.Vec3 SolidLight_Diffuse = 24;
          if (cached_has_bits & 0x00000040u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                24, *this_._impl_.solidlight_diffuse_, this_._impl_.solidlight_diffuse_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.Vec3 SolidLight_Specular = 25;
          if (cached_has_bits & 0x00000080u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                25, *this_._impl_.solidlight_specular_, this_._impl_.solidlight_specular_->GetCachedSize(), target,
                stream);
          }

          // required float SolidLight_Ambient_Strength = 26;
          if (cached_has_bits & 0x40000000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                26, this_._internal_solidlight_ambient_strength(), target);
          }

          // required float SolidLight_Diffuse_Strength = 27;
          if (cached_has_bits & 0x80000000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                27, this_._internal_solidlight_diffuse_strength(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[1];
          // required float SolidLight_Specular_Strength = 28;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                28, this_._internal_solidlight_specular_strength(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // required bool SolidLight_MaterialColor_ColorPicker = 29;
          if (cached_has_bits & 0x10000000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                29, this_._internal_solidlight_materialcolor_colorpicker(), target);
          }

          // required bool SolidLight_Ambient_ColorPicker = 30;
          if (cached_has_bits & 0x20000000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                30, this_._internal_solidlight_ambient_colorpicker(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[1];
          // required bool SolidLight_Diffuse_ColorPicker = 31;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                31, this_._internal_solidlight_diffuse_colorpicker(), target);
          }

          // required bool SolidLight_Specular_ColorPicker = 32;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                32, this_._internal_solidlight_specular_colorpicker(), target);
          }

          // required bool Setting_ShowTerrain = 33;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                33, this_._internal_setting_showterrain(), target);
          }

          // required bool Setting_TerrainModel = 34;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                34, this_._internal_setting_terrainmodel(), target);
          }

          // required bool Setting_TerrainAnimateX = 35;
          if (cached_has_bits & 0x00000040u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                35, this_._internal_setting_terrainanimatex(), target);
          }

          // required bool Setting_TerrainAnimateY = 36;
          if (cached_has_bits & 0x00000080u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                36, this_._internal_setting_terrainanimatey(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // required string heightmapImage = 37;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_heightmapimage();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "KuplungApp.GUISettings.heightmapImage");
            target = stream->WriteStringMaybeAliased(37, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[1];
          // required int32 Setting_TerrainWidth = 38;
          if (cached_has_bits & 0x00000020u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                38, this_._internal_setting_terrainwidth(), target);
          }

          // required int32 Setting_TerrainHeight = 39;
          if (cached_has_bits & 0x00000400u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                39, this_._internal_setting_terrainheight(), target);
          }

          // required bool Setting_ShowSpaceship = 40;
          if (cached_has_bits & 0x00000100u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                40, this_._internal_setting_showspaceship(), target);
          }

          // required bool Setting_GenerateSpaceship = 41;
          if (cached_has_bits & 0x00000200u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                41, this_._internal_setting_generatespaceship(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // required .KuplungApp.CameraSettings camera = 42;
          if (cached_has_bits & 0x00000100u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                42, *this_._impl_.camera_, this_._impl_.camera_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.GridSettings grid = 43;
          if (cached_has_bits & 0x00000200u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                43, *this_._impl_.grid_, this_._impl_.grid_->GetCachedSize(), target,
                stream);
          }

          // repeated .KuplungApp.LightObject lights = 44;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_lights_size());
               i < n; i++) {
            const auto& repfield = this_._internal_lights().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    44, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:KuplungApp.GUISettings)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GUISettings::ByteSizeLong(const MessageLite& base) {
          const GUISettings& this_ = static_cast<const GUISettings&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GUISettings::ByteSizeLong() const {
          const GUISettings& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:KuplungApp.GUISettings)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .KuplungApp.LightObject lights = 44;
            {
              total_size += 2UL * this_._internal_lights_size();
              for (const auto& msg : this_._internal_lights()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // required string heightmapImage = 37;
            if (cached_has_bits & 0x00000001u) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_heightmapimage());
            }
            // required .KuplungApp.Vec4 Setting_OutlineColor = 9;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.setting_outlinecolor_);
            }
            // required .KuplungApp.Vec3 Setting_UIAmbientLight = 10;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.setting_uiambientlight_);
            }
            // required .KuplungApp.Vec3 SolidLight_Direction = 21;
            if (cached_has_bits & 0x00000008u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.solidlight_direction_);
            }
            // required .KuplungApp.Vec3 SolidLight_MaterialColor = 22;
            if (cached_has_bits & 0x00000010u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.solidlight_materialcolor_);
            }
            // required .KuplungApp.Vec3 SolidLight_Ambient = 23;
            if (cached_has_bits & 0x00000020u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.solidlight_ambient_);
            }
            // required .KuplungApp.Vec3 SolidLight_Diffuse = 24;
            if (cached_has_bits & 0x00000040u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.solidlight_diffuse_);
            }
            // required .KuplungApp.Vec3 SolidLight_Specular = 25;
            if (cached_has_bits & 0x00000080u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.solidlight_specular_);
            }
          }
          if (cached_has_bits & 0x0000ff00u) {
            // required .KuplungApp.CameraSettings camera = 42;
            if (cached_has_bits & 0x00000100u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.camera_);
            }
            // required .KuplungApp.GridSettings grid = 43;
            if (cached_has_bits & 0x00000200u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.grid_);
            }
            // required float Setting_FOV = 1;
            if (cached_has_bits & 0x00000400u) {
              total_size += 5;
            }
            // required float Setting_OutlineThickness = 2;
            if (cached_has_bits & 0x00000800u) {
              total_size += 5;
            }
            // required float Setting_RatioWidth = 3;
            if (cached_has_bits & 0x00001000u) {
              total_size += 5;
            }
            // required float Setting_RatioHeight = 4;
            if (cached_has_bits & 0x00002000u) {
              total_size += 5;
            }
            // required float Setting_PlaneClose = 5;
            if (cached_has_bits & 0x00004000u) {
              total_size += 5;
            }
            // required float Setting_PlaneFar = 6;
            if (cached_has_bits & 0x00008000u) {
              total_size += 5;
            }
          }
          if (cached_has_bits & 0x00ff0000u) {
            // required int32 Setting_GridSize = 7;
            if (cached_has_bits & 0x00010000u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_setting_gridsize());
            }
            // required int32 Setting_Skybox = 8;
            if (cached_has_bits & 0x00020000u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_setting_skybox());
            }
            // required bool Setting_FixedGridWorld = 11;
            if (cached_has_bits & 0x00040000u) {
              total_size += 2;
            }
            // required bool Setting_OutlineColorPickerOpen = 12;
            if (cached_has_bits & 0x00080000u) {
              total_size += 2;
            }
            // required bool Setting_ShowAxisHelpers = 13;
            if (cached_has_bits & 0x00100000u) {
              total_size += 2;
            }
            // required bool Settings_ShowZAxis = 14;
            if (cached_has_bits & 0x00200000u) {
              total_size += 2;
            }
            // required int32 Setting_LightingPass_DrawMode = 17;
            if (cached_has_bits & 0x00400000u) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_setting_lightingpass_drawmode());
            }
            // required int32 Setting_DeferredTestLightsNumber = 18;
            if (cached_has_bits & 0x00800000u) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_setting_deferredtestlightsnumber());
            }
          }
          if (cached_has_bits & 0xff000000u) {
            // required float Setting_DeferredAmbientStrength = 19;
            if (cached_has_bits & 0x01000000u) {
              total_size += 6;
            }
            // required int32 viewModelSkin = 20;
            if (cached_has_bits & 0x02000000u) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_viewmodelskin());
            }
            // required bool Setting_DeferredTestMode = 15;
            if (cached_has_bits & 0x04000000u) {
              total_size += 2;
            }
            // required bool Setting_DeferredTestLights = 16;
            if (cached_has_bits & 0x08000000u) {
              total_size += 3;
            }
            // required bool SolidLight_MaterialColor_ColorPicker = 29;
            if (cached_has_bits & 0x10000000u) {
              total_size += 3;
            }
            // required bool SolidLight_Ambient_ColorPicker = 30;
            if (cached_has_bits & 0x20000000u) {
              total_size += 3;
            }
            // required float SolidLight_Ambient_Strength = 26;
            if (cached_has_bits & 0x40000000u) {
              total_size += 6;
            }
            // required float SolidLight_Diffuse_Strength = 27;
            if (cached_has_bits & 0x80000000u) {
              total_size += 6;
            }
          }
          cached_has_bits = this_._impl_._has_bits_[1];
          if (cached_has_bits & 0x000000ffu) {
            // required float SolidLight_Specular_Strength = 28;
            if (cached_has_bits & 0x00000001u) {
              total_size += 6;
            }
            // required bool SolidLight_Diffuse_ColorPicker = 31;
            if (cached_has_bits & 0x00000002u) {
              total_size += 3;
            }
            // required bool SolidLight_Specular_ColorPicker = 32;
            if (cached_has_bits & 0x00000004u) {
              total_size += 3;
            }
            // required bool Setting_ShowTerrain = 33;
            if (cached_has_bits & 0x00000008u) {
              total_size += 3;
            }
            // required bool Setting_TerrainModel = 34;
            if (cached_has_bits & 0x00000010u) {
              total_size += 3;
            }
            // required int32 Setting_TerrainWidth = 38;
            if (cached_has_bits & 0x00000020u) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_setting_terrainwidth());
            }
            // required bool Setting_TerrainAnimateX = 35;
            if (cached_has_bits & 0x00000040u) {
              total_size += 3;
            }
            // required bool Setting_TerrainAnimateY = 36;
            if (cached_has_bits & 0x00000080u) {
              total_size += 3;
            }
          }
          if (cached_has_bits & 0x00000700u) {
            // required bool Setting_ShowSpaceship = 40;
            if (cached_has_bits & 0x00000100u) {
              total_size += 3;
            }
            // required bool Setting_GenerateSpaceship = 41;
            if (cached_has_bits & 0x00000200u) {
              total_size += 3;
            }
            // required int32 Setting_TerrainHeight = 39;
            if (cached_has_bits & 0x00000400u) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_setting_terrainheight());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GUISettings::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GUISettings*>(&to_msg);
  auto& from = static_cast<const GUISettings&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:KuplungApp.GUISettings)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_lights()->MergeFrom(
      from._internal_lights());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_heightmapimage(from._internal_heightmapimage());
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.setting_outlinecolor_ != nullptr);
      if (_this->_impl_.setting_outlinecolor_ == nullptr) {
        _this->_impl_.setting_outlinecolor_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec4>(arena, *from._impl_.setting_outlinecolor_);
      } else {
        _this->_impl_.setting_outlinecolor_->MergeFrom(*from._impl_.setting_outlinecolor_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.setting_uiambientlight_ != nullptr);
      if (_this->_impl_.setting_uiambientlight_ == nullptr) {
        _this->_impl_.setting_uiambientlight_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(arena, *from._impl_.setting_uiambientlight_);
      } else {
        _this->_impl_.setting_uiambientlight_->MergeFrom(*from._impl_.setting_uiambientlight_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.solidlight_direction_ != nullptr);
      if (_this->_impl_.solidlight_direction_ == nullptr) {
        _this->_impl_.solidlight_direction_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(arena, *from._impl_.solidlight_direction_);
      } else {
        _this->_impl_.solidlight_direction_->MergeFrom(*from._impl_.solidlight_direction_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.solidlight_materialcolor_ != nullptr);
      if (_this->_impl_.solidlight_materialcolor_ == nullptr) {
        _this->_impl_.solidlight_materialcolor_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(arena, *from._impl_.solidlight_materialcolor_);
      } else {
        _this->_impl_.solidlight_materialcolor_->MergeFrom(*from._impl_.solidlight_materialcolor_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.solidlight_ambient_ != nullptr);
      if (_this->_impl_.solidlight_ambient_ == nullptr) {
        _this->_impl_.solidlight_ambient_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(arena, *from._impl_.solidlight_ambient_);
      } else {
        _this->_impl_.solidlight_ambient_->MergeFrom(*from._impl_.solidlight_ambient_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.solidlight_diffuse_ != nullptr);
      if (_this->_impl_.solidlight_diffuse_ == nullptr) {
        _this->_impl_.solidlight_diffuse_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(arena, *from._impl_.solidlight_diffuse_);
      } else {
        _this->_impl_.solidlight_diffuse_->MergeFrom(*from._impl_.solidlight_diffuse_);
      }
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(from._impl_.solidlight_specular_ != nullptr);
      if (_this->_impl_.solidlight_specular_ == nullptr) {
        _this->_impl_.solidlight_specular_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(arena, *from._impl_.solidlight_specular_);
      } else {
        _this->_impl_.solidlight_specular_->MergeFrom(*from._impl_.solidlight_specular_);
      }
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(from._impl_.camera_ != nullptr);
      if (_this->_impl_.camera_ == nullptr) {
        _this->_impl_.camera_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::CameraSettings>(arena, *from._impl_.camera_);
      } else {
        _this->_impl_.camera_->MergeFrom(*from._impl_.camera_);
      }
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(from._impl_.grid_ != nullptr);
      if (_this->_impl_.grid_ == nullptr) {
        _this->_impl_.grid_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::GridSettings>(arena, *from._impl_.grid_);
      } else {
        _this->_impl_.grid_->MergeFrom(*from._impl_.grid_);
      }
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.setting_fov_ = from._impl_.setting_fov_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.setting_outlinethickness_ = from._impl_.setting_outlinethickness_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.setting_ratiowidth_ = from._impl_.setting_ratiowidth_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.setting_ratioheight_ = from._impl_.setting_ratioheight_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.setting_planeclose_ = from._impl_.setting_planeclose_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.setting_planefar_ = from._impl_.setting_planefar_;
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.setting_gridsize_ = from._impl_.setting_gridsize_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.setting_skybox_ = from._impl_.setting_skybox_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.setting_fixedgridworld_ = from._impl_.setting_fixedgridworld_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.setting_outlinecolorpickeropen_ = from._impl_.setting_outlinecolorpickeropen_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.setting_showaxishelpers_ = from._impl_.setting_showaxishelpers_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.settings_showzaxis_ = from._impl_.settings_showzaxis_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.setting_lightingpass_drawmode_ = from._impl_.setting_lightingpass_drawmode_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.setting_deferredtestlightsnumber_ = from._impl_.setting_deferredtestlightsnumber_;
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.setting_deferredambientstrength_ = from._impl_.setting_deferredambientstrength_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.viewmodelskin_ = from._impl_.viewmodelskin_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.setting_deferredtestmode_ = from._impl_.setting_deferredtestmode_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.setting_deferredtestlights_ = from._impl_.setting_deferredtestlights_;
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_impl_.solidlight_materialcolor_colorpicker_ = from._impl_.solidlight_materialcolor_colorpicker_;
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_impl_.solidlight_ambient_colorpicker_ = from._impl_.solidlight_ambient_colorpicker_;
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_impl_.solidlight_ambient_strength_ = from._impl_.solidlight_ambient_strength_;
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_impl_.solidlight_diffuse_strength_ = from._impl_.solidlight_diffuse_strength_;
    }
  }
  cached_has_bits = from._impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.solidlight_specular_strength_ = from._impl_.solidlight_specular_strength_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.solidlight_diffuse_colorpicker_ = from._impl_.solidlight_diffuse_colorpicker_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.solidlight_specular_colorpicker_ = from._impl_.solidlight_specular_colorpicker_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.setting_showterrain_ = from._impl_.setting_showterrain_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.setting_terrainmodel_ = from._impl_.setting_terrainmodel_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.setting_terrainwidth_ = from._impl_.setting_terrainwidth_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.setting_terrainanimatex_ = from._impl_.setting_terrainanimatex_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.setting_terrainanimatey_ = from._impl_.setting_terrainanimatey_;
    }
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.setting_showspaceship_ = from._impl_.setting_showspaceship_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.setting_generatespaceship_ = from._impl_.setting_generatespaceship_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.setting_terrainheight_ = from._impl_.setting_terrainheight_;
    }
  }
  _this->_impl_._has_bits_.Or(from._impl_._has_bits_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GUISettings::CopyFrom(const GUISettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KuplungApp.GUISettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GUISettings::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const GUISettings&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this_._internal_lights()))
    return false;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._impl_.setting_outlinecolor_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._impl_.setting_uiambientlight_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!this_._impl_.solidlight_direction_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (!this_._impl_.solidlight_materialcolor_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (!this_._impl_.solidlight_ambient_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (!this_._impl_.solidlight_diffuse_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000080u) != 0) {
    if (!this_._impl_.solidlight_specular_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000100u) != 0) {
    if (!this_._impl_.camera_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000200u) != 0) {
    if (!this_._impl_.grid_->IsInitialized()) return false;
  }
  return true;
}

void GUISettings::InternalSwap(GUISettings* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_._has_bits_[1], other->_impl_._has_bits_[1]);
  _impl_.lights_.InternalSwap(&other->_impl_.lights_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.heightmapimage_, &other->_impl_.heightmapimage_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_terrainheight_)
      + sizeof(GUISettings::_impl_.setting_terrainheight_)
      - PROTOBUF_FIELD_OFFSET(GUISettings, _impl_.setting_outlinecolor_)>(
          reinterpret_cast<char*>(&_impl_.setting_outlinecolor_),
          reinterpret_cast<char*>(&other->_impl_.setting_outlinecolor_));
}

::google::protobuf::Metadata GUISettings::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CameraSettings::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CameraSettings>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CameraSettings, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00001fff) ^ 0x00001fff) != 0;
  }
};

void CameraSettings::clear_cameraposition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cameraposition_ != nullptr) _impl_.cameraposition_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CameraSettings::clear_view_eye() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.view_eye_ != nullptr) _impl_.view_eye_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void CameraSettings::clear_view_center() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.view_center_ != nullptr) _impl_.view_center_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void CameraSettings::clear_view_up() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.view_up_ != nullptr) _impl_.view_up_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void CameraSettings::clear_positionx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.positionx_ != nullptr) _impl_.positionx_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void CameraSettings::clear_positiony() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.positiony_ != nullptr) _impl_.positiony_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void CameraSettings::clear_positionz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.positionz_ != nullptr) _impl_.positionz_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void CameraSettings::clear_rotatex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatex_ != nullptr) _impl_.rotatex_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void CameraSettings::clear_rotatey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatey_ != nullptr) _impl_.rotatey_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
void CameraSettings::clear_rotatez() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatez_ != nullptr) _impl_.rotatez_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
void CameraSettings::clear_rotatecenterx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatecenterx_ != nullptr) _impl_.rotatecenterx_->Clear();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
void CameraSettings::clear_rotatecentery() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatecentery_ != nullptr) _impl_.rotatecentery_->Clear();
  _impl_._has_bits_[0] &= ~0x00000800u;
}
void CameraSettings::clear_rotatecenterz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatecenterz_ != nullptr) _impl_.rotatecenterz_->Clear();
  _impl_._has_bits_[0] &= ~0x00001000u;
}
CameraSettings::CameraSettings(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:KuplungApp.CameraSettings)
}
inline PROTOBUF_NDEBUG_INLINE CameraSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::KuplungApp::CameraSettings& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CameraSettings::CameraSettings(
    ::google::protobuf::Arena* arena,
    const CameraSettings& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CameraSettings* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.cameraposition_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(
                              arena, *from._impl_.cameraposition_)
                        : nullptr;
  _impl_.view_eye_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(
                              arena, *from._impl_.view_eye_)
                        : nullptr;
  _impl_.view_center_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(
                              arena, *from._impl_.view_center_)
                        : nullptr;
  _impl_.view_up_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(
                              arena, *from._impl_.view_up_)
                        : nullptr;
  _impl_.positionx_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.positionx_)
                        : nullptr;
  _impl_.positiony_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.positiony_)
                        : nullptr;
  _impl_.positionz_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.positionz_)
                        : nullptr;
  _impl_.rotatex_ = (cached_has_bits & 0x00000080u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.rotatex_)
                        : nullptr;
  _impl_.rotatey_ = (cached_has_bits & 0x00000100u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.rotatey_)
                        : nullptr;
  _impl_.rotatez_ = (cached_has_bits & 0x00000200u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.rotatez_)
                        : nullptr;
  _impl_.rotatecenterx_ = (cached_has_bits & 0x00000400u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.rotatecenterx_)
                        : nullptr;
  _impl_.rotatecentery_ = (cached_has_bits & 0x00000800u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.rotatecentery_)
                        : nullptr;
  _impl_.rotatecenterz_ = (cached_has_bits & 0x00001000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.rotatecenterz_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:KuplungApp.CameraSettings)
}
inline PROTOBUF_NDEBUG_INLINE CameraSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CameraSettings::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cameraposition_),
           0,
           offsetof(Impl_, rotatecenterz_) -
               offsetof(Impl_, cameraposition_) +
               sizeof(Impl_::rotatecenterz_));
}
CameraSettings::~CameraSettings() {
  // @@protoc_insertion_point(destructor:KuplungApp.CameraSettings)
  SharedDtor(*this);
}
inline void CameraSettings::SharedDtor(MessageLite& self) {
  CameraSettings& this_ = static_cast<CameraSettings&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.cameraposition_;
  delete this_._impl_.view_eye_;
  delete this_._impl_.view_center_;
  delete this_._impl_.view_up_;
  delete this_._impl_.positionx_;
  delete this_._impl_.positiony_;
  delete this_._impl_.positionz_;
  delete this_._impl_.rotatex_;
  delete this_._impl_.rotatey_;
  delete this_._impl_.rotatez_;
  delete this_._impl_.rotatecenterx_;
  delete this_._impl_.rotatecentery_;
  delete this_._impl_.rotatecenterz_;
  this_._impl_.~Impl_();
}

inline void* CameraSettings::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CameraSettings(arena);
}
constexpr auto CameraSettings::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CameraSettings),
                                            alignof(CameraSettings));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CameraSettings::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CameraSettings_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        CameraSettings::IsInitializedImpl,
        &CameraSettings::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CameraSettings>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CameraSettings::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CameraSettings>(), &CameraSettings::ByteSizeLong,
            &CameraSettings::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CameraSettings, _impl_._cached_size_),
        false,
    },
    &CameraSettings::kDescriptorMethods,
    &descriptor_table_KuplungAppSettings_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CameraSettings::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 13, 0, 2> CameraSettings::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CameraSettings, _impl_._has_bits_),
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    13,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::KuplungApp::CameraSettings>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required .KuplungApp.Vec3 cameraPosition = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CameraSettings, _impl_.cameraposition_)}},
    // required .KuplungApp.Vec3 View_Eye = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CameraSettings, _impl_.view_eye_)}},
    // required .KuplungApp.Vec3 View_Center = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(CameraSettings, _impl_.view_center_)}},
    // required .KuplungApp.Vec3 View_Up = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(CameraSettings, _impl_.view_up_)}},
    // required .KuplungApp.ObjectCoordinate positionX = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 4, PROTOBUF_FIELD_OFFSET(CameraSettings, _impl_.positionx_)}},
    // required .KuplungApp.ObjectCoordinate positionY = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 5, 5, PROTOBUF_FIELD_OFFSET(CameraSettings, _impl_.positiony_)}},
    // required .KuplungApp.ObjectCoordinate positionZ = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 6, 6, PROTOBUF_FIELD_OFFSET(CameraSettings, _impl_.positionz_)}},
    // required .KuplungApp.ObjectCoordinate rotateX = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 7, 7, PROTOBUF_FIELD_OFFSET(CameraSettings, _impl_.rotatex_)}},
    // required .KuplungApp.ObjectCoordinate rotateY = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 8, 8, PROTOBUF_FIELD_OFFSET(CameraSettings, _impl_.rotatey_)}},
    // required .KuplungApp.ObjectCoordinate rotateZ = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 9, 9, PROTOBUF_FIELD_OFFSET(CameraSettings, _impl_.rotatez_)}},
    // required .KuplungApp.ObjectCoordinate rotateCenterX = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 10, 10, PROTOBUF_FIELD_OFFSET(CameraSettings, _impl_.rotatecenterx_)}},
    // required .KuplungApp.ObjectCoordinate rotateCenterY = 12;
    {::_pbi::TcParser::FastMtS1,
     {98, 11, 11, PROTOBUF_FIELD_OFFSET(CameraSettings, _impl_.rotatecentery_)}},
    // required .KuplungApp.ObjectCoordinate rotateCenterZ = 13;
    {::_pbi::TcParser::FastMtS1,
     {106, 12, 12, PROTOBUF_FIELD_OFFSET(CameraSettings, _impl_.rotatecenterz_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required .KuplungApp.Vec3 cameraPosition = 1;
    {PROTOBUF_FIELD_OFFSET(CameraSettings, _impl_.cameraposition_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.Vec3 View_Eye = 2;
    {PROTOBUF_FIELD_OFFSET(CameraSettings, _impl_.view_eye_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.Vec3 View_Center = 3;
    {PROTOBUF_FIELD_OFFSET(CameraSettings, _impl_.view_center_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.Vec3 View_Up = 4;
    {PROTOBUF_FIELD_OFFSET(CameraSettings, _impl_.view_up_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate positionX = 5;
    {PROTOBUF_FIELD_OFFSET(CameraSettings, _impl_.positionx_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate positionY = 6;
    {PROTOBUF_FIELD_OFFSET(CameraSettings, _impl_.positiony_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate positionZ = 7;
    {PROTOBUF_FIELD_OFFSET(CameraSettings, _impl_.positionz_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate rotateX = 8;
    {PROTOBUF_FIELD_OFFSET(CameraSettings, _impl_.rotatex_), _Internal::kHasBitsOffset + 7, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate rotateY = 9;
    {PROTOBUF_FIELD_OFFSET(CameraSettings, _impl_.rotatey_), _Internal::kHasBitsOffset + 8, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate rotateZ = 10;
    {PROTOBUF_FIELD_OFFSET(CameraSettings, _impl_.rotatez_), _Internal::kHasBitsOffset + 9, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate rotateCenterX = 11;
    {PROTOBUF_FIELD_OFFSET(CameraSettings, _impl_.rotatecenterx_), _Internal::kHasBitsOffset + 10, 10,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate rotateCenterY = 12;
    {PROTOBUF_FIELD_OFFSET(CameraSettings, _impl_.rotatecentery_), _Internal::kHasBitsOffset + 11, 11,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate rotateCenterZ = 13;
    {PROTOBUF_FIELD_OFFSET(CameraSettings, _impl_.rotatecenterz_), _Internal::kHasBitsOffset + 12, 12,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::KuplungApp::Vec3>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::Vec3>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::Vec3>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::Vec3>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CameraSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:KuplungApp.CameraSettings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.cameraposition_ != nullptr);
      _impl_.cameraposition_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.view_eye_ != nullptr);
      _impl_.view_eye_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.view_center_ != nullptr);
      _impl_.view_center_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.view_up_ != nullptr);
      _impl_.view_up_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.positionx_ != nullptr);
      _impl_.positionx_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.positiony_ != nullptr);
      _impl_.positiony_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.positionz_ != nullptr);
      _impl_.positionz_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.rotatex_ != nullptr);
      _impl_.rotatex_->Clear();
    }
  }
  if (cached_has_bits & 0x00001f00u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(_impl_.rotatey_ != nullptr);
      _impl_.rotatey_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(_impl_.rotatez_ != nullptr);
      _impl_.rotatez_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(_impl_.rotatecenterx_ != nullptr);
      _impl_.rotatecenterx_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      ABSL_DCHECK(_impl_.rotatecentery_ != nullptr);
      _impl_.rotatecentery_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      ABSL_DCHECK(_impl_.rotatecenterz_ != nullptr);
      _impl_.rotatecenterz_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CameraSettings::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CameraSettings& this_ = static_cast<const CameraSettings&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CameraSettings::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CameraSettings& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:KuplungApp.CameraSettings)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // required .KuplungApp.Vec3 cameraPosition = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.cameraposition_, this_._impl_.cameraposition_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.Vec3 View_Eye = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.view_eye_, this_._impl_.view_eye_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.Vec3 View_Center = 3;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.view_center_, this_._impl_.view_center_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.Vec3 View_Up = 4;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.view_up_, this_._impl_.view_up_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate positionX = 5;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.positionx_, this_._impl_.positionx_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate positionY = 6;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.positiony_, this_._impl_.positiony_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate positionZ = 7;
          if (cached_has_bits & 0x00000040u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.positionz_, this_._impl_.positionz_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate rotateX = 8;
          if (cached_has_bits & 0x00000080u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.rotatex_, this_._impl_.rotatex_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate rotateY = 9;
          if (cached_has_bits & 0x00000100u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.rotatey_, this_._impl_.rotatey_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate rotateZ = 10;
          if (cached_has_bits & 0x00000200u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.rotatez_, this_._impl_.rotatez_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate rotateCenterX = 11;
          if (cached_has_bits & 0x00000400u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                11, *this_._impl_.rotatecenterx_, this_._impl_.rotatecenterx_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate rotateCenterY = 12;
          if (cached_has_bits & 0x00000800u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                12, *this_._impl_.rotatecentery_, this_._impl_.rotatecentery_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate rotateCenterZ = 13;
          if (cached_has_bits & 0x00001000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                13, *this_._impl_.rotatecenterz_, this_._impl_.rotatecenterz_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:KuplungApp.CameraSettings)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CameraSettings::ByteSizeLong(const MessageLite& base) {
          const CameraSettings& this_ = static_cast<const CameraSettings&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CameraSettings::ByteSizeLong() const {
          const CameraSettings& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:KuplungApp.CameraSettings)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // required .KuplungApp.Vec3 cameraPosition = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cameraposition_);
            }
            // required .KuplungApp.Vec3 View_Eye = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.view_eye_);
            }
            // required .KuplungApp.Vec3 View_Center = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.view_center_);
            }
            // required .KuplungApp.Vec3 View_Up = 4;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.view_up_);
            }
            // required .KuplungApp.ObjectCoordinate positionX = 5;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.positionx_);
            }
            // required .KuplungApp.ObjectCoordinate positionY = 6;
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.positiony_);
            }
            // required .KuplungApp.ObjectCoordinate positionZ = 7;
            if (cached_has_bits & 0x00000040u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.positionz_);
            }
            // required .KuplungApp.ObjectCoordinate rotateX = 8;
            if (cached_has_bits & 0x00000080u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rotatex_);
            }
          }
          if (cached_has_bits & 0x00001f00u) {
            // required .KuplungApp.ObjectCoordinate rotateY = 9;
            if (cached_has_bits & 0x00000100u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rotatey_);
            }
            // required .KuplungApp.ObjectCoordinate rotateZ = 10;
            if (cached_has_bits & 0x00000200u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rotatez_);
            }
            // required .KuplungApp.ObjectCoordinate rotateCenterX = 11;
            if (cached_has_bits & 0x00000400u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rotatecenterx_);
            }
            // required .KuplungApp.ObjectCoordinate rotateCenterY = 12;
            if (cached_has_bits & 0x00000800u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rotatecentery_);
            }
            // required .KuplungApp.ObjectCoordinate rotateCenterZ = 13;
            if (cached_has_bits & 0x00001000u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rotatecenterz_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CameraSettings::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CameraSettings*>(&to_msg);
  auto& from = static_cast<const CameraSettings&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:KuplungApp.CameraSettings)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.cameraposition_ != nullptr);
      if (_this->_impl_.cameraposition_ == nullptr) {
        _this->_impl_.cameraposition_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(arena, *from._impl_.cameraposition_);
      } else {
        _this->_impl_.cameraposition_->MergeFrom(*from._impl_.cameraposition_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.view_eye_ != nullptr);
      if (_this->_impl_.view_eye_ == nullptr) {
        _this->_impl_.view_eye_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(arena, *from._impl_.view_eye_);
      } else {
        _this->_impl_.view_eye_->MergeFrom(*from._impl_.view_eye_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.view_center_ != nullptr);
      if (_this->_impl_.view_center_ == nullptr) {
        _this->_impl_.view_center_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(arena, *from._impl_.view_center_);
      } else {
        _this->_impl_.view_center_->MergeFrom(*from._impl_.view_center_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.view_up_ != nullptr);
      if (_this->_impl_.view_up_ == nullptr) {
        _this->_impl_.view_up_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::Vec3>(arena, *from._impl_.view_up_);
      } else {
        _this->_impl_.view_up_->MergeFrom(*from._impl_.view_up_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.positionx_ != nullptr);
      if (_this->_impl_.positionx_ == nullptr) {
        _this->_impl_.positionx_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.positionx_);
      } else {
        _this->_impl_.positionx_->MergeFrom(*from._impl_.positionx_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.positiony_ != nullptr);
      if (_this->_impl_.positiony_ == nullptr) {
        _this->_impl_.positiony_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.positiony_);
      } else {
        _this->_impl_.positiony_->MergeFrom(*from._impl_.positiony_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.positionz_ != nullptr);
      if (_this->_impl_.positionz_ == nullptr) {
        _this->_impl_.positionz_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.positionz_);
      } else {
        _this->_impl_.positionz_->MergeFrom(*from._impl_.positionz_);
      }
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(from._impl_.rotatex_ != nullptr);
      if (_this->_impl_.rotatex_ == nullptr) {
        _this->_impl_.rotatex_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.rotatex_);
      } else {
        _this->_impl_.rotatex_->MergeFrom(*from._impl_.rotatex_);
      }
    }
  }
  if (cached_has_bits & 0x00001f00u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(from._impl_.rotatey_ != nullptr);
      if (_this->_impl_.rotatey_ == nullptr) {
        _this->_impl_.rotatey_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.rotatey_);
      } else {
        _this->_impl_.rotatey_->MergeFrom(*from._impl_.rotatey_);
      }
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(from._impl_.rotatez_ != nullptr);
      if (_this->_impl_.rotatez_ == nullptr) {
        _this->_impl_.rotatez_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.rotatez_);
      } else {
        _this->_impl_.rotatez_->MergeFrom(*from._impl_.rotatez_);
      }
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(from._impl_.rotatecenterx_ != nullptr);
      if (_this->_impl_.rotatecenterx_ == nullptr) {
        _this->_impl_.rotatecenterx_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.rotatecenterx_);
      } else {
        _this->_impl_.rotatecenterx_->MergeFrom(*from._impl_.rotatecenterx_);
      }
    }
    if (cached_has_bits & 0x00000800u) {
      ABSL_DCHECK(from._impl_.rotatecentery_ != nullptr);
      if (_this->_impl_.rotatecentery_ == nullptr) {
        _this->_impl_.rotatecentery_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.rotatecentery_);
      } else {
        _this->_impl_.rotatecentery_->MergeFrom(*from._impl_.rotatecentery_);
      }
    }
    if (cached_has_bits & 0x00001000u) {
      ABSL_DCHECK(from._impl_.rotatecenterz_ != nullptr);
      if (_this->_impl_.rotatecenterz_ == nullptr) {
        _this->_impl_.rotatecenterz_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.rotatecenterz_);
      } else {
        _this->_impl_.rotatecenterz_->MergeFrom(*from._impl_.rotatecenterz_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CameraSettings::CopyFrom(const CameraSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KuplungApp.CameraSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CameraSettings::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const CameraSettings&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._impl_.cameraposition_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._impl_.view_eye_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._impl_.view_center_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!this_._impl_.view_up_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (!this_._impl_.positionx_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (!this_._impl_.positiony_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (!this_._impl_.positionz_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000080u) != 0) {
    if (!this_._impl_.rotatex_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000100u) != 0) {
    if (!this_._impl_.rotatey_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000200u) != 0) {
    if (!this_._impl_.rotatez_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000400u) != 0) {
    if (!this_._impl_.rotatecenterx_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000800u) != 0) {
    if (!this_._impl_.rotatecentery_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00001000u) != 0) {
    if (!this_._impl_.rotatecenterz_->IsInitialized()) return false;
  }
  return true;
}

void CameraSettings::InternalSwap(CameraSettings* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CameraSettings, _impl_.rotatecenterz_)
      + sizeof(CameraSettings::_impl_.rotatecenterz_)
      - PROTOBUF_FIELD_OFFSET(CameraSettings, _impl_.cameraposition_)>(
          reinterpret_cast<char*>(&_impl_.cameraposition_),
          reinterpret_cast<char*>(&other->_impl_.cameraposition_));
}

::google::protobuf::Metadata CameraSettings::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GridSettings::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GridSettings>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GridSettings, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00001fff) ^ 0x00001fff) != 0;
  }
};

void GridSettings::clear_positionx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.positionx_ != nullptr) _impl_.positionx_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GridSettings::clear_positiony() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.positiony_ != nullptr) _impl_.positiony_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void GridSettings::clear_positionz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.positionz_ != nullptr) _impl_.positionz_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void GridSettings::clear_rotatex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatex_ != nullptr) _impl_.rotatex_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void GridSettings::clear_rotatey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatey_ != nullptr) _impl_.rotatey_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void GridSettings::clear_rotatez() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatez_ != nullptr) _impl_.rotatez_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void GridSettings::clear_scalex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.scalex_ != nullptr) _impl_.scalex_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void GridSettings::clear_scaley() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.scaley_ != nullptr) _impl_.scaley_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void GridSettings::clear_scalez() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.scalez_ != nullptr) _impl_.scalez_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
GridSettings::GridSettings(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:KuplungApp.GridSettings)
}
inline PROTOBUF_NDEBUG_INLINE GridSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::KuplungApp::GridSettings& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GridSettings::GridSettings(
    ::google::protobuf::Arena* arena,
    const GridSettings& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GridSettings* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.positionx_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.positionx_)
                        : nullptr;
  _impl_.positiony_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.positiony_)
                        : nullptr;
  _impl_.positionz_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.positionz_)
                        : nullptr;
  _impl_.rotatex_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.rotatex_)
                        : nullptr;
  _impl_.rotatey_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.rotatey_)
                        : nullptr;
  _impl_.rotatez_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.rotatez_)
                        : nullptr;
  _impl_.scalex_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.scalex_)
                        : nullptr;
  _impl_.scaley_ = (cached_has_bits & 0x00000080u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.scaley_)
                        : nullptr;
  _impl_.scalez_ = (cached_has_bits & 0x00000100u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.scalez_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, actasmirror_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, actasmirror_),
           offsetof(Impl_, showgrid_) -
               offsetof(Impl_, actasmirror_) +
               sizeof(Impl_::showgrid_));

  // @@protoc_insertion_point(copy_constructor:KuplungApp.GridSettings)
}
inline PROTOBUF_NDEBUG_INLINE GridSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GridSettings::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, positionx_),
           0,
           offsetof(Impl_, showgrid_) -
               offsetof(Impl_, positionx_) +
               sizeof(Impl_::showgrid_));
}
GridSettings::~GridSettings() {
  // @@protoc_insertion_point(destructor:KuplungApp.GridSettings)
  SharedDtor(*this);
}
inline void GridSettings::SharedDtor(MessageLite& self) {
  GridSettings& this_ = static_cast<GridSettings&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.positionx_;
  delete this_._impl_.positiony_;
  delete this_._impl_.positionz_;
  delete this_._impl_.rotatex_;
  delete this_._impl_.rotatey_;
  delete this_._impl_.rotatez_;
  delete this_._impl_.scalex_;
  delete this_._impl_.scaley_;
  delete this_._impl_.scalez_;
  this_._impl_.~Impl_();
}

inline void* GridSettings::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GridSettings(arena);
}
constexpr auto GridSettings::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GridSettings),
                                            alignof(GridSettings));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GridSettings::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GridSettings_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        GridSettings::IsInitializedImpl,
        &GridSettings::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GridSettings>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GridSettings::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GridSettings>(), &GridSettings::ByteSizeLong,
            &GridSettings::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GridSettings, _impl_._cached_size_),
        false,
    },
    &GridSettings::kDescriptorMethods,
    &descriptor_table_KuplungAppSettings_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GridSettings::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 9, 0, 2> GridSettings::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GridSettings, _impl_._has_bits_),
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    9,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::KuplungApp::GridSettings>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required bool actAsMirror = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GridSettings, _impl_.actasmirror_), 9>(),
     {8, 9, 0, PROTOBUF_FIELD_OFFSET(GridSettings, _impl_.actasmirror_)}},
    // required int32 gridSize = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GridSettings, _impl_.gridsize_), 10>(),
     {16, 10, 0, PROTOBUF_FIELD_OFFSET(GridSettings, _impl_.gridsize_)}},
    // required .KuplungApp.ObjectCoordinate positionX = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(GridSettings, _impl_.positionx_)}},
    // required .KuplungApp.ObjectCoordinate positionY = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(GridSettings, _impl_.positiony_)}},
    // required .KuplungApp.ObjectCoordinate positionZ = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 2, PROTOBUF_FIELD_OFFSET(GridSettings, _impl_.positionz_)}},
    // required .KuplungApp.ObjectCoordinate rotateX = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 3, 3, PROTOBUF_FIELD_OFFSET(GridSettings, _impl_.rotatex_)}},
    // required .KuplungApp.ObjectCoordinate rotateY = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 4, 4, PROTOBUF_FIELD_OFFSET(GridSettings, _impl_.rotatey_)}},
    // required .KuplungApp.ObjectCoordinate rotateZ = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 5, 5, PROTOBUF_FIELD_OFFSET(GridSettings, _impl_.rotatez_)}},
    // required .KuplungApp.ObjectCoordinate scaleX = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 6, 6, PROTOBUF_FIELD_OFFSET(GridSettings, _impl_.scalex_)}},
    // required .KuplungApp.ObjectCoordinate scaleY = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 7, 7, PROTOBUF_FIELD_OFFSET(GridSettings, _impl_.scaley_)}},
    // required .KuplungApp.ObjectCoordinate scaleZ = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 8, 8, PROTOBUF_FIELD_OFFSET(GridSettings, _impl_.scalez_)}},
    // required float transparency = 12;
    {::_pbi::TcParser::FastF32S1,
     {101, 11, 0, PROTOBUF_FIELD_OFFSET(GridSettings, _impl_.transparency_)}},
    // required int32 showGrid = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GridSettings, _impl_.showgrid_), 12>(),
     {104, 12, 0, PROTOBUF_FIELD_OFFSET(GridSettings, _impl_.showgrid_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required bool actAsMirror = 1;
    {PROTOBUF_FIELD_OFFSET(GridSettings, _impl_.actasmirror_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required int32 gridSize = 2;
    {PROTOBUF_FIELD_OFFSET(GridSettings, _impl_.gridsize_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required .KuplungApp.ObjectCoordinate positionX = 3;
    {PROTOBUF_FIELD_OFFSET(GridSettings, _impl_.positionx_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate positionY = 4;
    {PROTOBUF_FIELD_OFFSET(GridSettings, _impl_.positiony_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate positionZ = 5;
    {PROTOBUF_FIELD_OFFSET(GridSettings, _impl_.positionz_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate rotateX = 6;
    {PROTOBUF_FIELD_OFFSET(GridSettings, _impl_.rotatex_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate rotateY = 7;
    {PROTOBUF_FIELD_OFFSET(GridSettings, _impl_.rotatey_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate rotateZ = 8;
    {PROTOBUF_FIELD_OFFSET(GridSettings, _impl_.rotatez_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate scaleX = 9;
    {PROTOBUF_FIELD_OFFSET(GridSettings, _impl_.scalex_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate scaleY = 10;
    {PROTOBUF_FIELD_OFFSET(GridSettings, _impl_.scaley_), _Internal::kHasBitsOffset + 7, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate scaleZ = 11;
    {PROTOBUF_FIELD_OFFSET(GridSettings, _impl_.scalez_), _Internal::kHasBitsOffset + 8, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required float transparency = 12;
    {PROTOBUF_FIELD_OFFSET(GridSettings, _impl_.transparency_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required int32 showGrid = 13;
    {PROTOBUF_FIELD_OFFSET(GridSettings, _impl_.showgrid_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GridSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:KuplungApp.GridSettings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.positionx_ != nullptr);
      _impl_.positionx_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.positiony_ != nullptr);
      _impl_.positiony_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.positionz_ != nullptr);
      _impl_.positionz_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.rotatex_ != nullptr);
      _impl_.rotatex_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.rotatey_ != nullptr);
      _impl_.rotatey_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.rotatez_ != nullptr);
      _impl_.rotatez_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.scalex_ != nullptr);
      _impl_.scalex_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.scaley_ != nullptr);
      _impl_.scaley_->Clear();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    ABSL_DCHECK(_impl_.scalez_ != nullptr);
    _impl_.scalez_->Clear();
  }
  if (cached_has_bits & 0x00001e00u) {
    ::memset(&_impl_.actasmirror_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.showgrid_) -
        reinterpret_cast<char*>(&_impl_.actasmirror_)) + sizeof(_impl_.showgrid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GridSettings::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GridSettings& this_ = static_cast<const GridSettings&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GridSettings::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GridSettings& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:KuplungApp.GridSettings)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // required bool actAsMirror = 1;
          if (cached_has_bits & 0x00000200u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_actasmirror(), target);
          }

          // required int32 gridSize = 2;
          if (cached_has_bits & 0x00000400u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_gridsize(), target);
          }

          // required .KuplungApp.ObjectCoordinate positionX = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.positionx_, this_._impl_.positionx_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate positionY = 4;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.positiony_, this_._impl_.positiony_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate positionZ = 5;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.positionz_, this_._impl_.positionz_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate rotateX = 6;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.rotatex_, this_._impl_.rotatex_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate rotateY = 7;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.rotatey_, this_._impl_.rotatey_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate rotateZ = 8;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.rotatez_, this_._impl_.rotatez_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate scaleX = 9;
          if (cached_has_bits & 0x00000040u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.scalex_, this_._impl_.scalex_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate scaleY = 10;
          if (cached_has_bits & 0x00000080u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.scaley_, this_._impl_.scaley_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate scaleZ = 11;
          if (cached_has_bits & 0x00000100u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                11, *this_._impl_.scalez_, this_._impl_.scalez_->GetCachedSize(), target,
                stream);
          }

          // required float transparency = 12;
          if (cached_has_bits & 0x00000800u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                12, this_._internal_transparency(), target);
          }

          // required int32 showGrid = 13;
          if (cached_has_bits & 0x00001000u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<13>(
                    stream, this_._internal_showgrid(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:KuplungApp.GridSettings)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GridSettings::ByteSizeLong(const MessageLite& base) {
          const GridSettings& this_ = static_cast<const GridSettings&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GridSettings::ByteSizeLong() const {
          const GridSettings& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:KuplungApp.GridSettings)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // required .KuplungApp.ObjectCoordinate positionX = 3;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.positionx_);
            }
            // required .KuplungApp.ObjectCoordinate positionY = 4;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.positiony_);
            }
            // required .KuplungApp.ObjectCoordinate positionZ = 5;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.positionz_);
            }
            // required .KuplungApp.ObjectCoordinate rotateX = 6;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rotatex_);
            }
            // required .KuplungApp.ObjectCoordinate rotateY = 7;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rotatey_);
            }
            // required .KuplungApp.ObjectCoordinate rotateZ = 8;
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rotatez_);
            }
            // required .KuplungApp.ObjectCoordinate scaleX = 9;
            if (cached_has_bits & 0x00000040u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.scalex_);
            }
            // required .KuplungApp.ObjectCoordinate scaleY = 10;
            if (cached_has_bits & 0x00000080u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.scaley_);
            }
          }
          if (cached_has_bits & 0x00001f00u) {
            // required .KuplungApp.ObjectCoordinate scaleZ = 11;
            if (cached_has_bits & 0x00000100u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.scalez_);
            }
            // required bool actAsMirror = 1;
            if (cached_has_bits & 0x00000200u) {
              total_size += 2;
            }
            // required int32 gridSize = 2;
            if (cached_has_bits & 0x00000400u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_gridsize());
            }
            // required float transparency = 12;
            if (cached_has_bits & 0x00000800u) {
              total_size += 5;
            }
            // required int32 showGrid = 13;
            if (cached_has_bits & 0x00001000u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_showgrid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GridSettings::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GridSettings*>(&to_msg);
  auto& from = static_cast<const GridSettings&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:KuplungApp.GridSettings)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.positionx_ != nullptr);
      if (_this->_impl_.positionx_ == nullptr) {
        _this->_impl_.positionx_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.positionx_);
      } else {
        _this->_impl_.positionx_->MergeFrom(*from._impl_.positionx_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.positiony_ != nullptr);
      if (_this->_impl_.positiony_ == nullptr) {
        _this->_impl_.positiony_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.positiony_);
      } else {
        _this->_impl_.positiony_->MergeFrom(*from._impl_.positiony_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.positionz_ != nullptr);
      if (_this->_impl_.positionz_ == nullptr) {
        _this->_impl_.positionz_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.positionz_);
      } else {
        _this->_impl_.positionz_->MergeFrom(*from._impl_.positionz_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.rotatex_ != nullptr);
      if (_this->_impl_.rotatex_ == nullptr) {
        _this->_impl_.rotatex_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.rotatex_);
      } else {
        _this->_impl_.rotatex_->MergeFrom(*from._impl_.rotatex_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.rotatey_ != nullptr);
      if (_this->_impl_.rotatey_ == nullptr) {
        _this->_impl_.rotatey_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.rotatey_);
      } else {
        _this->_impl_.rotatey_->MergeFrom(*from._impl_.rotatey_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.rotatez_ != nullptr);
      if (_this->_impl_.rotatez_ == nullptr) {
        _this->_impl_.rotatez_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.rotatez_);
      } else {
        _this->_impl_.rotatez_->MergeFrom(*from._impl_.rotatez_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.scalex_ != nullptr);
      if (_this->_impl_.scalex_ == nullptr) {
        _this->_impl_.scalex_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.scalex_);
      } else {
        _this->_impl_.scalex_->MergeFrom(*from._impl_.scalex_);
      }
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(from._impl_.scaley_ != nullptr);
      if (_this->_impl_.scaley_ == nullptr) {
        _this->_impl_.scaley_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.scaley_);
      } else {
        _this->_impl_.scaley_->MergeFrom(*from._impl_.scaley_);
      }
    }
  }
  if (cached_has_bits & 0x00001f00u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(from._impl_.scalez_ != nullptr);
      if (_this->_impl_.scalez_ == nullptr) {
        _this->_impl_.scalez_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.scalez_);
      } else {
        _this->_impl_.scalez_->MergeFrom(*from._impl_.scalez_);
      }
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.actasmirror_ = from._impl_.actasmirror_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.gridsize_ = from._impl_.gridsize_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.transparency_ = from._impl_.transparency_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.showgrid_ = from._impl_.showgrid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GridSettings::CopyFrom(const GridSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KuplungApp.GridSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GridSettings::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const GridSettings&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._impl_.positionx_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._impl_.positiony_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._impl_.positionz_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!this_._impl_.rotatex_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (!this_._impl_.rotatey_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (!this_._impl_.rotatez_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (!this_._impl_.scalex_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000080u) != 0) {
    if (!this_._impl_.scaley_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000100u) != 0) {
    if (!this_._impl_.scalez_->IsInitialized()) return false;
  }
  return true;
}

void GridSettings::InternalSwap(GridSettings* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GridSettings, _impl_.showgrid_)
      + sizeof(GridSettings::_impl_.showgrid_)
      - PROTOBUF_FIELD_OFFSET(GridSettings, _impl_.positionx_)>(
          reinterpret_cast<char*>(&_impl_.positionx_),
          reinterpret_cast<char*>(&other->_impl_.positionx_));
}

::google::protobuf::Metadata GridSettings::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LightObject::_Internal {
 public:
  using HasBits =
      decltype(std::declval<LightObject>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LightObject, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x1fffffff) ^ 0x1fffffff) != 0;
  }
};

void LightObject::clear_positionx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.positionx_ != nullptr) _impl_.positionx_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void LightObject::clear_positiony() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.positiony_ != nullptr) _impl_.positiony_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void LightObject::clear_positionz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.positionz_ != nullptr) _impl_.positionz_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void LightObject::clear_directionx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.directionx_ != nullptr) _impl_.directionx_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void LightObject::clear_directiony() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.directiony_ != nullptr) _impl_.directiony_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void LightObject::clear_directionz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.directionz_ != nullptr) _impl_.directionz_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void LightObject::clear_scalex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.scalex_ != nullptr) _impl_.scalex_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
void LightObject::clear_scaley() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.scaley_ != nullptr) _impl_.scaley_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
void LightObject::clear_scalez() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.scalez_ != nullptr) _impl_.scalez_->Clear();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
void LightObject::clear_rotatex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatex_ != nullptr) _impl_.rotatex_->Clear();
  _impl_._has_bits_[0] &= ~0x00000800u;
}
void LightObject::clear_rotatey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatey_ != nullptr) _impl_.rotatey_->Clear();
  _impl_._has_bits_[0] &= ~0x00001000u;
}
void LightObject::clear_rotatez() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatez_ != nullptr) _impl_.rotatez_->Clear();
  _impl_._has_bits_[0] &= ~0x00002000u;
}
void LightObject::clear_rotatecenterx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatecenterx_ != nullptr) _impl_.rotatecenterx_->Clear();
  _impl_._has_bits_[0] &= ~0x00004000u;
}
void LightObject::clear_rotatecentery() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatecentery_ != nullptr) _impl_.rotatecentery_->Clear();
  _impl_._has_bits_[0] &= ~0x00008000u;
}
void LightObject::clear_rotatecenterz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotatecenterz_ != nullptr) _impl_.rotatecenterz_->Clear();
  _impl_._has_bits_[0] &= ~0x00010000u;
}
void LightObject::clear_ambient() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ambient_ != nullptr) _impl_.ambient_->Clear();
  _impl_._has_bits_[0] &= ~0x00020000u;
}
void LightObject::clear_diffuse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.diffuse_ != nullptr) _impl_.diffuse_->Clear();
  _impl_._has_bits_[0] &= ~0x00040000u;
}
void LightObject::clear_specular() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.specular_ != nullptr) _impl_.specular_->Clear();
  _impl_._has_bits_[0] &= ~0x00080000u;
}
void LightObject::clear_lcutoff() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lcutoff_ != nullptr) _impl_.lcutoff_->Clear();
  _impl_._has_bits_[0] &= ~0x00100000u;
}
void LightObject::clear_loutercutoff() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.loutercutoff_ != nullptr) _impl_.loutercutoff_->Clear();
  _impl_._has_bits_[0] &= ~0x00200000u;
}
void LightObject::clear_lconstant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lconstant_ != nullptr) _impl_.lconstant_->Clear();
  _impl_._has_bits_[0] &= ~0x00400000u;
}
void LightObject::clear_llinear() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.llinear_ != nullptr) _impl_.llinear_->Clear();
  _impl_._has_bits_[0] &= ~0x00800000u;
}
void LightObject::clear_lquadratic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lquadratic_ != nullptr) _impl_.lquadratic_->Clear();
  _impl_._has_bits_[0] &= ~0x01000000u;
}
LightObject::LightObject(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:KuplungApp.LightObject)
}
inline PROTOBUF_NDEBUG_INLINE LightObject::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::KuplungApp::LightObject& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        title_(arena, from.title_),
        description_(arena, from.description_) {}

LightObject::LightObject(
    ::google::protobuf::Arena* arena,
    const LightObject& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LightObject* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.positionx_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.positionx_)
                        : nullptr;
  _impl_.positiony_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.positiony_)
                        : nullptr;
  _impl_.positionz_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.positionz_)
                        : nullptr;
  _impl_.directionx_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.directionx_)
                        : nullptr;
  _impl_.directiony_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.directiony_)
                        : nullptr;
  _impl_.directionz_ = (cached_has_bits & 0x00000080u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.directionz_)
                        : nullptr;
  _impl_.scalex_ = (cached_has_bits & 0x00000100u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.scalex_)
                        : nullptr;
  _impl_.scaley_ = (cached_has_bits & 0x00000200u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.scaley_)
                        : nullptr;
  _impl_.scalez_ = (cached_has_bits & 0x00000400u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.scalez_)
                        : nullptr;
  _impl_.rotatex_ = (cached_has_bits & 0x00000800u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.rotatex_)
                        : nullptr;
  _impl_.rotatey_ = (cached_has_bits & 0x00001000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.rotatey_)
                        : nullptr;
  _impl_.rotatez_ = (cached_has_bits & 0x00002000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.rotatez_)
                        : nullptr;
  _impl_.rotatecenterx_ = (cached_has_bits & 0x00004000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.rotatecenterx_)
                        : nullptr;
  _impl_.rotatecentery_ = (cached_has_bits & 0x00008000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.rotatecentery_)
                        : nullptr;
  _impl_.rotatecenterz_ = (cached_has_bits & 0x00010000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.rotatecenterz_)
                        : nullptr;
  _impl_.ambient_ = (cached_has_bits & 0x00020000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::MaterialColor>(
                              arena, *from._impl_.ambient_)
                        : nullptr;
  _impl_.diffuse_ = (cached_has_bits & 0x00040000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::MaterialColor>(
                              arena, *from._impl_.diffuse_)
                        : nullptr;
  _impl_.specular_ = (cached_has_bits & 0x00080000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::MaterialColor>(
                              arena, *from._impl_.specular_)
                        : nullptr;
  _impl_.lcutoff_ = (cached_has_bits & 0x00100000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.lcutoff_)
                        : nullptr;
  _impl_.loutercutoff_ = (cached_has_bits & 0x00200000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.loutercutoff_)
                        : nullptr;
  _impl_.lconstant_ = (cached_has_bits & 0x00400000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.lconstant_)
                        : nullptr;
  _impl_.llinear_ = (cached_has_bits & 0x00800000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.llinear_)
                        : nullptr;
  _impl_.lquadratic_ = (cached_has_bits & 0x01000000u) ? ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(
                              arena, *from._impl_.lquadratic_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, showinwire_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::showinwire_));

  // @@protoc_insertion_point(copy_constructor:KuplungApp.LightObject)
}
inline PROTOBUF_NDEBUG_INLINE LightObject::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        title_(arena),
        description_(arena) {}

inline void LightObject::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, positionx_),
           0,
           offsetof(Impl_, showinwire_) -
               offsetof(Impl_, positionx_) +
               sizeof(Impl_::showinwire_));
}
LightObject::~LightObject() {
  // @@protoc_insertion_point(destructor:KuplungApp.LightObject)
  SharedDtor(*this);
}
inline void LightObject::SharedDtor(MessageLite& self) {
  LightObject& this_ = static_cast<LightObject&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.title_.Destroy();
  this_._impl_.description_.Destroy();
  delete this_._impl_.positionx_;
  delete this_._impl_.positiony_;
  delete this_._impl_.positionz_;
  delete this_._impl_.directionx_;
  delete this_._impl_.directiony_;
  delete this_._impl_.directionz_;
  delete this_._impl_.scalex_;
  delete this_._impl_.scaley_;
  delete this_._impl_.scalez_;
  delete this_._impl_.rotatex_;
  delete this_._impl_.rotatey_;
  delete this_._impl_.rotatez_;
  delete this_._impl_.rotatecenterx_;
  delete this_._impl_.rotatecentery_;
  delete this_._impl_.rotatecenterz_;
  delete this_._impl_.ambient_;
  delete this_._impl_.diffuse_;
  delete this_._impl_.specular_;
  delete this_._impl_.lcutoff_;
  delete this_._impl_.loutercutoff_;
  delete this_._impl_.lconstant_;
  delete this_._impl_.llinear_;
  delete this_._impl_.lquadratic_;
  this_._impl_.~Impl_();
}

inline void* LightObject::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LightObject(arena);
}
constexpr auto LightObject::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(LightObject),
                                            alignof(LightObject));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LightObject::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LightObject_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        LightObject::IsInitializedImpl,
        &LightObject::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LightObject>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LightObject::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LightObject>(), &LightObject::ByteSizeLong,
            &LightObject::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LightObject, _impl_._cached_size_),
        false,
    },
    &LightObject::kDescriptorMethods,
    &descriptor_table_KuplungAppSettings_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LightObject::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 29, 23, 71, 2> LightObject::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LightObject, _impl_._has_bits_),
    0, // no _extensions_
    29, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    3758096384,  // skipmap
    offsetof(decltype(_table_), field_entries),
    29,  // num_field_entries
    23,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::KuplungApp::LightObject>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string title = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LightObject, _impl_.title_)}},
    // required string description = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(LightObject, _impl_.description_)}},
    // required int32 type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LightObject, _impl_.type_), 25>(),
     {24, 25, 0, PROTOBUF_FIELD_OFFSET(LightObject, _impl_.type_)}},
    // required bool showLampObject = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(LightObject, _impl_.showlampobject_), 26>(),
     {32, 26, 0, PROTOBUF_FIELD_OFFSET(LightObject, _impl_.showlampobject_)}},
    // required bool showLampDirection = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(LightObject, _impl_.showlampdirection_), 27>(),
     {40, 27, 0, PROTOBUF_FIELD_OFFSET(LightObject, _impl_.showlampdirection_)}},
    // required bool showInWire = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(LightObject, _impl_.showinwire_), 28>(),
     {48, 28, 0, PROTOBUF_FIELD_OFFSET(LightObject, _impl_.showinwire_)}},
    // required .KuplungApp.ObjectCoordinate positionX = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 0, PROTOBUF_FIELD_OFFSET(LightObject, _impl_.positionx_)}},
    // required .KuplungApp.ObjectCoordinate positionY = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 3, 1, PROTOBUF_FIELD_OFFSET(LightObject, _impl_.positiony_)}},
    // required .KuplungApp.ObjectCoordinate positionZ = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 4, 2, PROTOBUF_FIELD_OFFSET(LightObject, _impl_.positionz_)}},
    // required .KuplungApp.ObjectCoordinate directionX = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 5, 3, PROTOBUF_FIELD_OFFSET(LightObject, _impl_.directionx_)}},
    // required .KuplungApp.ObjectCoordinate directionY = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 6, 4, PROTOBUF_FIELD_OFFSET(LightObject, _impl_.directiony_)}},
    // required .KuplungApp.ObjectCoordinate directionZ = 12;
    {::_pbi::TcParser::FastMtS1,
     {98, 7, 5, PROTOBUF_FIELD_OFFSET(LightObject, _impl_.directionz_)}},
    // required .KuplungApp.ObjectCoordinate scaleX = 13;
    {::_pbi::TcParser::FastMtS1,
     {106, 8, 6, PROTOBUF_FIELD_OFFSET(LightObject, _impl_.scalex_)}},
    // required .KuplungApp.ObjectCoordinate scaleY = 14;
    {::_pbi::TcParser::FastMtS1,
     {114, 9, 7, PROTOBUF_FIELD_OFFSET(LightObject, _impl_.scaley_)}},
    // required .KuplungApp.ObjectCoordinate scaleZ = 15;
    {::_pbi::TcParser::FastMtS1,
     {122, 10, 8, PROTOBUF_FIELD_OFFSET(LightObject, _impl_.scalez_)}},
    // required .KuplungApp.ObjectCoordinate rotateX = 16;
    {::_pbi::TcParser::FastMtS2,
     {386, 11, 9, PROTOBUF_FIELD_OFFSET(LightObject, _impl_.rotatex_)}},
    // required .KuplungApp.ObjectCoordinate rotateY = 17;
    {::_pbi::TcParser::FastMtS2,
     {394, 12, 10, PROTOBUF_FIELD_OFFSET(LightObject, _impl_.rotatey_)}},
    // required .KuplungApp.ObjectCoordinate rotateZ = 18;
    {::_pbi::TcParser::FastMtS2,
     {402, 13, 11, PROTOBUF_FIELD_OFFSET(LightObject, _impl_.rotatez_)}},
    // required .KuplungApp.ObjectCoordinate rotateCenterX = 19;
    {::_pbi::TcParser::FastMtS2,
     {410, 14, 12, PROTOBUF_FIELD_OFFSET(LightObject, _impl_.rotatecenterx_)}},
    // required .KuplungApp.ObjectCoordinate rotateCenterY = 20;
    {::_pbi::TcParser::FastMtS2,
     {418, 15, 13, PROTOBUF_FIELD_OFFSET(LightObject, _impl_.rotatecentery_)}},
    // required .KuplungApp.ObjectCoordinate rotateCenterZ = 21;
    {::_pbi::TcParser::FastMtS2,
     {426, 16, 14, PROTOBUF_FIELD_OFFSET(LightObject, _impl_.rotatecenterz_)}},
    // required .KuplungApp.MaterialColor ambient = 22;
    {::_pbi::TcParser::FastMtS2,
     {434, 17, 15, PROTOBUF_FIELD_OFFSET(LightObject, _impl_.ambient_)}},
    // required .KuplungApp.MaterialColor diffuse = 23;
    {::_pbi::TcParser::FastMtS2,
     {442, 18, 16, PROTOBUF_FIELD_OFFSET(LightObject, _impl_.diffuse_)}},
    // required .KuplungApp.MaterialColor specular = 24;
    {::_pbi::TcParser::FastMtS2,
     {450, 19, 17, PROTOBUF_FIELD_OFFSET(LightObject, _impl_.specular_)}},
    // required .KuplungApp.ObjectCoordinate lCutOff = 25;
    {::_pbi::TcParser::FastMtS2,
     {458, 20, 18, PROTOBUF_FIELD_OFFSET(LightObject, _impl_.lcutoff_)}},
    // required .KuplungApp.ObjectCoordinate lOuterCutOff = 26;
    {::_pbi::TcParser::FastMtS2,
     {466, 21, 19, PROTOBUF_FIELD_OFFSET(LightObject, _impl_.loutercutoff_)}},
    // required .KuplungApp.ObjectCoordinate lConstant = 27;
    {::_pbi::TcParser::FastMtS2,
     {474, 22, 20, PROTOBUF_FIELD_OFFSET(LightObject, _impl_.lconstant_)}},
    // required .KuplungApp.ObjectCoordinate lLinear = 28;
    {::_pbi::TcParser::FastMtS2,
     {482, 23, 21, PROTOBUF_FIELD_OFFSET(LightObject, _impl_.llinear_)}},
    // required .KuplungApp.ObjectCoordinate lQuadratic = 29;
    {::_pbi::TcParser::FastMtS2,
     {490, 24, 22, PROTOBUF_FIELD_OFFSET(LightObject, _impl_.lquadratic_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string title = 1;
    {PROTOBUF_FIELD_OFFSET(LightObject, _impl_.title_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string description = 2;
    {PROTOBUF_FIELD_OFFSET(LightObject, _impl_.description_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required int32 type = 3;
    {PROTOBUF_FIELD_OFFSET(LightObject, _impl_.type_), _Internal::kHasBitsOffset + 25, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required bool showLampObject = 4;
    {PROTOBUF_FIELD_OFFSET(LightObject, _impl_.showlampobject_), _Internal::kHasBitsOffset + 26, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required bool showLampDirection = 5;
    {PROTOBUF_FIELD_OFFSET(LightObject, _impl_.showlampdirection_), _Internal::kHasBitsOffset + 27, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required bool showInWire = 6;
    {PROTOBUF_FIELD_OFFSET(LightObject, _impl_.showinwire_), _Internal::kHasBitsOffset + 28, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required .KuplungApp.ObjectCoordinate positionX = 7;
    {PROTOBUF_FIELD_OFFSET(LightObject, _impl_.positionx_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate positionY = 8;
    {PROTOBUF_FIELD_OFFSET(LightObject, _impl_.positiony_), _Internal::kHasBitsOffset + 3, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate positionZ = 9;
    {PROTOBUF_FIELD_OFFSET(LightObject, _impl_.positionz_), _Internal::kHasBitsOffset + 4, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate directionX = 10;
    {PROTOBUF_FIELD_OFFSET(LightObject, _impl_.directionx_), _Internal::kHasBitsOffset + 5, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate directionY = 11;
    {PROTOBUF_FIELD_OFFSET(LightObject, _impl_.directiony_), _Internal::kHasBitsOffset + 6, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate directionZ = 12;
    {PROTOBUF_FIELD_OFFSET(LightObject, _impl_.directionz_), _Internal::kHasBitsOffset + 7, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate scaleX = 13;
    {PROTOBUF_FIELD_OFFSET(LightObject, _impl_.scalex_), _Internal::kHasBitsOffset + 8, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate scaleY = 14;
    {PROTOBUF_FIELD_OFFSET(LightObject, _impl_.scaley_), _Internal::kHasBitsOffset + 9, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate scaleZ = 15;
    {PROTOBUF_FIELD_OFFSET(LightObject, _impl_.scalez_), _Internal::kHasBitsOffset + 10, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate rotateX = 16;
    {PROTOBUF_FIELD_OFFSET(LightObject, _impl_.rotatex_), _Internal::kHasBitsOffset + 11, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate rotateY = 17;
    {PROTOBUF_FIELD_OFFSET(LightObject, _impl_.rotatey_), _Internal::kHasBitsOffset + 12, 10,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate rotateZ = 18;
    {PROTOBUF_FIELD_OFFSET(LightObject, _impl_.rotatez_), _Internal::kHasBitsOffset + 13, 11,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate rotateCenterX = 19;
    {PROTOBUF_FIELD_OFFSET(LightObject, _impl_.rotatecenterx_), _Internal::kHasBitsOffset + 14, 12,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate rotateCenterY = 20;
    {PROTOBUF_FIELD_OFFSET(LightObject, _impl_.rotatecentery_), _Internal::kHasBitsOffset + 15, 13,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate rotateCenterZ = 21;
    {PROTOBUF_FIELD_OFFSET(LightObject, _impl_.rotatecenterz_), _Internal::kHasBitsOffset + 16, 14,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.MaterialColor ambient = 22;
    {PROTOBUF_FIELD_OFFSET(LightObject, _impl_.ambient_), _Internal::kHasBitsOffset + 17, 15,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.MaterialColor diffuse = 23;
    {PROTOBUF_FIELD_OFFSET(LightObject, _impl_.diffuse_), _Internal::kHasBitsOffset + 18, 16,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.MaterialColor specular = 24;
    {PROTOBUF_FIELD_OFFSET(LightObject, _impl_.specular_), _Internal::kHasBitsOffset + 19, 17,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate lCutOff = 25;
    {PROTOBUF_FIELD_OFFSET(LightObject, _impl_.lcutoff_), _Internal::kHasBitsOffset + 20, 18,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate lOuterCutOff = 26;
    {PROTOBUF_FIELD_OFFSET(LightObject, _impl_.loutercutoff_), _Internal::kHasBitsOffset + 21, 19,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate lConstant = 27;
    {PROTOBUF_FIELD_OFFSET(LightObject, _impl_.lconstant_), _Internal::kHasBitsOffset + 22, 20,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate lLinear = 28;
    {PROTOBUF_FIELD_OFFSET(LightObject, _impl_.llinear_), _Internal::kHasBitsOffset + 23, 21,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .KuplungApp.ObjectCoordinate lQuadratic = 29;
    {PROTOBUF_FIELD_OFFSET(LightObject, _impl_.lquadratic_), _Internal::kHasBitsOffset + 24, 22,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::MaterialColor>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::MaterialColor>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::MaterialColor>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
    {::_pbi::TcParser::GetTable<::KuplungApp::ObjectCoordinate>()},
  }}, {{
    "\26\5\13\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "KuplungApp.LightObject"
    "title"
    "description"
  }},
};

PROTOBUF_NOINLINE void LightObject::Clear() {
// @@protoc_insertion_point(message_clear_start:KuplungApp.LightObject)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.positionx_ != nullptr);
      _impl_.positionx_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.positiony_ != nullptr);
      _impl_.positiony_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.positionz_ != nullptr);
      _impl_.positionz_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.directionx_ != nullptr);
      _impl_.directionx_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.directiony_ != nullptr);
      _impl_.directiony_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.directionz_ != nullptr);
      _impl_.directionz_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(_impl_.scalex_ != nullptr);
      _impl_.scalex_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(_impl_.scaley_ != nullptr);
      _impl_.scaley_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(_impl_.scalez_ != nullptr);
      _impl_.scalez_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      ABSL_DCHECK(_impl_.rotatex_ != nullptr);
      _impl_.rotatex_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      ABSL_DCHECK(_impl_.rotatey_ != nullptr);
      _impl_.rotatey_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      ABSL_DCHECK(_impl_.rotatez_ != nullptr);
      _impl_.rotatez_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      ABSL_DCHECK(_impl_.rotatecenterx_ != nullptr);
      _impl_.rotatecenterx_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      ABSL_DCHECK(_impl_.rotatecentery_ != nullptr);
      _impl_.rotatecentery_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      ABSL_DCHECK(_impl_.rotatecenterz_ != nullptr);
      _impl_.rotatecenterz_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      ABSL_DCHECK(_impl_.ambient_ != nullptr);
      _impl_.ambient_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      ABSL_DCHECK(_impl_.diffuse_ != nullptr);
      _impl_.diffuse_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      ABSL_DCHECK(_impl_.specular_ != nullptr);
      _impl_.specular_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      ABSL_DCHECK(_impl_.lcutoff_ != nullptr);
      _impl_.lcutoff_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      ABSL_DCHECK(_impl_.loutercutoff_ != nullptr);
      _impl_.loutercutoff_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      ABSL_DCHECK(_impl_.lconstant_ != nullptr);
      _impl_.lconstant_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      ABSL_DCHECK(_impl_.llinear_ != nullptr);
      _impl_.llinear_->Clear();
    }
  }
  if (cached_has_bits & 0x01000000u) {
    ABSL_DCHECK(_impl_.lquadratic_ != nullptr);
    _impl_.lquadratic_->Clear();
  }
  if (cached_has_bits & 0x1e000000u) {
    ::memset(&_impl_.type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.showinwire_) -
        reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.showinwire_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LightObject::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LightObject& this_ = static_cast<const LightObject&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LightObject::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LightObject& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:KuplungApp.LightObject)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // required string title = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_title();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "KuplungApp.LightObject.title");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // required string description = 2;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "KuplungApp.LightObject.description");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // required int32 type = 3;
          if (cached_has_bits & 0x02000000u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_type(), target);
          }

          // required bool showLampObject = 4;
          if (cached_has_bits & 0x04000000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_showlampobject(), target);
          }

          // required bool showLampDirection = 5;
          if (cached_has_bits & 0x08000000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_showlampdirection(), target);
          }

          // required bool showInWire = 6;
          if (cached_has_bits & 0x10000000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_showinwire(), target);
          }

          // required .KuplungApp.ObjectCoordinate positionX = 7;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.positionx_, this_._impl_.positionx_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate positionY = 8;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.positiony_, this_._impl_.positiony_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate positionZ = 9;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.positionz_, this_._impl_.positionz_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate directionX = 10;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.directionx_, this_._impl_.directionx_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate directionY = 11;
          if (cached_has_bits & 0x00000040u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                11, *this_._impl_.directiony_, this_._impl_.directiony_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate directionZ = 12;
          if (cached_has_bits & 0x00000080u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                12, *this_._impl_.directionz_, this_._impl_.directionz_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate scaleX = 13;
          if (cached_has_bits & 0x00000100u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                13, *this_._impl_.scalex_, this_._impl_.scalex_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate scaleY = 14;
          if (cached_has_bits & 0x00000200u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                14, *this_._impl_.scaley_, this_._impl_.scaley_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate scaleZ = 15;
          if (cached_has_bits & 0x00000400u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                15, *this_._impl_.scalez_, this_._impl_.scalez_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate rotateX = 16;
          if (cached_has_bits & 0x00000800u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                16, *this_._impl_.rotatex_, this_._impl_.rotatex_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate rotateY = 17;
          if (cached_has_bits & 0x00001000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                17, *this_._impl_.rotatey_, this_._impl_.rotatey_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate rotateZ = 18;
          if (cached_has_bits & 0x00002000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                18, *this_._impl_.rotatez_, this_._impl_.rotatez_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate rotateCenterX = 19;
          if (cached_has_bits & 0x00004000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                19, *this_._impl_.rotatecenterx_, this_._impl_.rotatecenterx_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate rotateCenterY = 20;
          if (cached_has_bits & 0x00008000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                20, *this_._impl_.rotatecentery_, this_._impl_.rotatecentery_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate rotateCenterZ = 21;
          if (cached_has_bits & 0x00010000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                21, *this_._impl_.rotatecenterz_, this_._impl_.rotatecenterz_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.MaterialColor ambient = 22;
          if (cached_has_bits & 0x00020000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                22, *this_._impl_.ambient_, this_._impl_.ambient_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.MaterialColor diffuse = 23;
          if (cached_has_bits & 0x00040000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                23, *this_._impl_.diffuse_, this_._impl_.diffuse_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.MaterialColor specular = 24;
          if (cached_has_bits & 0x00080000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                24, *this_._impl_.specular_, this_._impl_.specular_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate lCutOff = 25;
          if (cached_has_bits & 0x00100000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                25, *this_._impl_.lcutoff_, this_._impl_.lcutoff_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate lOuterCutOff = 26;
          if (cached_has_bits & 0x00200000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                26, *this_._impl_.loutercutoff_, this_._impl_.loutercutoff_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate lConstant = 27;
          if (cached_has_bits & 0x00400000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                27, *this_._impl_.lconstant_, this_._impl_.lconstant_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate lLinear = 28;
          if (cached_has_bits & 0x00800000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                28, *this_._impl_.llinear_, this_._impl_.llinear_->GetCachedSize(), target,
                stream);
          }

          // required .KuplungApp.ObjectCoordinate lQuadratic = 29;
          if (cached_has_bits & 0x01000000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                29, *this_._impl_.lquadratic_, this_._impl_.lquadratic_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:KuplungApp.LightObject)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LightObject::ByteSizeLong(const MessageLite& base) {
          const LightObject& this_ = static_cast<const LightObject&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LightObject::ByteSizeLong() const {
          const LightObject& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:KuplungApp.LightObject)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // required string title = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_title());
            }
            // required string description = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
            // required .KuplungApp.ObjectCoordinate positionX = 7;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.positionx_);
            }
            // required .KuplungApp.ObjectCoordinate positionY = 8;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.positiony_);
            }
            // required .KuplungApp.ObjectCoordinate positionZ = 9;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.positionz_);
            }
            // required .KuplungApp.ObjectCoordinate directionX = 10;
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.directionx_);
            }
            // required .KuplungApp.ObjectCoordinate directionY = 11;
            if (cached_has_bits & 0x00000040u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.directiony_);
            }
            // required .KuplungApp.ObjectCoordinate directionZ = 12;
            if (cached_has_bits & 0x00000080u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.directionz_);
            }
          }
          if (cached_has_bits & 0x0000ff00u) {
            // required .KuplungApp.ObjectCoordinate scaleX = 13;
            if (cached_has_bits & 0x00000100u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.scalex_);
            }
            // required .KuplungApp.ObjectCoordinate scaleY = 14;
            if (cached_has_bits & 0x00000200u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.scaley_);
            }
            // required .KuplungApp.ObjectCoordinate scaleZ = 15;
            if (cached_has_bits & 0x00000400u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.scalez_);
            }
            // required .KuplungApp.ObjectCoordinate rotateX = 16;
            if (cached_has_bits & 0x00000800u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rotatex_);
            }
            // required .KuplungApp.ObjectCoordinate rotateY = 17;
            if (cached_has_bits & 0x00001000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rotatey_);
            }
            // required .KuplungApp.ObjectCoordinate rotateZ = 18;
            if (cached_has_bits & 0x00002000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rotatez_);
            }
            // required .KuplungApp.ObjectCoordinate rotateCenterX = 19;
            if (cached_has_bits & 0x00004000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rotatecenterx_);
            }
            // required .KuplungApp.ObjectCoordinate rotateCenterY = 20;
            if (cached_has_bits & 0x00008000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rotatecentery_);
            }
          }
          if (cached_has_bits & 0x00ff0000u) {
            // required .KuplungApp.ObjectCoordinate rotateCenterZ = 21;
            if (cached_has_bits & 0x00010000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rotatecenterz_);
            }
            // required .KuplungApp.MaterialColor ambient = 22;
            if (cached_has_bits & 0x00020000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ambient_);
            }
            // required .KuplungApp.MaterialColor diffuse = 23;
            if (cached_has_bits & 0x00040000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.diffuse_);
            }
            // required .KuplungApp.MaterialColor specular = 24;
            if (cached_has_bits & 0x00080000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.specular_);
            }
            // required .KuplungApp.ObjectCoordinate lCutOff = 25;
            if (cached_has_bits & 0x00100000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.lcutoff_);
            }
            // required .KuplungApp.ObjectCoordinate lOuterCutOff = 26;
            if (cached_has_bits & 0x00200000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.loutercutoff_);
            }
            // required .KuplungApp.ObjectCoordinate lConstant = 27;
            if (cached_has_bits & 0x00400000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.lconstant_);
            }
            // required .KuplungApp.ObjectCoordinate lLinear = 28;
            if (cached_has_bits & 0x00800000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.llinear_);
            }
          }
          if (cached_has_bits & 0x1f000000u) {
            // required .KuplungApp.ObjectCoordinate lQuadratic = 29;
            if (cached_has_bits & 0x01000000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.lquadratic_);
            }
            // required int32 type = 3;
            if (cached_has_bits & 0x02000000u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_type());
            }
            // required bool showLampObject = 4;
            if (cached_has_bits & 0x04000000u) {
              total_size += 2;
            }
            // required bool showLampDirection = 5;
            if (cached_has_bits & 0x08000000u) {
              total_size += 2;
            }
            // required bool showInWire = 6;
            if (cached_has_bits & 0x10000000u) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LightObject::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LightObject*>(&to_msg);
  auto& from = static_cast<const LightObject&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:KuplungApp.LightObject)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_description(from._internal_description());
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.positionx_ != nullptr);
      if (_this->_impl_.positionx_ == nullptr) {
        _this->_impl_.positionx_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.positionx_);
      } else {
        _this->_impl_.positionx_->MergeFrom(*from._impl_.positionx_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.positiony_ != nullptr);
      if (_this->_impl_.positiony_ == nullptr) {
        _this->_impl_.positiony_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.positiony_);
      } else {
        _this->_impl_.positiony_->MergeFrom(*from._impl_.positiony_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.positionz_ != nullptr);
      if (_this->_impl_.positionz_ == nullptr) {
        _this->_impl_.positionz_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.positionz_);
      } else {
        _this->_impl_.positionz_->MergeFrom(*from._impl_.positionz_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.directionx_ != nullptr);
      if (_this->_impl_.directionx_ == nullptr) {
        _this->_impl_.directionx_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.directionx_);
      } else {
        _this->_impl_.directionx_->MergeFrom(*from._impl_.directionx_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.directiony_ != nullptr);
      if (_this->_impl_.directiony_ == nullptr) {
        _this->_impl_.directiony_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.directiony_);
      } else {
        _this->_impl_.directiony_->MergeFrom(*from._impl_.directiony_);
      }
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(from._impl_.directionz_ != nullptr);
      if (_this->_impl_.directionz_ == nullptr) {
        _this->_impl_.directionz_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.directionz_);
      } else {
        _this->_impl_.directionz_->MergeFrom(*from._impl_.directionz_);
      }
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(from._impl_.scalex_ != nullptr);
      if (_this->_impl_.scalex_ == nullptr) {
        _this->_impl_.scalex_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.scalex_);
      } else {
        _this->_impl_.scalex_->MergeFrom(*from._impl_.scalex_);
      }
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(from._impl_.scaley_ != nullptr);
      if (_this->_impl_.scaley_ == nullptr) {
        _this->_impl_.scaley_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.scaley_);
      } else {
        _this->_impl_.scaley_->MergeFrom(*from._impl_.scaley_);
      }
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(from._impl_.scalez_ != nullptr);
      if (_this->_impl_.scalez_ == nullptr) {
        _this->_impl_.scalez_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.scalez_);
      } else {
        _this->_impl_.scalez_->MergeFrom(*from._impl_.scalez_);
      }
    }
    if (cached_has_bits & 0x00000800u) {
      ABSL_DCHECK(from._impl_.rotatex_ != nullptr);
      if (_this->_impl_.rotatex_ == nullptr) {
        _this->_impl_.rotatex_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.rotatex_);
      } else {
        _this->_impl_.rotatex_->MergeFrom(*from._impl_.rotatex_);
      }
    }
    if (cached_has_bits & 0x00001000u) {
      ABSL_DCHECK(from._impl_.rotatey_ != nullptr);
      if (_this->_impl_.rotatey_ == nullptr) {
        _this->_impl_.rotatey_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.rotatey_);
      } else {
        _this->_impl_.rotatey_->MergeFrom(*from._impl_.rotatey_);
      }
    }
    if (cached_has_bits & 0x00002000u) {
      ABSL_DCHECK(from._impl_.rotatez_ != nullptr);
      if (_this->_impl_.rotatez_ == nullptr) {
        _this->_impl_.rotatez_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.rotatez_);
      } else {
        _this->_impl_.rotatez_->MergeFrom(*from._impl_.rotatez_);
      }
    }
    if (cached_has_bits & 0x00004000u) {
      ABSL_DCHECK(from._impl_.rotatecenterx_ != nullptr);
      if (_this->_impl_.rotatecenterx_ == nullptr) {
        _this->_impl_.rotatecenterx_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.rotatecenterx_);
      } else {
        _this->_impl_.rotatecenterx_->MergeFrom(*from._impl_.rotatecenterx_);
      }
    }
    if (cached_has_bits & 0x00008000u) {
      ABSL_DCHECK(from._impl_.rotatecentery_ != nullptr);
      if (_this->_impl_.rotatecentery_ == nullptr) {
        _this->_impl_.rotatecentery_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.rotatecentery_);
      } else {
        _this->_impl_.rotatecentery_->MergeFrom(*from._impl_.rotatecentery_);
      }
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      ABSL_DCHECK(from._impl_.rotatecenterz_ != nullptr);
      if (_this->_impl_.rotatecenterz_ == nullptr) {
        _this->_impl_.rotatecenterz_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.rotatecenterz_);
      } else {
        _this->_impl_.rotatecenterz_->MergeFrom(*from._impl_.rotatecenterz_);
      }
    }
    if (cached_has_bits & 0x00020000u) {
      ABSL_DCHECK(from._impl_.ambient_ != nullptr);
      if (_this->_impl_.ambient_ == nullptr) {
        _this->_impl_.ambient_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::MaterialColor>(arena, *from._impl_.ambient_);
      } else {
        _this->_impl_.ambient_->MergeFrom(*from._impl_.ambient_);
      }
    }
    if (cached_has_bits & 0x00040000u) {
      ABSL_DCHECK(from._impl_.diffuse_ != nullptr);
      if (_this->_impl_.diffuse_ == nullptr) {
        _this->_impl_.diffuse_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::MaterialColor>(arena, *from._impl_.diffuse_);
      } else {
        _this->_impl_.diffuse_->MergeFrom(*from._impl_.diffuse_);
      }
    }
    if (cached_has_bits & 0x00080000u) {
      ABSL_DCHECK(from._impl_.specular_ != nullptr);
      if (_this->_impl_.specular_ == nullptr) {
        _this->_impl_.specular_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::MaterialColor>(arena, *from._impl_.specular_);
      } else {
        _this->_impl_.specular_->MergeFrom(*from._impl_.specular_);
      }
    }
    if (cached_has_bits & 0x00100000u) {
      ABSL_DCHECK(from._impl_.lcutoff_ != nullptr);
      if (_this->_impl_.lcutoff_ == nullptr) {
        _this->_impl_.lcutoff_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.lcutoff_);
      } else {
        _this->_impl_.lcutoff_->MergeFrom(*from._impl_.lcutoff_);
      }
    }
    if (cached_has_bits & 0x00200000u) {
      ABSL_DCHECK(from._impl_.loutercutoff_ != nullptr);
      if (_this->_impl_.loutercutoff_ == nullptr) {
        _this->_impl_.loutercutoff_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.loutercutoff_);
      } else {
        _this->_impl_.loutercutoff_->MergeFrom(*from._impl_.loutercutoff_);
      }
    }
    if (cached_has_bits & 0x00400000u) {
      ABSL_DCHECK(from._impl_.lconstant_ != nullptr);
      if (_this->_impl_.lconstant_ == nullptr) {
        _this->_impl_.lconstant_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.lconstant_);
      } else {
        _this->_impl_.lconstant_->MergeFrom(*from._impl_.lconstant_);
      }
    }
    if (cached_has_bits & 0x00800000u) {
      ABSL_DCHECK(from._impl_.llinear_ != nullptr);
      if (_this->_impl_.llinear_ == nullptr) {
        _this->_impl_.llinear_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.llinear_);
      } else {
        _this->_impl_.llinear_->MergeFrom(*from._impl_.llinear_);
      }
    }
  }
  if (cached_has_bits & 0x1f000000u) {
    if (cached_has_bits & 0x01000000u) {
      ABSL_DCHECK(from._impl_.lquadratic_ != nullptr);
      if (_this->_impl_.lquadratic_ == nullptr) {
        _this->_impl_.lquadratic_ =
            ::google::protobuf::Message::CopyConstruct<::KuplungApp::ObjectCoordinate>(arena, *from._impl_.lquadratic_);
      } else {
        _this->_impl_.lquadratic_->MergeFrom(*from._impl_.lquadratic_);
      }
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.showlampobject_ = from._impl_.showlampobject_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.showlampdirection_ = from._impl_.showlampdirection_;
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_impl_.showinwire_ = from._impl_.showinwire_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LightObject::CopyFrom(const LightObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KuplungApp.LightObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LightObject::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const LightObject&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._impl_.positionx_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!this_._impl_.positiony_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (!this_._impl_.positionz_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (!this_._impl_.directionx_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (!this_._impl_.directiony_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000080u) != 0) {
    if (!this_._impl_.directionz_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000100u) != 0) {
    if (!this_._impl_.scalex_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000200u) != 0) {
    if (!this_._impl_.scaley_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000400u) != 0) {
    if (!this_._impl_.scalez_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000800u) != 0) {
    if (!this_._impl_.rotatex_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00001000u) != 0) {
    if (!this_._impl_.rotatey_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00002000u) != 0) {
    if (!this_._impl_.rotatez_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00004000u) != 0) {
    if (!this_._impl_.rotatecenterx_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00008000u) != 0) {
    if (!this_._impl_.rotatecentery_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00010000u) != 0) {
    if (!this_._impl_.rotatecenterz_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00020000u) != 0) {
    if (!this_._impl_.ambient_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00040000u) != 0) {
    if (!this_._impl_.diffuse_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00080000u) != 0) {
    if (!this_._impl_.specular_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00100000u) != 0) {
    if (!this_._impl_.lcutoff_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00200000u) != 0) {
    if (!this_._impl_.loutercutoff_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00400000u) != 0) {
    if (!this_._impl_.lconstant_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00800000u) != 0) {
    if (!this_._impl_.llinear_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x01000000u) != 0) {
    if (!this_._impl_.lquadratic_->IsInitialized()) return false;
  }
  return true;
}

void LightObject::InternalSwap(LightObject* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LightObject, _impl_.showinwire_)
      + sizeof(LightObject::_impl_.showinwire_)
      - PROTOBUF_FIELD_OFFSET(LightObject, _impl_.positionx_)>(
          reinterpret_cast<char*>(&_impl_.positionx_),
          reinterpret_cast<char*>(&other->_impl_.positionx_));
}

::google::protobuf::Metadata LightObject::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace KuplungApp
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_KuplungAppSettings_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
